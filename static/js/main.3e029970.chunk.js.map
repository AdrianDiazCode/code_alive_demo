{"version":3,"sources":["components/code_editors/js/interpreter/nearley_lexer.js","logo.svg","components/code_editors/js/interpreter/nearley_grammar.js","components/code_editors/js/interpreter/nearley_post_processors_with_types.js","redux/reducers/globals_reducer.js","redux/actions/change_code.js","redux/actions/set_selection_status.js","redux/actions/set_replacement.js","redux/actions/clear_replacements.js","redux/store.js","components/code_editors/js/interpreter/parsing_files/expression_value_types.ts","components/code_editors/js/interpreter/internal_members.ts","components/code_editors/js/interpreter/parsing_files/default_expression_values.ts","components/code_editors/js/interpreter/parsing_files/expression_value_converter.ts","components/code_editors/js/interpreter/parsing_files/variable.ts","components/code_editors/js/interpreter/parsing_files/scope_objects.ts","components/code_editors/js/interpreter/ast_types.ts","components/code_editors/js/interpreter/ast_executer.ts","components/code_animators/animation_state_types.ts","components/code_animators/animation_effects/add_to_scope.ts","components/code_animators/get_representation_levels.ts","components/code_animators/animation_effects/expand_icons/eye.ts","components/code_editors/js/ast_components/TokenComponent.tsx","components/code_editors/js/ast_components/ASTComponent.tsx","components/code_animators/animation_effects/create_ast_expand_struct.ts","components/code_animators/animation_effects/create_scope_var_element.ts","components/code_animators/animation_effects/drag_one_element_to_another.ts","components/code_animators/animation_effects/remove_from_scope.ts","components/code_animators/animation_effects/scroll_to.ts","components/code_animators/animation_effects/vertical_expand.ts","components/code_animators/step_creators/add_to_scope_step_creator.ts","components/code_animators/animation_effects/set_replacement.ts","components/code_animators/step_creators/get_element_from_ast.ts","components/code_animators/step_creators/before_function_call_step_creator.ts","components/code_animators/animation_effects/add_or_remove_class_to_text_containers.ts","components/code_animators/animation_effects/highlight_element.ts","components/code_animators/animation_effects/search_identifier_effect.ts","components/code_animators/animation_effects/variable_search_files/search.ts","components/code_animators/animation_effects/create_scope.ts","components/code_animators/step_creators/restore_state.ts","components/code_animators/animation_effects/highlight_ast_object.ts","components/code_animators/step_creators/evaluation_replacement_step_creator.ts","components/code_animators/animation_effects/remove_scope.ts","components/code_animators/step_creators/new_scope_step_creator.ts","components/code_animators/step_creators/for_loop_restoration_step_creator.ts","components/code_animators/animation_effects/fade_in.ts","components/code_animators/animation_effects/fade_out.ts","components/code_animators/animation_effects/hide_scope.ts","components/code_animators/animation_effects/show_scope.ts","components/code_animators/step_creators/starting_step_creator.ts","components/code_animators/step_creators/ending_step_creator.ts","components/code_animators/animation_effects/clear_highlights.ts","components/code_animators/step_creators/assignment_step_creator.ts","components/code_animators/step_creators/index_evaluation_step_creator.ts","components/code_animators/step_creators/value_update_step_creator.ts","components/code_animators/merge_steps.ts","components/code_animators/step_creators/execution_start_step_creator.ts","components/code_animators/animation_effects/vertical_collapse.ts","components/code_animators/step_creators/scope_end_step_creator.ts","components/code_animators/step_creators/scope_change_step_creator.ts","components/code_animators/step_creators/after_function_retake_step_creator.ts","components/code_animators/animation_steps_creator.ts","components/code_animators/create_steps_from_states.ts","components/code_editors/js/interpreter/n_parser.js","components/code_animators/animation_controls_icons/backward.svg","components/code_animators/animation_controls_icons/skip_previous.svg","components/code_animators/animation_controls_icons/skip_next.svg","components/code_animators/animation_controls_icons/play_arrow.svg","components/code_animators/animation_controls_icons/pause.svg","components/code_animators/animation_controls_icons/slow.svg","components/code_animators/animation_controls_icons/fast.svg","components/code_animators/AnimationControls.tsx","components/code_animators/toolbar_icons/edit.svg","components/code_animators/toolbar_icons/film.svg","components/code_animators/Toolbar.tsx","components/code_editors/js/code_components/tinylang.js","components/code_editors/js/code_components/TokenBasedCode.tsx","components/code_editors/js/code_components/ASTBasedCode.tsx","components/code_editors/js/code_components/CodeRenderer.tsx","components/code_animators/CodeAnimator.tsx","App.js","serviceWorker.js","index.js"],"names":["moo","require","lexer","states","normal","string","block_comment_start","match","push","line_comment","ws","lineBreaks","number","true","false","identifier","type","keywords","keyword","binary_op","symbol","undef","comment","block_comment_end","url","ws_comment","module","exports","id","x","pp","grammar","Lexer","ParserRules","program","has","d","concat","dflt","binary_operation","identifier_expression","constant_expression","group","arraypp","object","mark_important","empty_list","key_value_list","list_initialization","append_element","key_value_pair","identifier_key","string_key","function_definition","parameters_list","parameter","expression_call","expressions_list","access_by_index_expression","property_expression","declaration_statement","declaration_fragment","single_declaration","declaration_list","assignment_fragment","break_statement","continue_statement","expression_statement","ifpp","forpp","else_fragment","statement_list","block_statement","return_statement","ParserStart","window","__spreadArrays","this","s","i","il","arguments","length","r","Array","k","a","j","jl","__esModule","cnt","get_important","array","index","types","includes","important","list_node","list","children","t","important_index","statements_list_node","left","operator","right","expression","parameter_identifier","optional_assignment_fragment","declaration_keyword","declarations_list","value","for_keyword","for_init","condition","final_expression","statement","if_keyword","else_keyword","function_keyword","call_parameters","token","items_list","substr","key","key_value_pairs_list","property_identifier","return_keyword","block_comment_content","console","log","default_state","test","code","replacements_dict","executed_ast_statements","scopes_json","selection_status","cursor_position","cursor_selection_end","reducer","state","action","Object","assign","payload","replacement_data","ast_object_id","replacement_string","main_reducer","combineReducers","globals_reducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","is_array_value","is_object_value","is_undefined_value","is_boolean_value","is_function_value","is_number_value","is_string_value","get_array_members","arr_exp_val","cr","current","caller","function","returned_val_id","arr_ev","ev","new_length","method_mutates_caller","is_internal","default_undefined_value","undefined","clone_unlinked_expression_value","exp_val","returned","arr","cloned_arr","cloned_members","item","keys","members","member_key","clone_unlinked_array","obj","object_dict","representation_name","clone_unlinked_object","ScopeVariable","identifier_string","name","Scope","scoped_variables","new_scoped_variables","new_scope","get_variable","clone_unlinked","variable","variable_name","ScopeManager","scopes_list","is_closure","variable_counter_ref","new_scope_list","scope","copied_manager","clone_scopes_list","map","variable_keys","var_name","json","pop","slice","current_scope","get_current_scope","add_variable","Error","is_block","is_declaration_statement","is_if_statement","is_for_statement","is_expression","is_expression_statement","is_binary_expression","is_group_expression","is_identifier_expression","is_constant_expression","is_function_definition","is_expression_call","is_array_expression","is_object_expression","is_property_expression","is_access_by_index_expression","is_return_statement","get_related_ast_ids","ast_obj","get_ast_dependency_array","ast_tree","array_of_related_ast_ids","ast_id","child_tree","get_ast_dependency_tree","finit","ast_type_not_found","child_ast_tree","left_dt","right_dt","exp_dt","ast","join","condition_dt","statement_dt","else_dt","is_forinit_declaration","declaration","assdt","get_default_failed_evaluation","next_value_id","execution_result","get_default_undefined_evaluation","ASTExecuter","options","value_counter_ref","closures","ast_program","execution_finished","returned_expression_value","break_flag","continue_flag","scope_manager","sc_man","execute_program","ast_statement","executed","on_before_execution","execute_block","execute_declaration","execute_if_statement","execute_for_statement","execute_expression_statement","execute_return_statement","execute_break_statement","is_continue_statement","execute_continue_statement","statement_type_not_found","error","on_after_execution","expression_result","evaluate","start_scope","on_new_scope","end_scope","on_scope_end","block_object","block_statements","execute_statement","program_object","on_program_start","statements","if_statement","evaluation_result","on_after_if_condition_eval","evaluation_result_value","for_object","initial_fragment","me","execution_return","evaluate_condition","condition_result","declare_variables","counter","on_before_for_loop","on_after_for_loop","ast_origin","created_variable","on_variable_declaration","add_variable_to_scope","declarations","declare_variable","declaration_object","on_before_evaluation","evaluate_constant","evaluate_identifier","evaluate_binary","evaluate_group","evaluate_function_definition","evaluate_expression_call","evaluate_array","evaluate_object","evaluate_property","evaluate_access_by_index_expression","expression_type_not_found","on_after_evaluation","ast_expression","function_expression","scope_manager_clone","clone_as_closure","function_structure","array_expression","returned_value","default_array_value","get_default_array_value","expression_eval_result","object_expression","key_value_pair_list","expression_val","function_call_expression","function_with_scope","function_scope","call_parameter_expressions","required_parameters","evaluated_parameters","expression_eval","on_before_function_call","on_scope_change","statement_result","on_function_call","method_info","expression_values","returned_ev","on_value_update","expression_call_expression","evaluate_function_call","evaluate_internal_method_call","expression_response","expression_response_value","scoped_var","on_assignment","expression_value","hasOwnProperty","num_key","Number","isNaN","array_internal_members","expression_evaluation","access_object_property","key_expression","key_evaluation","key_value","key_string","on_index_evaluation","expression_token","token_value","is_number","parseFloat","evaluate_assignment","newval","left_expression_result","right_expression_result","left_expression_value","right_expression_value","is_evaluation_change","change_info","change_type","is_execution_start_change","is_after_function_retake_change","is_new_scope_change","is_scope_end_change","is_scope_change_change","is_add_to_scope_change","is_assignment_change","is_index_evaluation_change","is_value_update_change","is_before_function_call_change","add_to_scope","scope_container","variable_element","getElementsByClassName","appendChild","mock_token_element","content","token_type","string_token","document","createElement","className","innerHTML","get_short_representation_element","exp","boolval","toString","function_representation_element","TokenComponent","props","token_classes","ASTComponent","child_counter","get_child_component","ast_child","child_id","ast_object","isArray","ChildComponents","warn","child","classnames","render_component","create_expanded_value","val","z_index","expanded_wrapper","classList","add","expanded_value","style","zIndex","key_element","value_element","create_ast_expand_struct","element","item_element","create_expanded_arrayexpval_element","create_expanded_objectexpval_element","error_element","pre_wrapper","ast_function","function_component_html_string","ReactDOMServer","renderToString","create_expanded_functionexpval_element","scope_value","var_value","triggers","expand_trigger","eye","expanded_element","tippy_instance","tippy","trigger","placement","theme","arrow","interactive","appendTo","body","expand","remove","show","collapse","hide","addEventListener","create_variable_element","scope_element","scope_identifier","scope_equal_sign","create_expandable_value_element","get_global_coordinate","rect","getBoundingClientRect","scrollLeft","pageXOffset","documentElement","scrollTop","pageYOffset","y","top","drag_element_to_another","starting_point_element","dragged_element","end_point_element","speed","Promise","resolve","first_coord","second_coord","dehtml","opacity","position","dragged_square","second_square","initial_x_position","initial_y_position","final_x_position","width","final_y_position","height","tl","gsap","timeline","onComplete","to","duration","remove_from_scope","variable_id","scroll_to","container","cont","elementRelativeTop","offsetTop","clientHeight","scroll_needed","Math","abs","scrollTo","vertical_expand","el","htmlel","dummy","cloneNode","after","final_height","overflow","registerPlugin","ScrollToPlugin","add_to_scope_step_creator","before","code_element","last_state_change","details","animate","scope_var_elment","element_to_move_into_scope","scope_scroller","all","lastElementChild","rollback","get_view_blocker_data","inline_element","scrollable_container","container_rect","inline_rect","set_replacement","element_to_replace","new_content","old_vb_data","view_blocker","set","new_vb_data","finaltl","original_innerhtml","nc","get_element_from_ast","wrapper","element_string","firstChild","ast_elements","ast_element","expandable_struct","expand_struct","before_function_call_step_creator","change","fun","function_element","function_element_restored","ast_required_parameters_list","replacement_promises","scroll_promises","parameter_values","value_replacement_element","required_parameter","value_id","value_emt","parameter_element","value_wrapper","equals_sign","add_or_remove_class_to_text_containers","classname","operation_type","SVGElement","parentElement","highlight_element","get_relative_cordinate","reference","element_point","reference_point","search_identifier","scrollable","var_id","scope_reference_container","var_pos","search_icon","icon_height","display","setTimeout","create_scope","restore_scope","main_scope","restore_state","code_container","expression_value_replacements","code_wrapper","code_inner_element","restore_code","highlight_ast_object","evaluation_replacement_step_creator","evaluated_ast","replacement_element","highlighted_ast_ids","new_scope_step_creator","remove_scope","for_loop_restoration_step_creator","for_ast","for_element","restored_for_element","fade_in","fade_out","hide_scope","show_scope","starting_step_creator","ending_step_creator","clear_highlights","previously_highlighted","previously_non_highlighted","assignment_step_creator","change_details","new_var_element","variable_value_emt","old_var","old_var_element","index_evaluation_step_creator","index_value","property_element","value_update_step_creator","value_elements_to_update","from","promises_array","replacement","merge_steps","steps","non_null_steps","filter","animate_functions","rollback_functions","step","animate_f","rollback_f","execution_start_step_creator","last_change_details","vertical_collapse","scope_end_step_creator","scope_change_step_creator","after_function_retake_step_creator","AnimationStepsCreator","code_scroller","original_contents_dictionary","unfiltered_animation_steps","animations_enabled_flag","ids_to_skip_replacement","highlighted_ids_before_call","animation_states","state_changes","new_state","get_last_state","ast_ids","previous_replacements","new_ast_replacements","new_replacements","old_replacements","id_string","get_ast_component","push_state","save_original_content","state_change","mix_replacements","remove_replacements","ids_to_remove","bind","last_state","starting_step","step_pending_to_merge","step_creator","is_pending_step","after_evaluation_replacement_step_creator","merged_step","ending_step","create_steps_from_states","parser_creator","nearley","Parser","Grammar","fromCompiled","_extends","target","source","prototype","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","_ref3","_ref","svgRef","title","viewBox","ref","ForwardRef","forwardRef","enableBackground","AnimationControls","useState","playbackState","setPlaybackState","on_playback_state_change_ref","Button","disabled","variant","onClick","rollback_all_handler","step_backward_handler","step_forward_handler","pause_handler","play_handler","direction","min","max","defaultValue","default_speed","onChange","event","speed_change_handler","Toolbar","controls","ModeIcon","EditIcon","state_mode","FilmIcon","toggle_mode_handler","config","parserConfig","startState","moo_lexer","reset","save","stream","eol","stream_string","column","next_token","next","TokenBasedCode","mode","lineNumbers","defineMode","fn","tinylang","editor","data","on_code_change","ASTBasedCode","dangerouslySetInnerHTML","__html","spellCheck","CodeRenderer","program_status","code_ref","React","createRef","CodeSelector","useEffect","url_emts","url_str","toastr","positionClass","connect","executer_ref","useRef","speed_ref","astProgramState","setASTProgramState","animating_flag_ref","step_info_flag_ref","pause_flag_ref","steps_creator_ref","animation_steps_ref","current_step_ref","containers_ref","start_animation_flag","stop_animation_flag","animate_next","execute","get_animation_steps","animation_step","info","animate_previous","animate_result","recalculate_program","parser","feed","results_array","results","alert","new_program","executer_options","get_callbacks_dictionary","init","App","CodeAnimator","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3e029970.chunk.js","sourcesContent":["const moo = require(\"moo\");\r\n\r\nconst lexer = moo.states({\r\n    normal: {\r\n        string: /\".*?\"/,\r\n        // block_comment: { match: /\\/\\*(?:.|\\n)*?\\*\\// },\r\n        block_comment_start: { match: /\\/\\*/, push: \"comment\" },\r\n        line_comment: { match: /\\/\\/.*/ },\r\n        ws: { match: /[\\s\\t]+/, lineBreaks: true },\r\n        number: /[0-9]+(?:\\.[0-9]+)?/,\r\n        true: [\"true\"],\r\n        false: [\"false\"],\r\n        identifier: {\r\n            match: /[a-zA-Z_]+[0-9]*/, type: moo.keywords({\r\n                keyword: [\"for\", \"let\", \"function\", \"if\", \"while\", \"else\", \"return\", \"break\", \"continue\"],\r\n            })\r\n        },\r\n        binary_op: [\"*\", \"/\", \"=\", \"+\", \"-\", \"||\", \"&&\", \"<\", \">\", \"<=\", \">=\", \"==\", \"===\"],\r\n        symbol: [\".\", \",\", \";\", \"(\", \")\", \"{\", \"}\"],\r\n        undef: /./\r\n    },\r\n\r\n    comment: {\r\n        block_comment_end: { match: /\\*\\//, push: \"normal\" },\r\n        // url:{match:/https/},\r\n        // url:{match:/https?:\\/\\/(?:www\\.)?[^/S]/},\r\n        url:{match:/https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/},\r\n        // comment: { match: /(?:.+|(?:\\n|\\s|\\t)+)/, lineBreaks: true },\r\n        comment: { match: /[\\S]+/, lineBreaks: true },\r\n        ws_comment: { match: /(?:\\n|\\s|\\t)+/, lineBreaks: true },\r\n        undef: /./\r\n    }\r\n\r\n});\r\n\r\n// console.log(lexer);\r\n// const lexer = moo.compile({\r\n//     string: /\".*?\"/,\r\n//     block_comment: { match: /\\/\\*(?:.|\\n)*?\\*\\// },\r\n//     line_comment: { match: /\\/\\/.*/ },\r\n//     ws: { match: /[\\s\\t]+/, lineBreaks: true },\r\n//     number: /[0-9]+(?:\\.[0-9]+)?/,\r\n//     true: [\"true\"],\r\n//     false: [\"false\"],\r\n//     identifier: {\r\n//         match: /[a-zA-Z_]+[0-9]*/, type: moo.keywords({\r\n//             keyword: [\"for\", \"let\", \"function\", \"if\", \"while\", \"else\", \"return\", \"break\", \"continue\"],\r\n//         })\r\n//     },\r\n//     binary_op: [\"*\", \"/\", \"=\", \"+\", \"-\", \"||\", \"&&\", \"<\", \">\", \"<=\", \">=\", \"==\", \"===\"],\r\n//     symbol: [\".\", \",\", \";\", \"(\", \")\", \"{\", \"}\"],\r\n//     undef: /./\r\n// });\r\n\r\nmodule.exports = lexer;","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// Generated automatically by nearley, version 2.19.5\n// http://github.com/Hardmath123/nearley\n(function () {\nfunction id(x) { return x[0]; }\n\r\n\r\n/* eslint-disable no-undef */\r\nlet lexer = require('./nearley_lexer');\r\nlet pp = require('./nearley_post_processors_with_types')();\r\n\r\nvar grammar = {\n    Lexer: lexer,\n    ParserRules: [\n    {\"name\": \"Main\", \"symbols\": [\"statements_list\"], \"postprocess\": pp.program},\n    {\"name\": \"_ws\", \"symbols\": [(lexer.has(\"ws\") ? {type: \"ws\"} : ws)], \"postprocess\": id},\n    {\"name\": \"_ws\", \"symbols\": [], \"postprocess\": id},\n    {\"name\": \"block_comment_content$ebnf$1\", \"symbols\": []},\n    {\"name\": \"block_comment_content$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"comment\") ? {type: \"comment\"} : comment)], \"postprocess\": id},\n    {\"name\": \"block_comment_content$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"url\") ? {type: \"url\"} : url)], \"postprocess\": id},\n    {\"name\": \"block_comment_content$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"ws_comment\") ? {type: \"ws_comment\"} : ws_comment)], \"postprocess\": id},\n    {\"name\": \"block_comment_content$ebnf$1\", \"symbols\": [\"block_comment_content$ebnf$1\", \"block_comment_content$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"block_comment_content\", \"symbols\": [\"block_comment_content$ebnf$1\"]},\n    {\"name\": \"block_comment_content\", \"symbols\": [], \"postprocess\": id},\n    {\"name\": \"block_comment\", \"symbols\": [(lexer.has(\"block_comment_start\") ? {type: \"block_comment_start\"} : block_comment_start), \"block_comment_content\", (lexer.has(\"block_comment_end\") ? {type: \"block_comment_end\"} : block_comment_end)], \"postprocess\": pp.dflt()},\n    {\"name\": \"comment\", \"symbols\": [(lexer.has(\"line_comment\") ? {type: \"line_comment\"} : line_comment)], \"postprocess\": id},\n    {\"name\": \"comment\", \"symbols\": [\"block_comment\"], \"postprocess\": id},\n    {\"name\": \"_\", \"symbols\": [\"_ws\"], \"postprocess\": id},\n    {\"name\": \"_\", \"symbols\": [\"_ws\", \"comment\", \"_\"], \"postprocess\": pp.dflt()},\n    {\"name\": \"identifier_t\", \"symbols\": [(lexer.has(\"identifier\") ? {type: \"identifier\"} : identifier)], \"postprocess\": id},\n    {\"name\": \"number_t\", \"symbols\": [(lexer.has(\"number\") ? {type: \"number\"} : number)], \"postprocess\": id},\n    {\"name\": \"string_t\", \"symbols\": [(lexer.has(\"string\") ? {type: \"string\"} : string)], \"postprocess\": id},\n    {\"name\": \"bool_t\", \"symbols\": [(lexer.has(\"true\") ? {type: \"true\"} : true)], \"postprocess\": id},\n    {\"name\": \"bool_t\", \"symbols\": [(lexer.has(\"false\") ? {type: \"false\"} : false)], \"postprocess\": id},\n    {\"name\": \"expression\", \"symbols\": [\"bin_expression\"], \"postprocess\": id},\n    {\"name\": \"non_bin_expression\", \"symbols\": [\"identifier_e\"], \"postprocess\": id},\n    {\"name\": \"non_bin_expression\", \"symbols\": [\"group_e\"], \"postprocess\": id},\n    {\"name\": \"non_bin_expression\", \"symbols\": [\"array_e\"], \"postprocess\": id},\n    {\"name\": \"non_bin_expression\", \"symbols\": [\"object_e\"], \"postprocess\": id},\n    {\"name\": \"non_bin_expression\", \"symbols\": [\"const_e\"], \"postprocess\": id},\n    {\"name\": \"non_bin_expression\", \"symbols\": [\"function_e\"], \"postprocess\": id},\n    {\"name\": \"non_bin_expression\", \"symbols\": [\"expression_call_e\"], \"postprocess\": id},\n    {\"name\": \"non_bin_expression\", \"symbols\": [\"access_by_index_e\"], \"postprocess\": id},\n    {\"name\": \"non_bin_expression\", \"symbols\": [\"property_e\"], \"postprocess\": id},\n    {\"name\": \"bin_expression\", \"symbols\": [\"assignment_e\"], \"postprocess\": id},\n    {\"name\": \"assignable_e\", \"symbols\": [\"identifier_e\"], \"postprocess\": id},\n    {\"name\": \"assignment_e\", \"symbols\": [\"assignable_e\", \"_\", {\"literal\":\"=\"}, \"_\", \"assignment_e\"], \"postprocess\": pp.binary_operation},\n    {\"name\": \"assignment_e\", \"symbols\": [\"or_e\"], \"postprocess\": id},\n    {\"name\": \"or_e\", \"symbols\": [\"or_e\", \"_\", {\"literal\":\"||\"}, \"_\", \"and_e\"], \"postprocess\": pp.binary_operation},\n    {\"name\": \"or_e\", \"symbols\": [\"and_e\"], \"postprocess\": id},\n    {\"name\": \"and_e\", \"symbols\": [\"and_e\", \"_\", {\"literal\":\"&&\"}, \"_\", \"comp_e\"], \"postprocess\": pp.binary_operation},\n    {\"name\": \"and_e\", \"symbols\": [\"comp_e\"], \"postprocess\": id},\n    {\"name\": \"comp_op\", \"symbols\": [{\"literal\":\">\"}], \"postprocess\": id},\n    {\"name\": \"comp_op\", \"symbols\": [{\"literal\":\"<\"}], \"postprocess\": id},\n    {\"name\": \"comp_op\", \"symbols\": [{\"literal\":\"==\"}], \"postprocess\": id},\n    {\"name\": \"comp_e\", \"symbols\": [\"sumdiff_e\", \"_\", \"comp_op\", \"_\", \"sumdiff_e\"], \"postprocess\": pp.binary_operation},\n    {\"name\": \"comp_e\", \"symbols\": [\"sumdiff_e\"], \"postprocess\": id},\n    {\"name\": \"sumdiff_op\", \"symbols\": [{\"literal\":\"+\"}], \"postprocess\": id},\n    {\"name\": \"sumdiff_op\", \"symbols\": [{\"literal\":\"-\"}], \"postprocess\": id},\n    {\"name\": \"sumdiff_e\", \"symbols\": [\"sumdiff_e\", \"_\", \"sumdiff_op\", \"_\", \"muldiv_e\"], \"postprocess\": pp.binary_operation},\n    {\"name\": \"sumdiff_e\", \"symbols\": [\"muldiv_e\"], \"postprocess\": id},\n    {\"name\": \"muldiv_op\", \"symbols\": [{\"literal\":\"*\"}], \"postprocess\": id},\n    {\"name\": \"muldiv_op\", \"symbols\": [{\"literal\":\"/\"}], \"postprocess\": id},\n    {\"name\": \"muldiv_op\", \"symbols\": [{\"literal\":\"%\"}], \"postprocess\": id},\n    {\"name\": \"muldiv_e\", \"symbols\": [\"muldiv_e\", \"_\", \"muldiv_op\", \"_\", \"non_bin_expression\"], \"postprocess\": pp.binary_operation},\n    {\"name\": \"muldiv_e\", \"symbols\": [\"non_bin_expression\"], \"postprocess\": id},\n    {\"name\": \"identifier_e\", \"symbols\": [\"identifier_t\"], \"postprocess\": pp.identifier_expression},\n    {\"name\": \"const_e\", \"symbols\": [\"number_const_e\"], \"postprocess\": id},\n    {\"name\": \"const_e\", \"symbols\": [\"string_const_e\"], \"postprocess\": id},\n    {\"name\": \"const_e\", \"symbols\": [\"bool_const_e\"], \"postprocess\": id},\n    {\"name\": \"number_const_e\", \"symbols\": [\"number_t\"], \"postprocess\": pp.constant_expression},\n    {\"name\": \"string_const_e\", \"symbols\": [\"string_t\"], \"postprocess\": pp.constant_expression},\n    {\"name\": \"bool_const_e\", \"symbols\": [\"bool_t\"], \"postprocess\": pp.constant_expression},\n    {\"name\": \"group_e\", \"symbols\": [{\"literal\":\"(\"}, \"_\", \"expression\", \"_\", {\"literal\":\")\"}], \"postprocess\": pp.group},\n    {\"name\": \"array_e\", \"symbols\": [{\"literal\":\"[\"}, \"optional_expressions_list\", {\"literal\":\"]\"}], \"postprocess\": pp.arraypp},\n    {\"name\": \"object_e\", \"symbols\": [{\"literal\":\"{\"}, \"optional_key_value_list\", {\"literal\":\"}\"}], \"postprocess\": pp.object},\n    {\"name\": \"optional_key_value_list\", \"symbols\": [\"_\", \"tagged_key_value_list\", \"_\"], \"postprocess\": pp.mark_important(1)},\n    {\"name\": \"optional_key_value_list\", \"symbols\": [\"_\"], \"postprocess\": pp.empty_list},\n    {\"name\": \"tagged_key_value_list\", \"symbols\": [\"key_value_list\"], \"postprocess\": pp.key_value_list},\n    {\"name\": \"key_value_list\", \"symbols\": [\"key_value_pair\"], \"postprocess\": pp.list_initialization},\n    {\"name\": \"key_value_list\", \"symbols\": [\"key_value_pair\", \"comma_separator\", \"key_value_list\"], \"postprocess\": pp.append_element},\n    {\"name\": \"key_value_pair\", \"symbols\": [\"key\", \"_\", {\"literal\":\":\"}, \"_\", \"expression\"], \"postprocess\": pp.key_value_pair},\n    {\"name\": \"key\", \"symbols\": [\"identifier_t\"], \"postprocess\": pp.identifier_key},\n    {\"name\": \"key\", \"symbols\": [\"string_t\"], \"postprocess\": pp.string_key},\n    {\"name\": \"function_e\", \"symbols\": [{\"literal\":\"function\"}, \"_\", {\"literal\":\"(\"}, \"optional_parameters_list\", {\"literal\":\")\"}, \"_\", \"block_st\"], \"postprocess\": pp.function_definition},\n    {\"name\": \"optional_parameters_list\", \"symbols\": [\"_\", \"tagged_parameters_list\", \"_\"], \"postprocess\": pp.mark_important(1)},\n    {\"name\": \"optional_parameters_list\", \"symbols\": [\"_\"], \"postprocess\": pp.empty_list},\n    {\"name\": \"tagged_parameters_list\", \"symbols\": [\"parameters_list\"], \"postprocess\": pp.parameters_list},\n    {\"name\": \"parameters_list\", \"symbols\": [\"single_parameter\"], \"postprocess\": pp.list_initialization},\n    {\"name\": \"parameters_list\", \"symbols\": [\"single_parameter\", \"comma_separator\", \"parameters_list\"], \"postprocess\": pp.append_element},\n    {\"name\": \"single_parameter\", \"symbols\": [\"identifier_t\", \"optional_assignment_fragment\"], \"postprocess\": pp.parameter},\n    {\"name\": \"expression_call_e\", \"symbols\": [\"callable_expression\", \"_\", {\"literal\":\"(\"}, \"optional_expressions_list\", {\"literal\":\")\"}], \"postprocess\": pp.expression_call},\n    {\"name\": \"callable_expression\", \"symbols\": [\"identifier_e\"], \"postprocess\": id},\n    {\"name\": \"callable_expression\", \"symbols\": [\"function_e\"], \"postprocess\": id},\n    {\"name\": \"callable_expression\", \"symbols\": [\"group_e\"], \"postprocess\": id},\n    {\"name\": \"callable_expression\", \"symbols\": [\"property_e\"], \"postprocess\": id},\n    {\"name\": \"optional_expressions_list\", \"symbols\": [\"_\", \"tagged_expressions_list\", \"_\"], \"postprocess\": pp.mark_important(1)},\n    {\"name\": \"optional_expressions_list\", \"symbols\": [\"_\"], \"postprocess\": pp.empty_list},\n    {\"name\": \"tagged_expressions_list\", \"symbols\": [\"expressions_list\"], \"postprocess\": pp.expressions_list},\n    {\"name\": \"expressions_list\", \"symbols\": [\"expression\"], \"postprocess\": pp.list_initialization},\n    {\"name\": \"expressions_list\", \"symbols\": [\"expression\", \"comma_separator\", \"expressions_list\"], \"postprocess\": pp.append_element},\n    {\"name\": \"access_by_index_e\", \"symbols\": [\"expression_with_index\", \"_\", {\"literal\":\"[\"}, \"_\", \"expression\", \"_\", {\"literal\":\"]\"}], \"postprocess\": pp.access_by_index_expression},\n    {\"name\": \"expression_with_index\", \"symbols\": [\"identifier_e\"], \"postprocess\": id},\n    {\"name\": \"expression_with_index\", \"symbols\": [\"group_e\"], \"postprocess\": id},\n    {\"name\": \"expression_with_index\", \"symbols\": [\"property_e\"], \"postprocess\": id},\n    {\"name\": \"expression_with_index\", \"symbols\": [\"array_e\"], \"postprocess\": id},\n    {\"name\": \"expression_with_index\", \"symbols\": [\"string_const_e\"], \"postprocess\": id},\n    {\"name\": \"expression_with_index\", \"symbols\": [\"access_by_index_e\"], \"postprocess\": id},\n    {\"name\": \"comma_separator\", \"symbols\": [\"_\", {\"literal\":\",\"}, \"_\"], \"postprocess\": pp.dflt()},\n    {\"name\": \"propertyable_e\", \"symbols\": [\"group_e\"], \"postprocess\": id},\n    {\"name\": \"propertyable_e\", \"symbols\": [\"identifier_e\"], \"postprocess\": id},\n    {\"name\": \"propertyable_e\", \"symbols\": [\"property_e\"], \"postprocess\": id},\n    {\"name\": \"property_e\", \"symbols\": [\"propertyable_e\", \"_\", {\"literal\":\".\"}, \"_\", \"identifier_t\"], \"postprocess\": pp.property_expression},\n    {\"name\": \"statement\", \"symbols\": [\"non_declaration_st\"], \"postprocess\": id},\n    {\"name\": \"statement\", \"symbols\": [\"declaration_st\"], \"postprocess\": id},\n    {\"name\": \"declaration_keyword\", \"symbols\": [{\"literal\":\"let\"}], \"postprocess\": id},\n    {\"name\": \"declaration_keyword\", \"symbols\": [{\"literal\":\"var\"}], \"postprocess\": id},\n    {\"name\": \"declaration_keyword\", \"symbols\": [{\"literal\":\"const\"}], \"postprocess\": id},\n    {\"name\": \"declaration_st\", \"symbols\": [\"declaration_fragment\", \"_\", {\"literal\":\";\"}], \"postprocess\": pp.declaration_statement},\n    {\"name\": \"declaration_fragment\", \"symbols\": [\"declaration_keyword\", \"_\", \"tagged_declaration_list\"], \"postprocess\": pp.declaration_fragment},\n    {\"name\": \"single_declaration\", \"symbols\": [\"identifier_t\", \"optional_assignment_fragment\"], \"postprocess\": pp.single_declaration},\n    {\"name\": \"tagged_declaration_list\", \"symbols\": [\"declarations_list\"], \"postprocess\": pp.declaration_list},\n    {\"name\": \"declarations_list\", \"symbols\": [\"single_declaration\"], \"postprocess\": pp.list_initialization},\n    {\"name\": \"declarations_list\", \"symbols\": [\"single_declaration\", \"declarations_separator\", \"declarations_list\"], \"postprocess\": pp.append_element},\n    {\"name\": \"declarations_separator\", \"symbols\": [\"_\", {\"literal\":\",\"}, \"_\"], \"postprocess\": pp.dflt()},\n    {\"name\": \"optional_assignment_fragment\", \"symbols\": [\"_\", {\"literal\":\"=\"}, \"_\", \"expression\"], \"postprocess\": pp.assignment_fragment},\n    {\"name\": \"optional_assignment_fragment\", \"symbols\": [], \"postprocess\": id},\n    {\"name\": \"non_declaration_st\", \"symbols\": [\"block_st\"], \"postprocess\": id},\n    {\"name\": \"non_declaration_st\", \"symbols\": [\"expression_st\"], \"postprocess\": id},\n    {\"name\": \"non_declaration_st\", \"symbols\": [\"if_st\"], \"postprocess\": id},\n    {\"name\": \"non_declaration_st\", \"symbols\": [\"for_st\"], \"postprocess\": id},\n    {\"name\": \"non_declaration_st\", \"symbols\": [\"return_st\"], \"postprocess\": id},\n    {\"name\": \"non_declaration_st\", \"symbols\": [\"break_st\"], \"postprocess\": id},\n    {\"name\": \"non_declaration_st\", \"symbols\": [\"continue_st\"], \"postprocess\": id},\n    {\"name\": \"break_st\", \"symbols\": [{\"literal\":\"break\"}, \"_\", {\"literal\":\";\"}], \"postprocess\": pp.break_statement},\n    {\"name\": \"continue_st\", \"symbols\": [{\"literal\":\"continue\"}, \"_\", {\"literal\":\";\"}], \"postprocess\": pp.continue_statement},\n    {\"name\": \"expression_st\", \"symbols\": [\"expression\", \"_\", {\"literal\":\";\"}], \"postprocess\": pp.expression_statement},\n    {\"name\": \"if_st\", \"symbols\": [{\"literal\":\"if\"}, \"_\", {\"literal\":\"(\"}, \"_\", \"expression\", \"_\", {\"literal\":\")\"}, \"_\", \"non_declaration_st\", \"else_st\"], \"postprocess\": pp.ifpp},\n    {\"name\": \"for_st\", \"symbols\": [{\"literal\":\"for\"}, \"_\", {\"literal\":\"(\"}, \"_\", \"for_init\", \"_\", {\"literal\":\";\"}, \"_\", \"expression\", \"_\", {\"literal\":\";\"}, \"_\", \"expression\", \"_\", {\"literal\":\")\"}, \"_\", \"non_declaration_st\"], \"postprocess\": pp.forpp},\n    {\"name\": \"for_init\", \"symbols\": [\"declaration_fragment\"], \"postprocess\": id},\n    {\"name\": \"for_init\", \"symbols\": [\"expression\"], \"postprocess\": id},\n    {\"name\": \"for_init\", \"symbols\": [\"_\"], \"postprocess\": id},\n    {\"name\": \"else_st\", \"symbols\": [\"_\", {\"literal\":\"else\"}, \"_\", \"non_declaration_st\"], \"postprocess\": pp.else_fragment},\n    {\"name\": \"else_st\", \"symbols\": [], \"postprocess\": id},\n    {\"name\": \"statements_list\", \"symbols\": [\"_\", \"tagged_statements_list\", \"_\"], \"postprocess\": pp.mark_important(1)},\n    {\"name\": \"statements_list\", \"symbols\": [\"_\"], \"postprocess\": pp.empty_list},\n    {\"name\": \"tagged_statements_list\", \"symbols\": [\"not_null_statement_list\"], \"postprocess\": pp.statement_list},\n    {\"name\": \"not_null_statement_list\", \"symbols\": [\"statement\"], \"postprocess\": pp.list_initialization},\n    {\"name\": \"not_null_statement_list\", \"symbols\": [\"statement\", \"_\", \"not_null_statement_list\"], \"postprocess\": pp.append_element},\n    {\"name\": \"block_st\", \"symbols\": [{\"literal\":\"{\"}, \"statements_list\", {\"literal\":\"}\"}], \"postprocess\": pp.block_statement},\n    {\"name\": \"return_st\", \"symbols\": [{\"literal\":\"return\"}, \"_\", \"expression\", \"_\", {\"literal\":\";\"}], \"postprocess\": pp.return_statement}\n]\n  , ParserStart: \"Main\"\n}\nif (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {\n   module.exports = grammar;\n} else {\n   window.grammar = grammar;\n}\n})();\n","\"use strict\";\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nexports.__esModule = true;\r\nfunction get_post_processors() {\r\n    var cnt = 0;\r\n    var dflt = function (t) {\r\n        if (t === void 0) { t = \"wrapper\"; }\r\n        return (function (d) { return ({ id: cnt++, types: [t], children: d }); });\r\n    };\r\n    var block_comment_content = (function (d) {\r\n        console.log(d);\r\n        return { id: cnt++, types: \"comment\", children: d };\r\n    });\r\n    var mark_important = function (important_index) {\r\n        if (important_index === void 0) { important_index = 0; }\r\n        return (function (d) { return ({ id: cnt++, types: [\"important_mark\"], children: d, important: get_important(d, important_index) }); });\r\n    };\r\n    var get_important = function (array, index) {\r\n        if (array[index] && array[index].types && array[index].types.includes(\"important_mark\")) {\r\n            return array[index].important;\r\n        }\r\n        return array[index];\r\n    };\r\n    var list_initialization = function (d) { return ({ id: cnt++, types: [\"important_mark\"], important: d, children: d }); };\r\n    var list_node = function (d) { return ({ id: cnt++, types: [\"list\"], list: get_important(d, 0), children: d }); };\r\n    var empty_list = function (d) { return ({ id: cnt++, types: [\"list\"], list: [], children: d }); };\r\n    var append_element = function (d) { return ({\r\n        id: cnt++, types: [\"important_mark\"],\r\n        important: __spreadArrays([get_important(d, 0)], get_important(d, 2)),\r\n        children: d\r\n    }); };\r\n    var program = function (d) {\r\n        var last = cnt++;\r\n        var returned = {\r\n            id: last,\r\n            types: [\"statement\", \"program\"],\r\n            statements_list_node: get_important(d, 0),\r\n            children: d\r\n        };\r\n        // cnt = 0;\r\n        return returned;\r\n    };\r\n    var binary_operation = function (d) { return ({\r\n        id: cnt++, types: [\"expression\", \"binary_expression\"],\r\n        left: get_important(d, 0), operator: get_important(d, 2),\r\n        right: get_important(d, 4), children: d\r\n    }); };\r\n    var block_statement = function (d) { return ({ id: cnt++, types: [\"statement\", \"block_statement\"], statements_list_node: get_important(d, 1), children: d }); };\r\n    var group = function (d) { return ({ id: cnt++, types: [\"expression\", \"group_expression\"], expression: get_important(d, 2), children: d }); };\r\n    var expression_statement = function (d) { return ({ id: cnt++, types: [\"statement\", \"expression_statement\"], expression: get_important(d, 0), children: d }); };\r\n    var declaration_statement = function (d) { return ({ id: cnt++, types: [\"statement\", \"declaration_statement\"], declaration_fragment: get_important(d, 0), children: d }); };\r\n    var break_statement = function (d) { return ({ id: cnt++, types: [\"statement\", \"break_statement\"], children: d }); };\r\n    var continue_statement = function (d) { return ({ id: cnt++, types: [\"statement\", \"continue_statement\"], children: d }); };\r\n    var declaration_fragment = function (d) { return ({\r\n        id: cnt++, types: [\"declaration_fragment\"], declaration_keyword: get_important(d, 0), declarations_list: get_important(d, 2), children: d\r\n    }); };\r\n    var single_declaration = function (d) { return ({ id: cnt++, types: [\"single_declaration\"], identifier: get_important(d, 0), optional_assignment_fragment: get_important(d, 1), children: d }); };\r\n    var assignment_fragment = function (d) { return ({\r\n        id: cnt++, types: [\"optional_assignment_fragment\"], value: get_important(d, 3), children: d\r\n    }); };\r\n    var parameter = function (d) { return ({\r\n        id: cnt++, types: [\"parameter\"], parameter_identifier: get_important(d, 0), optional_assignment_fragment: get_important(d, 1), children: d\r\n    }); };\r\n    var forpp = function (d) { return ({\r\n        id: cnt++, types: [\"statement\", \"for_statement\"],\r\n        for_keyword: get_important(d, 0),\r\n        for_init: get_important(d, 4),\r\n        condition: get_important(d, 8),\r\n        final_expression: get_important(d, 12),\r\n        statement: get_important(d, 16),\r\n        children: d\r\n    }); };\r\n    var ifpp = function (d) { return ({\r\n        id: cnt++,\r\n        types: [\"statement\", \"if_statement\"],\r\n        if_keyword: get_important(d, 0),\r\n        condition: get_important(d, 4),\r\n        statement: get_important(d, 8),\r\n        else_fragment: get_important(d, 9),\r\n        children: d\r\n    }); };\r\n    var else_fragment = function (d) { return ({\r\n        id: cnt++,\r\n        types: [\"else_fragment\"],\r\n        else_keyword: get_important(d, 1),\r\n        statement: get_important(d, 3),\r\n        children: d\r\n    }); };\r\n    var function_definition = function (d) { return ({\r\n        id: cnt++,\r\n        types: [\"expression\", \"function_definition_expression\"],\r\n        function_keyword: get_important(d, 0),\r\n        parameters_list: get_important(d, 3),\r\n        block_statement: get_important(d, 6),\r\n        children: d\r\n    }); };\r\n    var expression_call = function (d) { return ({\r\n        id: cnt++,\r\n        types: [\"expression\", \"expression_call\"],\r\n        expression: get_important(d, 0),\r\n        call_parameters: get_important(d, 3),\r\n        children: d\r\n    }); };\r\n    var identifier_expression = function (d) { return ({\r\n        id: cnt++,\r\n        types: [\"expression\", \"identifier_expression\"],\r\n        token: get_important(d, 0),\r\n        children: d\r\n    }); };\r\n    var constant_expression = function (d) { return ({\r\n        id: cnt++,\r\n        types: [\"expression\", \"constant_expression\"],\r\n        token: get_important(d, 0),\r\n        children: d\r\n    }); };\r\n    var arraypp = function (d) { return ({\r\n        id: cnt++,\r\n        types: [\"expression\", \"array_expression\"],\r\n        items_list: get_important(d, 1),\r\n        children: d\r\n    }); };\r\n    var identifier_key = function (d) { return ({\r\n        id: cnt++,\r\n        types: [\"key\", \"idenrifier_key\"],\r\n        value: get_important(d, 0).value,\r\n        token: get_important(d, 0),\r\n        children: d\r\n    }); };\r\n    var string_key = function (d) { return ({\r\n        id: cnt++,\r\n        types: [\"key\", \"string_key\"],\r\n        value: get_important(d, 0).value.substr(1, get_important(d, 0).value.length - 2),\r\n        token: get_important(d, 0),\r\n        children: d\r\n    }); };\r\n    var key_value_pair = function (d) { return ({\r\n        id: cnt++,\r\n        types: [\"key_value_pair\"],\r\n        key: get_important(d, 0),\r\n        value: get_important(d, 4),\r\n        children: d\r\n    }); };\r\n    var object = function (d) { return ({\r\n        id: cnt++,\r\n        types: [\"expression\", \"object_expression\"],\r\n        key_value_pairs_list: get_important(d, 1),\r\n        children: d\r\n    }); };\r\n    var property_expression = function (d) { return ({\r\n        id: cnt++,\r\n        types: [\"expression\", \"property_expression\"],\r\n        expression: get_important(d, 0),\r\n        property_identifier: get_important(d, 4),\r\n        children: d\r\n    }); };\r\n    var access_by_index_expression = function (d) { return ({\r\n        id: cnt++,\r\n        types: [\"expression\", \"access_by_index\"],\r\n        expression: get_important(d, 0),\r\n        index: get_important(d, 4),\r\n        children: d\r\n    }); };\r\n    var return_statement = function (d) { return ({\r\n        id: cnt++,\r\n        types: [\"statement\", \"return_statement\"],\r\n        return_keyword: get_important(d, 0),\r\n        expression: get_important(d, 2),\r\n        children: d\r\n    }); };\r\n    var exported = {\r\n        dflt: dflt,\r\n        mark_important: mark_important,\r\n        program: program,\r\n        list_initialization: list_initialization,\r\n        append_element: append_element,\r\n        binary_operation: binary_operation,\r\n        block_statement: block_statement,\r\n        group: group,\r\n        expressions_list: list_node,\r\n        statement_list: list_node,\r\n        declaration_list: list_node,\r\n        parameters_list: list_node,\r\n        key_value_list: list_node,\r\n        parameter: parameter,\r\n        declaration_statement: declaration_statement,\r\n        declaration_fragment: declaration_fragment,\r\n        assignment_fragment: assignment_fragment,\r\n        forpp: forpp,\r\n        ifpp: ifpp,\r\n        else_fragment: else_fragment,\r\n        single_declaration: single_declaration,\r\n        empty_list: empty_list,\r\n        expression_statement: expression_statement,\r\n        function_definition: function_definition,\r\n        expression_call: expression_call,\r\n        identifier_expression: identifier_expression,\r\n        constant_expression: constant_expression,\r\n        arraypp: arraypp,\r\n        identifier_key: identifier_key,\r\n        string_key: string_key,\r\n        key_value_pair: key_value_pair,\r\n        object: object,\r\n        access_by_index_expression: access_by_index_expression,\r\n        property_expression: property_expression,\r\n        return_statement: return_statement,\r\n        break_statement: break_statement,\r\n        continue_statement: continue_statement,\r\n        block_comment_content: block_comment_content\r\n    };\r\n    return exported;\r\n}\r\nmodule.exports = get_post_processors;\r\n// export default exported;\r\n","import { CHANGE_CODE_TYPE } from '../actions/change_code';\r\nimport { SET_SELECTION_STATUS_TYPE } from '../actions/set_selection_status';\r\nimport { SET_REPLACEMENT_TYPE } from '../actions/set_replacement';\r\nimport { CLEAR_REPLACEMENTS_TYPE } from '../actions/clear_replacements';\r\n// const default_code = `\r\n\r\n// let var1 = 3;\r\n// let f = function(){\r\n//     return 4;\r\n// };\r\n\r\n\r\n//     let var3 = 3;\r\n//     let var4 = f();\r\n//     let var5 = 3;\r\n\r\n\r\n// `;\r\n\r\n\r\n\r\nconst default_code = `\r\n\r\n/*\r\n\r\nHi, I'm Adrian, Creator of this demo.\r\nthis is an animated code editor,\r\nthis is what comes to my mind when someone says \r\nthey can not SEE what the code does.\r\n\r\nDisclaimer: this is not JS, \r\nit's just a language that resembles js on purpose for this proof of concept.\r\nI call it tinylang. It supports variables, functions, objects and arrays  \r\nand is lexical scoped.\r\n\r\nfeel free to write me to my main \r\nsite https://adriandiazcode.github.io/profile_page/ if \r\nyou find a bug/suggestion.\r\n\r\nEnjoy ;)\r\n\r\n*/\r\n\r\n\r\n\r\nlet get_candidate_score = function (candidate, requirements_array) {\r\n    let score = 0;\r\n    let candidate_skills = candidate.skills;\r\n    for(let i = 0; i < requirements_array.length; i = i + 1){\r\n        let requirement = requirements_array[i];\r\n        for(let j = 0; j < candidate_skills.length; j = j+1){\r\n            let skill = candidate_skills[j];\r\n            if(skill == requirement){\r\n                score = score +10;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return score;\r\n};\r\n\r\n\r\nlet get_best_candidate = function (candidates_array, requirements_array) {\r\n    let best_candidate_so_far = 0;\r\n    let max_score = 0;\r\n    for (let i = 0; i < candidates_array.length; i=i+1) {\r\n        let candidate = candidates_array[i];\r\n        let candidate_score = get_candidate_score(candidate, requirements_array);\r\n        if (candidate_score > max_score) {\r\n            max_score = candidate_score;\r\n            best_candidate_so_far = i;\r\n        }\r\n    }\r\n    return candidates_array[best_candidate_so_far];\r\n};\r\n\r\nlet first_candidate = {\r\n    name: \"Adrian\",\r\n    skills: [\"react\", \"django\", \"go\"]\r\n};\r\n\r\nlet second_candidate = {\r\n    name: \"May B. Notgood\",\r\n    skills: [\"can move his ear\"]\r\n};\r\n\r\nlet candidates = [\r\n    first_candidate,\r\n    second_candidate\r\n];\r\n\r\nlet requirements = [\"react\",\"django\"];\r\nlet best_candidate = get_best_candidate(candidates, requirements);\r\nlet best_candidate_name = best_candidate.name;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n`;\r\n\r\n\r\nconst executed_ast_statements = [];\r\nconst scopes_json = [];\r\nconst replacements_dict = {};\r\n\r\nconst default_state = {\r\n    test: \":)\",\r\n    code: default_code,\r\n    replacements_dict,\r\n    executed_ast_statements,\r\n    scopes_json,\r\n    selection_status: {\r\n        cursor_position: null,\r\n        cursor_selection_end: null,\r\n    }\r\n};\r\n\r\nfunction reducer(state = default_state, action) {\r\n\r\n    switch (action.type) {\r\n        case CHANGE_CODE_TYPE:\r\n            return Object.assign({}, state, {\r\n                code: action.payload\r\n            })\r\n        case SET_SELECTION_STATUS_TYPE:\r\n            let selection_status = action.payload;\r\n            if (selection_status.cursor_selection_end < selection_status.cursor_position || selection_status.cursor_selection_end == null) {\r\n                selection_status.cursor_selection_end = selection_status.cursor_position\r\n            }\r\n            return Object.assign({}, state, {\r\n                selection_status: action.payload\r\n            })\r\n        case SET_REPLACEMENT_TYPE:\r\n            let replacement_data = action.payload;\r\n            let replacements_dict = { ...state.replacements_dict };\r\n            replacements_dict[replacement_data.ast_object_id] = replacement_data.replacement_string;\r\n            return Object.assign({}, state, {\r\n                replacements_dict\r\n            })\r\n        case CLEAR_REPLACEMENTS_TYPE:\r\n            return Object.assign({}, state, {\r\n                replacements_dict: {}\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import create_action from './create_payload_action';\r\nexport const CHANGE_CODE_TYPE = 'CHANGE_CODE';\r\nexport default create_action(CHANGE_CODE_TYPE);","export const SET_SELECTION_STATUS_TYPE = 'SET_SELECTION_STATUS';\r\nexport default function action(cursor_position, cursor_selection_end) {\r\n    return ({\r\n        type: SET_SELECTION_STATUS_TYPE,\r\n        payload: { cursor_position, cursor_selection_end }\r\n    });\r\n};","export const SET_REPLACEMENT_TYPE = 'SET_REPLACEMENT';\r\nexport default function action(ast_object_id, replacement_string) {\r\n    return ({\r\n        type: SET_REPLACEMENT_TYPE,\r\n        payload: { ast_object_id, replacement_string }\r\n    });\r\n};","export const CLEAR_REPLACEMENTS_TYPE = 'CLEAR_REPLACEMENTS';\r\nexport default function action() {\r\n    return ({\r\n        type: CLEAR_REPLACEMENTS_TYPE,\r\n    });\r\n};","import { createStore, combineReducers } from 'redux'\r\nimport globals_reducer from './reducers/globals_reducer'\r\nvar main_reducer = combineReducers({\r\n    globals_reducer,\r\n});\r\n\r\nvar store = createStore(main_reducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\nexport default store;","import { function_definition_type } from \"../ast_types\";\r\nimport ScopeManager from \"./scope_objects\";\r\n\r\nexport type expression_value_type = \"undefined\" | \"null\" | \"number\" | \"string\" | \"boolean\" | \"function\" | \"object\" | \"array\" | \"internal_method\";\r\n\r\n\r\nexport interface counter_ref {\r\n    current: number\r\n}\r\n\r\nexport type member_getter = (cr: counter_ref) => expression_value;\r\n\r\nexport interface expression_value {\r\n    id: number,\r\n    type: expression_value_type,\r\n    value: any,\r\n    members?: { [k: string]: member_getter }\r\n    is_internal?: boolean,\r\n};\r\n\r\n// export interface expression_value_with_id extends expression_value  {\r\n//     id: number,\r\n//     members?: { [k: string]: expression_value_with_id }\r\n// };\r\n\r\nexport interface internal_expression_value extends expression_value {\r\n    type: expression_value_type,\r\n    value: any,\r\n    is_internal: true,\r\n};\r\n\r\n\r\nexport type function_type = {\r\n    function: function_definition_type,\r\n    scope: ScopeManager\r\n}\r\n\r\nexport interface number_value extends expression_value {\r\n    type: \"number\",\r\n    value: number,\r\n}\r\n\r\nexport interface boolean_value extends expression_value {\r\n    type: \"boolean\",\r\n    value: boolean,\r\n}\r\n\r\nexport interface string_value extends expression_value {\r\n    type: \"string\",\r\n    value: string,\r\n}\r\n\r\nexport interface function_value extends expression_value {\r\n    type: \"function\",\r\n    value: function_type,\r\n}\r\n\r\nexport type internal_method_function_type<caller_type extends expression_value> = (method_caller: caller_type, ...args: expression_value[]) => any;\r\n\r\nexport type internal_method_info_type<caller_type extends expression_value> = {\r\n    caller: caller_type,\r\n    method_mutates_caller: boolean,\r\n    function: internal_method_function_type<caller_type>,\r\n};\r\n\r\n\r\nexport interface internal_method_value<caller_type extends expression_value> extends internal_expression_value {\r\n    type: \"internal_method\",\r\n    is_internal: true,\r\n    value: internal_method_info_type<caller_type>,\r\n    // value: internal_method_function_type<caller_type>,\r\n}\r\n\r\nexport type general_internal_method_value = internal_method_value<expression_value>;\r\n\r\nexport type array_members_type = {\r\n    push: (cr: counter_ref) => internal_method_value<basic_array_value>,\r\n    length: member_getter,\r\n    [k: string]: member_getter\r\n}\r\n\r\nexport interface basic_array_value extends expression_value {\r\n    type: \"array\",\r\n    value: expression_value[],\r\n}\r\n\r\nexport interface array_expression_value extends basic_array_value {\r\n    members: array_members_type\r\n}\r\n\r\nexport type object_dict_type = { [key: string]: expression_value; };\r\n\r\nexport interface object_expression_value extends expression_value {\r\n    type: \"object\",\r\n    value: object_dict_type,\r\n    representation_name: string | null\r\n}\r\n\r\n\r\nexport function is_array_value(value: expression_value): value is array_expression_value {\r\n    return (value.type === \"array\");\r\n}\r\nexport function is_object_value(value: expression_value): value is object_expression_value {\r\n    return (value.type === \"object\");\r\n}\r\nexport function is_undefined_value(value: expression_value): value is expression_value {\r\n    return (value.type === \"undefined\");\r\n}\r\nexport function is_boolean_value(value: expression_value): value is expression_value {\r\n    return (value.type === \"boolean\");\r\n}\r\nexport function is_null_value(value: expression_value): value is expression_value {\r\n    return (value.type === \"null\");\r\n}\r\nexport function is_function_value(value: expression_value): value is function_value {\r\n    return (value.type === \"function\");\r\n}\r\nexport function is_number_value(value: expression_value): value is number_value {\r\n    return (value.type === \"number\");\r\n}\r\nexport function is_string_value(value: expression_value): value is string_value {\r\n    return (value.type === \"string\");\r\n}\r\nexport function is_internal_method(value: expression_value): value is internal_method_value<expression_value> {\r\n    return (value.type === \"internal_method\");\r\n}\r\n","import { expression_value, array_members_type, number_value, internal_method_value, internal_method_function_type, basic_array_value, counter_ref } from \"./parsing_files/expression_value_types\";\r\nconst get_push_method = (returned_val_id: number) => {\r\n\r\n    let push_method: internal_method_function_type<basic_array_value> = function (arr_ev: basic_array_value, ev: expression_value) {\r\n        const new_length = arr_ev.value.push(ev);\r\n        const returned: number_value = {\r\n            id: returned_val_id,\r\n            type: \"number\",\r\n            value: new_length\r\n        }\r\n        return returned;\r\n    };\r\n    return push_method;\r\n}\r\n\r\n\r\nexport function get_array_members(arr_exp_val: basic_array_value) {\r\n\r\n    const push_method_getter = (cr: counter_ref): internal_method_value<basic_array_value> => {\r\n        return {\r\n            id: ++cr.current,\r\n            type: \"internal_method\",\r\n            value: {\r\n                caller: arr_exp_val,\r\n                function: get_push_method(++cr.current),\r\n                method_mutates_caller: true\r\n            },\r\n            is_internal: true,\r\n        }\r\n    }\r\n\r\n    const length_getter = (cr: counter_ref): number_value => (\r\n        {\r\n            id: ++cr.current,\r\n            value: arr_exp_val.value.length,\r\n            type: \"number\",\r\n            // is_internal: true,\r\n        }\r\n    )\r\n\r\n    const array_internal_members: array_members_type = {\r\n        push: push_method_getter,\r\n        length: length_getter\r\n    };\r\n\r\n    return array_internal_members;\r\n}\r\n\r\nexport default get_array_members;\r\n","import { expression_value, array_expression_value, object_expression_value, basic_array_value, counter_ref } from './expression_value_types';\r\nimport get_array_members from '../internal_members';\r\n\r\nexport let default_undefined_value: expression_value = {\r\n    id: -1899,\r\n    type: \"undefined\",\r\n    value: undefined,\r\n};\r\n\r\nexport function get_default_array_value(cr: counter_ref) {\r\n    let default_array_value: basic_array_value = {\r\n        id: ++cr.current,\r\n        type: \"array\",\r\n        value: [],\r\n    };\r\n    const members = get_array_members(default_array_value);\r\n    default_array_value.members = members;\r\n    const av = default_array_value as array_expression_value;\r\n    return av;\r\n}\r\n\r\nexport function get_default_object_value(cr: counter_ref) {\r\n    let default_array_value: object_expression_value = {\r\n        id: ++cr.current,\r\n        representation_name: \"object\",\r\n        type: \"object\",\r\n        value: {},\r\n    };\r\n    return default_array_value;\r\n}","import get_array_members from '../internal_members';\r\nimport { expression_value, array_expression_value, object_expression_value, object_dict_type, is_array_value, is_object_value } from './expression_value_types';\r\n\r\nexport default function clone_unlinked_expression_value(exp_val: expression_value): expression_value {\r\n    let returned: expression_value = {\r\n        id: exp_val.id,\r\n        type: exp_val.type,\r\n        value: exp_val.value,\r\n    };\r\n    if (is_array_value(exp_val))\r\n        returned = clone_unlinked_array(exp_val);\r\n    else if (is_object_value(exp_val))\r\n        returned = clone_unlinked_object(exp_val);\r\n    return returned;\r\n}\r\n\r\n\r\nfunction clone_unlinked_array(arr: array_expression_value): array_expression_value {\r\n    const cloned_arr: expression_value[] = [];\r\n    const cloned_members: any = {};\r\n    for (const item of arr.value) {\r\n        cloned_arr.push(clone_unlinked_expression_value(item));\r\n    }\r\n\r\n    for (const member_key of Object.keys(arr.members)) {\r\n        cloned_members[member_key] = get_array_members(arr);\r\n    }\r\n    const returned: array_expression_value = {\r\n        id: arr.id,\r\n        type: \"array\",\r\n        value: cloned_arr,\r\n        members: cloned_members\r\n    }\r\n    return returned;\r\n}\r\n\r\nfunction clone_unlinked_object(obj: object_expression_value): object_expression_value {\r\n    const object_dict: object_dict_type = {};\r\n    for (const key of Object.keys(obj.value)) {\r\n        const item = obj.value[key];\r\n        object_dict[key] = clone_unlinked_expression_value(item);\r\n    }\r\n    const returned: object_expression_value = {\r\n        id: obj.id,\r\n        type: \"object\",\r\n        value: object_dict,\r\n        members: obj.members,\r\n        representation_name: obj.representation_name\r\n    }\r\n    return returned;\r\n}","import { expression_value, internal_method_info_type } from './expression_value_types';\r\nimport clone_unlinked_expression_value from './expression_value_converter';\r\n\r\n\r\n\r\nexport interface internal_method_value_with_id<caller_type extends expression_value> extends expression_value {\r\n    type: \"internal_method\",\r\n    is_internal: true,\r\n    value: internal_method_info_type<caller_type>,\r\n    // value: internal_method_function_type<caller_type>,\r\n}\r\n\r\n\r\n\r\n\r\nexport default class ScopeVariable {\r\n    id: number;\r\n    name: string;\r\n    value: expression_value;\r\n\r\n    constructor(id: number, identifier_string: string, value: expression_value) {\r\n        this.name = identifier_string;\r\n        this.value = value;\r\n        this.id = id;\r\n    }\r\n\r\n    clone_unlinked(): ScopeVariable {\r\n        const cloned_variable = new ScopeVariable(\r\n            this.id,\r\n            this.name,\r\n            clone_unlinked_expression_value(this.value)\r\n        );\r\n        return cloned_variable;\r\n    }\r\n}\r\n\r\n","import { default_undefined_value } from './default_expression_values';\r\nimport ScopeVariable from \"./variable\";\r\nimport { expression_value, counter_ref } from './expression_value_types';\r\n\r\ntype scoped_variables_dict_type = {\r\n    [var_name: string]: ScopeVariable\r\n};\r\n\r\n\r\nclass Scope {\r\n    scoped_variables: scoped_variables_dict_type;\r\n\r\n    constructor() {\r\n        this.scoped_variables = {};\r\n    }\r\n\r\n    clone_unlinked(): Scope {\r\n        const new_scoped_variables: scoped_variables_dict_type = {}\r\n        const new_scope = new Scope();\r\n        const var_keys_list = Object.keys(this.scoped_variables);\r\n        for (const key of var_keys_list) {\r\n            new_scoped_variables[key] = this.get_variable(key)!.clone_unlinked();\r\n        }\r\n        new_scope.scoped_variables = new_scoped_variables;\r\n        return new_scope;\r\n    }\r\n\r\n    add_variable(variable: ScopeVariable) {\r\n        this.scoped_variables[variable.name] = variable;\r\n    }\r\n\r\n    get_variable(variable_name: string) {\r\n        if (variable_name in this.scoped_variables)\r\n            return this.scoped_variables[variable_name];\r\n        else\r\n            return null\r\n    }\r\n}\r\n\r\nclass ScopeManager {\r\n    scopes_list: Scope[];\r\n    is_closure: boolean;\r\n    variable_counter_ref: counter_ref;\r\n\r\n    constructor() {\r\n        this.scopes_list = [];\r\n        this.is_closure = false;\r\n        this.variable_counter_ref = { current: 0 };\r\n    }\r\n\r\n    clone_scopes_list(scopes_list: Scope[]): Scope[] {\r\n        const new_scope_list = [];\r\n        for (const scope of scopes_list) {\r\n            new_scope_list.push(scope.clone_unlinked())\r\n        }\r\n        return new_scope_list;\r\n    }\r\n\r\n    clone_unlinked(): ScopeManager {\r\n        let copied_manager = new ScopeManager();\r\n        copied_manager.scopes_list = this.clone_scopes_list(this.scopes_list);\r\n        copied_manager.is_closure = this.is_closure;\r\n        copied_manager.variable_counter_ref = { ...this.variable_counter_ref }\r\n        return copied_manager;\r\n    }\r\n\r\n    clone_as_closure() {\r\n        let copied_manager = new ScopeManager();\r\n        copied_manager.scopes_list = [...this.scopes_list];\r\n        copied_manager.is_closure = true;\r\n        copied_manager.variable_counter_ref = this.variable_counter_ref;\r\n        return copied_manager;\r\n    }\r\n\r\n    get_scopes_json() {\r\n        return this.scopes_list.map(\r\n            s => {\r\n                let scoped_variables: any = {};\r\n                let variable_keys = Object.keys(s.scoped_variables);\r\n\r\n                for (let i = 0; i < variable_keys.length; i++) {\r\n                    const var_name = variable_keys[i];\r\n                    let variable = s.get_variable(var_name);\r\n                    if (variable)\r\n                        scoped_variables[var_name] = {\r\n                            name: variable.name,\r\n                            value: variable.value,\r\n                        };\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    set_scopes_json(json: JSON) {\r\n        // TODO: implement set_scopes_json\r\n    }\r\n\r\n    start_scope() {\r\n        // console.log(\"new scope started\")\r\n        let new_scope = new Scope();\r\n        this.scopes_list.push(new_scope)\r\n        // console.log(\"scopes_list after new scope:\", this.scopes_list);\r\n    }\r\n\r\n    end_scope() {\r\n        // console.log(\"scope ended\")\r\n        this.scopes_list.pop();\r\n    }\r\n\r\n    get_current_scope() {\r\n        if (this.scopes_list.length > 0)\r\n            return this.scopes_list.slice(-1)[0];\r\n        else\r\n            return null;\r\n    }\r\n\r\n    add_variable(variable_name: string, value: expression_value) {\r\n\r\n        let variable = new ScopeVariable(++this.variable_counter_ref.current, variable_name, value);\r\n        let current_scope = this.get_current_scope();\r\n        if (current_scope)\r\n            current_scope.add_variable(variable);\r\n        // console.log(\"adding variable: \", variable_name);\r\n        // console.log(\"scopes_list: \", this.scopes_list); \r\n    }\r\n\r\n    is_varname_available_in_current_scope(variable_name: string) {\r\n        let scope = this.get_current_scope();\r\n        if (scope !== null) {\r\n            let vars_dict = scope.scoped_variables;\r\n            if (variable_name in vars_dict)\r\n                return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get_variable(variable_name: string) {\r\n        for (let i = this.scopes_list.length - 1; i >= 0; i--) {\r\n            const scope = this.scopes_list[i];\r\n            const variable = scope.get_variable(variable_name);\r\n            if (variable)\r\n                return variable;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    set_variable(variable_name: string, value: expression_value) {\r\n        let variable = null;\r\n        for (let i = this.scopes_list.length - 1; i >= 0; i--) {\r\n            const scope = this.scopes_list[i];\r\n            variable = scope.get_variable(variable_name);\r\n            if (variable)\r\n                break;\r\n        }\r\n        if (!variable) {\r\n            console.log(this.scopes_list);\r\n            console.log(variable_name);\r\n            console.log(\"variable \", variable_name, \" not found in scope\");\r\n            throw Error(\"variable \" + variable_name + \" not found in scope\");\r\n        }\r\n        variable.value = value;\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default ScopeManager;","export interface nearley_custom_object { id: number, types: string[], children: nearley_node };\r\nexport type nearley_node = nearley_custom_object[];\r\nexport type token_type = { type: string, value: string };\r\nexport interface expression_type extends nearley_custom_object {\r\n    id: number,\r\n    types: [\"expression\", ...string[]]\r\n\r\n};\r\nexport interface statement_type extends nearley_custom_object {\r\n    id: number,\r\n    types: [\"statement\", ...string[]]\r\n};\r\n\r\nexport interface if_statement_type extends statement_type {\r\n    if_keyword: token_type,\r\n    condition: expression_type,\r\n    statement: statement_type,\r\n    else_fragment: else_fragment_type | null,\r\n};\r\n\r\nexport interface else_fragment_type extends nearley_custom_object {\r\n    else_keyword: token_type,\r\n    statement: statement_type,\r\n};\r\n\r\nexport interface list_node_type<T> extends nearley_custom_object {\r\n    list: T[],\r\n};\r\n\r\nexport type list_node_getter<T> = (d: nearley_node) => list_node_type<T>;\r\n\r\nexport interface for_statement_type extends statement_type {\r\n    for_keyword: token_type,\r\n    for_init: for_init_type,\r\n    condition: expression_type,\r\n    final_expression: expression_type,\r\n    statement: statement_type,\r\n};\r\n\r\ntype for_init_type = declaration_fragment_type | expression_type | null\r\n\r\nfunction is_forinit_expression(finit: for_init_type): finit is expression_type {\r\n    if (finit) {\r\n        if (finit.types.includes(\"expression\"))\r\n            return true;\r\n    }\r\n    return false;\r\n};\r\nfunction is_forinit_declaration(finit: for_init_type): finit is declaration_fragment_type {\r\n    if (finit !== null) {\r\n        if (finit.types.includes(\"declaration_fragment\"))\r\n            return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport interface declaration_statement_type extends statement_type {\r\n    types:[\"statement\",\"declaration_statement\"],\r\n    declaration_fragment: declaration_fragment_type,\r\n};\r\n\r\nexport interface break_statement_type extends statement_type {\r\n    types:[\"statement\",\"break_statement\"],\r\n};\r\nexport interface continue_statement_type extends statement_type {\r\n    types:[\"statement\",\"continue_statement\"],\r\n};\r\n\r\nexport interface expression_statement_type extends statement_type {\r\n    expression: expression_type,\r\n};\r\n\r\nexport interface group_expression_type extends expression_type {\r\n    expression: expression_type,\r\n};\r\n\r\nexport interface array_expression_type extends expression_type {\r\n    items_list: list_node_type<expression_type>,\r\n    types: [\"expression\", \"array_expression\"],\r\n};\r\n\r\nexport interface key_type extends nearley_custom_object {\r\n    types: [\"key\", ...string[]],\r\n    value: string,\r\n};\r\n\r\nexport interface identifier_key_type extends key_type {\r\n    types: [\"key\", \"idenrifier_key\"],\r\n    token: token_type\r\n};\r\n\r\nexport interface string_key_type extends key_type {\r\n    types: [\"key\", \"string_key\"],\r\n    token: token_type\r\n};\r\n\r\nexport interface key_value_pair_type extends nearley_custom_object {\r\n    types: [\"key_value_pair\"],\r\n    key: key_type,\r\n    value: expression_type\r\n};\r\n\r\nexport interface object_expression_type extends expression_type {\r\n    types: [\"expression\", \"object_expression\"],\r\n    key_value_pairs_list: list_node_type<key_value_pair_type>\r\n};\r\n\r\nexport interface property_expression_type extends expression_type {\r\n    types: [\"expression\", \"property_expression\"],\r\n    expression: expression_type,\r\n    property_identifier: token_type,\r\n};\r\n\r\nexport interface identifier_expression_type extends expression_type {\r\n    token: token_type,\r\n};\r\n\r\nexport interface constant_expression_type extends expression_type {\r\n    token: token_type,\r\n};\r\n\r\nexport interface declaration_fragment_type extends nearley_custom_object {\r\n    declaration_keyword: token_type,\r\n    declarations_list: list_node_type<single_declaration_type>,\r\n};\r\n\r\nexport interface single_declaration_type extends nearley_custom_object {\r\n    identifier: token_type,\r\n    optional_assignment_fragment: optional_assignment_fragment_type,\r\n};\r\n\r\n\r\nexport interface block_type extends statement_type {\r\n    statements_list_node: list_node_type<statement_type>,\r\n};\r\n\r\nexport interface return_statement_type extends statement_type {\r\n    return_keyword: token_type,\r\n    expression: expression_type,\r\n    types: [\"statement\", \"return_statement\"],\r\n};\r\n\r\nexport interface binary_operation_type extends expression_type {\r\n    left: expression_type,\r\n    right: expression_type,\r\n    operator: token_type\r\n}\r\n\r\nexport interface program_type extends statement_type {\r\n    statements_list_node: list_node_type<statement_type>,\r\n    types: [\"statement\", \"program\"]\r\n};\r\n\r\nexport interface assignment_fragment_type extends nearley_custom_object {\r\n    value: expression_type,\r\n};\r\n\r\nexport type optional_assignment_fragment_type = assignment_fragment_type | null;\r\n\r\n\r\ntype parameter_identifier_type = token_type;\r\n\r\nexport interface parameter_type extends nearley_custom_object {\r\n    parameter_identifier: parameter_identifier_type,\r\n    optional_assignment_fragment: optional_assignment_fragment_type\r\n\r\n}\r\n\r\nexport interface function_definition_type extends expression_type {\r\n    function_keyword: token_type,\r\n    parameters_list: list_node_type<parameter_type>,\r\n    block_statement: block_type\r\n}\r\n\r\nexport interface expression_call_type extends expression_type {\r\n    expression: expression_type,\r\n    call_parameters: list_node_type<expression_type>,\r\n}\r\n\r\nexport interface access_by_index_expression_type extends expression_type {\r\n    expression: expression_type,\r\n    types: [\"expression\", \"access_by_index\"],\r\n    index: expression_type,\r\n}\r\n\r\nexport function is_block(statement: statement_type): statement is block_type {\r\n    return statement.types.includes(\"block_statement\");\r\n}\r\n\r\nexport function is_declaration_statement(statement: statement_type): statement is declaration_statement_type {\r\n    return statement.types.includes(\"declaration_statement\");\r\n}\r\n\r\nexport function is_break_statement(statement: statement_type): statement is break_statement_type {\r\n    return statement.types.includes(\"break_statement\");\r\n}\r\n\r\nexport function is_continue_statement(statement: statement_type): statement is continue_statement_type {\r\n    return statement.types.includes(\"continue_statement\");\r\n}\r\n\r\nexport function is_if_statement(statement: statement_type): statement is if_statement_type {\r\n    return statement.types.includes(\"if_statement\");\r\n}\r\n\r\nexport function is_for_statement(statement: statement_type): statement is for_statement_type {\r\n    return statement.types.includes(\"for_statement\");\r\n}\r\n\r\nexport function is_expression(obj: nearley_custom_object): obj is expression_type {\r\n    return obj.types.includes(\"expression\");\r\n}\r\n\r\nexport function is_statement(obj: nearley_custom_object): obj is statement_type {\r\n    return obj.types.includes(\"statement\");\r\n}\r\n\r\nexport function is_declaration_fragment(obj: nearley_custom_object): obj is declaration_fragment_type {\r\n    return obj.types.includes(\"declaration_fragment\");\r\n}\r\n\r\nexport function is_expression_statement(statement: statement_type): statement is expression_statement_type {\r\n    return statement.types.includes(\"expression_statement\");\r\n}\r\n\r\nexport function is_binary_expression(expression: expression_type): expression is binary_operation_type {\r\n    return expression.types.includes(\"binary_expression\");\r\n}\r\n\r\nexport function is_group_expression(expression: expression_type): expression is group_expression_type {\r\n    return expression.types.includes(\"group_expression\");\r\n}\r\nexport function is_identifier_expression(expression: expression_type): expression is identifier_expression_type {\r\n    return expression.types.includes(\"identifier_expression\");\r\n}\r\nexport function is_constant_expression(expression: expression_type): expression is constant_expression_type {\r\n    return expression.types.includes(\"constant_expression\");\r\n}\r\n\r\nexport function is_function_definition(expression: expression_type): expression is function_definition_type {\r\n    return expression.types.includes(\"function_definition_expression\");\r\n}\r\n\r\nexport function is_expression_call(expression: expression_type): expression is expression_call_type {\r\n    return expression.types.includes(\"expression_call\");\r\n}\r\n\r\nexport function is_array_expression(expression: expression_type): expression is array_expression_type {\r\n    return expression.types.includes(\"array_expression\");\r\n}\r\n\r\nexport function is_object_expression(expression: expression_type): expression is object_expression_type {\r\n    return expression.types.includes(\"object_expression\");\r\n}\r\n\r\nexport function is_property_expression(expression: expression_type): expression is property_expression_type {\r\n    return expression.types.includes(\"property_expression\");\r\n}\r\n\r\nexport function is_access_by_index_expression(expression: expression_type): expression is access_by_index_expression_type {\r\n    return expression.types.includes(\"access_by_index\");\r\n}\r\n\r\nexport function is_return_statement(expression: statement_type): expression is return_statement_type {\r\n    return expression.types.includes(\"return_statement\");\r\n}\r\n\r\nexport type ast_dependency_tree = {\r\n    ast_id: number,\r\n    children: ast_dependency_tree[];\r\n}\r\n\r\n\r\n// TODO: This is just too fragile, I think this could be better implemented using the nearley children\r\nexport function get_ast_dependency_tree(ast_obj: nearley_custom_object): ast_dependency_tree {\r\n    let children: ast_dependency_tree[] = [];\r\n    let ast_type_not_found = true;\r\n    if (is_expression(ast_obj)) {\r\n        ast_type_not_found = false;\r\n        if (is_array_expression(ast_obj)) {\r\n            for (const exp of ast_obj.items_list.list) {\r\n                const child_ast_tree = get_ast_dependency_tree(exp);\r\n                children.push(child_ast_tree);\r\n            }\r\n        } else if (is_binary_expression(ast_obj)) {\r\n            const left_dt = get_ast_dependency_tree(ast_obj.left);\r\n            const right_dt = get_ast_dependency_tree(ast_obj.right);\r\n            children.push(left_dt);\r\n            children.push(right_dt);\r\n        } else if (is_group_expression(ast_obj)) {\r\n            children.push(get_ast_dependency_tree(ast_obj.expression));\r\n        } else if (is_object_expression(ast_obj)) {\r\n            for (const key_val of ast_obj.key_value_pairs_list.list) {\r\n                const exp_dt = get_ast_dependency_tree(key_val.value);\r\n                children.push(exp_dt);\r\n            }\r\n        } else if (is_property_expression(ast_obj)) {\r\n            children.push(get_ast_dependency_tree(ast_obj.expression));\r\n        } else if (is_access_by_index_expression(ast_obj)) {\r\n            children.push(get_ast_dependency_tree(ast_obj.expression));\r\n            children.push(get_ast_dependency_tree(ast_obj.index));\r\n        } else if (is_function_definition(ast_obj)) {\r\n            children.push(get_ast_dependency_tree(ast_obj.block_statement));\r\n            for (const ast of ast_obj.parameters_list.list) {\r\n                if (ast.optional_assignment_fragment)\r\n                    children.push(get_ast_dependency_tree(ast.optional_assignment_fragment));\r\n            }\r\n        } else if (is_expression_call(ast_obj)) {\r\n            children.push(get_ast_dependency_tree(ast_obj.expression));\r\n            for (const expression of ast_obj.call_parameters.list) {\r\n                children.push(get_ast_dependency_tree(expression));\r\n            }\r\n        } else if (is_constant_expression(ast_obj) || is_identifier_expression(ast_obj)) {\r\n\r\n        } else {\r\n            throw new Error(\"expression of types \" + ast_obj.types.join(\" \") + \" is not included in dependency_tree function\");\r\n        }\r\n    }\r\n    if (is_statement(ast_obj)) {\r\n        ast_type_not_found = false;\r\n        if (is_if_statement(ast_obj)) {\r\n            const condition_dt = get_ast_dependency_tree(ast_obj.condition);\r\n            const statement_dt = get_ast_dependency_tree(ast_obj.statement);\r\n            children.push(condition_dt, statement_dt);\r\n            if (ast_obj.else_fragment) {\r\n                const else_dt = get_ast_dependency_tree(ast_obj.else_fragment.statement);\r\n                children.push(else_dt);\r\n            }\r\n        }\r\n        else if (is_for_statement(ast_obj)) {\r\n            let for_init = ast_obj.for_init;\r\n            if (is_forinit_expression(for_init)) {\r\n                children.push(get_ast_dependency_tree(for_init));\r\n            } if (is_forinit_declaration(for_init)) {\r\n                for (const declaration of for_init.declarations_list.list) {\r\n                    if (declaration.optional_assignment_fragment) {\r\n                        let assignment_expression = declaration.optional_assignment_fragment.value;\r\n                        const assdt = get_ast_dependency_tree(assignment_expression);\r\n                        children.push(assdt);\r\n                    }\r\n                }\r\n            }\r\n            children.push(get_ast_dependency_tree(ast_obj.condition));\r\n            children.push(get_ast_dependency_tree(ast_obj.final_expression));\r\n        } else if (is_return_statement(ast_obj)) {\r\n            children.push(get_ast_dependency_tree(ast_obj.expression));\r\n        } else if (is_expression_statement(ast_obj)) {\r\n            children.push(get_ast_dependency_tree(ast_obj.expression));\r\n        } else if (is_declaration_statement(ast_obj)) {\r\n            for (const declaration of ast_obj.declaration_fragment.declarations_list.list) {\r\n                if (declaration.optional_assignment_fragment) {\r\n                    let assignment_expression = declaration.optional_assignment_fragment.value;\r\n                    const assdt = get_ast_dependency_tree(assignment_expression);\r\n                    children.push(assdt);\r\n                }\r\n            }\r\n        } else if (is_block(ast_obj)) {\r\n            for (const statement of ast_obj.statements_list_node.list) {\r\n                children.push(get_ast_dependency_tree(statement));\r\n            }\r\n        } else {\r\n            throw new Error(\"statement of types \" + ast_obj.types.join(\" \") + \" is not included in dependency_tree function\");\r\n        }\r\n    } if (ast_type_not_found) {\r\n        throw new Error(\"ast object of types \" + ast_obj!.types.join(\" \") + \" is not included in dependency_tree function\");\r\n    }\r\n\r\n    return {\r\n        ast_id: ast_obj.id,\r\n        children\r\n    }\r\n}\r\n\r\nfunction get_ast_dependency_array(ast_tree: ast_dependency_tree): number[] {\r\n    let array_of_related_ast_ids = [ast_tree.ast_id];\r\n    if (ast_tree.children.length > 0) {\r\n        for (const child_tree of ast_tree.children) {\r\n            array_of_related_ast_ids.push(...get_ast_dependency_array(child_tree))\r\n        }\r\n    }\r\n    return array_of_related_ast_ids;\r\n}\r\n\r\nexport function get_related_ast_ids(ast_obj: nearley_custom_object) {\r\n    const ast_tree = get_ast_dependency_tree(ast_obj);\r\n    return get_ast_dependency_array(ast_tree);\r\n}\r\n\r\nexport default nearley_node;\r\n\r\n\r\n\r\n\r\n","import { counter_ref, expression_value_type, function_type, is_array_value, is_function_value, function_value, is_object_value, is_internal_method, internal_method_value, general_internal_method_value, expression_value, string_value, number_value, boolean_value } from './parsing_files/expression_value_types'\r\nimport { default_undefined_value, get_default_array_value, get_default_object_value } from './parsing_files/default_expression_values';\r\n\r\nimport ScopeManager from './parsing_files/scope_objects';\r\nimport { statement_type, expression_type, for_statement_type, function_definition_type, program_type, expression_statement_type, block_type, if_statement_type, declaration_statement_type, declaration_fragment_type, single_declaration_type, group_expression_type, binary_operation_type, is_declaration_fragment, is_expression, is_binary_expression, is_group_expression, is_function_definition, is_constant_expression, is_identifier_expression, identifier_expression_type, constant_expression_type, expression_call_type, is_expression_call, array_expression_type, is_array_expression, is_object_expression, object_expression_type, property_expression_type, is_property_expression, access_by_index_expression_type, is_access_by_index_expression, nearley_custom_object, is_return_statement, is_break_statement, is_continue_statement, break_statement_type, continue_statement_type } from './ast_types';\r\nimport { is_block, is_declaration_statement, is_if_statement, is_for_statement, is_expression_statement } from './ast_types';\r\nimport clone_unlinked_expression_value from './parsing_files/expression_value_converter';\r\nimport ScopeVariable from './parsing_files/variable';\r\n\r\nexport type executer_options = {\r\n    on_program_start?: (ast_program: program_type, scope: ScopeManager) => void,\r\n    on_before_execution?: (ast_statement: statement_type, scope: ScopeManager) => void,\r\n    on_after_execution?: (ast_statement: statement_type, scope: ScopeManager) => void,\r\n    on_before_evaluation?: (ast_expression: expression_type, scope: ScopeManager) => void,\r\n    on_after_evaluation?: (ast_expression: expression_type, scope: ScopeManager, returned_value: expression_value) => void,\r\n    on_before_for_loop?: (ast_expression: for_statement_type) => void,\r\n    on_after_for_loop?: (ast_expression: for_statement_type) => void,\r\n    on_index_evaluation?: (ast_expression: access_by_index_expression_type, index_expression_value: string) => void,\r\n    on_after_if_condition_eval?: (ast_expression: if_statement_type, evaluation_result: expression_value) => void,\r\n    on_variable_declaration?: (ast_origin: nearley_custom_object, variable: ScopeVariable, scope_manager: ScopeManager) => void,\r\n    on_assignment?: (ast_origin: nearley_custom_object, variable: ScopeVariable, scope_manager: ScopeManager) => void,\r\n    on_value_update?: (e_val: expression_value) => void,\r\n    on_before_function_call?: (function_definition: function_definition_type, function_call_expression: expression_call_type, evaluated_parameters: expression_value[]) => void,\r\n    on_function_call?: (function_definition: function_definition_type) => void,\r\n    on_scope_change?: (scope_manager: ScopeManager) => void,\r\n    on_new_scope?: (scope_manager: ScopeManager) => void,\r\n    on_scope_end?: (scope_manager: ScopeManager) => void,\r\n};\r\n\r\ntype execution_return_type = 'complete' | 'failed';\r\n\r\ntype evaluation_return_type = {\r\n    execution_result: execution_return_type,\r\n    value: expression_value\r\n}\r\n\r\n\r\nconst get_default_failed_evaluation = (next_value_id: number): evaluation_return_type => {\r\n    const default_failed_evaluation: evaluation_return_type = {\r\n        execution_result: \"failed\",\r\n        value: default_undefined_value\r\n    }\r\n    return default_failed_evaluation;\r\n}\r\n\r\nconst get_default_undefined_evaluation = (next_value_id: number): evaluation_return_type => {\r\n    const default_undefined_evaluation: evaluation_return_type = {\r\n        execution_result: \"complete\",\r\n        value: default_undefined_value\r\n    }\r\n    return default_undefined_evaluation;\r\n}\r\n\r\nclass ASTExecuter {\r\n\r\n    options: executer_options;\r\n    value_counter_ref: counter_ref\r\n\r\n    closures: { [key: string]: ScopeManager };\r\n    ast_program: program_type | null;\r\n    execution_finished: boolean;\r\n    returned_expression_value: expression_value | null;\r\n    break_flag: boolean;\r\n    continue_flag: boolean;\r\n\r\n    constructor(options: executer_options) {\r\n\r\n        /* ----------------------------- initial values ----------------------------- */\r\n\r\n        // this.processed_ast_objects = new Set();\r\n        // this.partial_evaluations_cache = {};\r\n        this.ast_program = null;\r\n        this.execution_finished = false;\r\n        this.closures = {};\r\n        this.returned_expression_value = null;\r\n        this.break_flag = false;\r\n        this.continue_flag = false;\r\n        this.options = options;\r\n        this.value_counter_ref = {\r\n            current: 0,\r\n        };\r\n    }\r\n\r\n    init(ast_program: program_type) {\r\n        this.ast_program = ast_program;\r\n    }\r\n\r\n    /* -------------------------------------------------------------------------- */\r\n    /*                            statement executions                            */\r\n    /* -------------------------------------------------------------------------- */\r\n\r\n    execute(scope_manager: ScopeManager | null = null) {\r\n        const sc_man = scope_manager ? scope_manager : new ScopeManager();\r\n\r\n        if (this.ast_program)\r\n            this.execute_program(this.ast_program, sc_man);\r\n    }\r\n\r\n    execute_statement(ast_statement: statement_type, scope_manager: ScopeManager): execution_return_type {\r\n        if (this.returned_expression_value)\r\n            return \"complete\";\r\n        if (this.break_flag)\r\n            return \"complete\";\r\n        if (this.continue_flag)\r\n            return \"complete\";\r\n\r\n        let executed: execution_return_type = \"failed\";\r\n        if (this.options.on_before_execution)\r\n            this.options.on_before_execution(ast_statement, scope_manager.clone_unlinked());\r\n\r\n        if (is_block(ast_statement))\r\n            executed = this.execute_block(ast_statement, scope_manager);\r\n        else if (is_declaration_statement(ast_statement))\r\n            executed = this.execute_declaration(ast_statement, scope_manager);\r\n        else if (is_if_statement(ast_statement))\r\n            executed = this.execute_if_statement(ast_statement, scope_manager);\r\n        else if (is_for_statement(ast_statement))\r\n            executed = this.execute_for_statement(ast_statement, scope_manager);\r\n        else if (is_expression_statement(ast_statement))\r\n            executed = this.execute_expression_statement(ast_statement, scope_manager);\r\n        else if (is_return_statement(ast_statement))\r\n            executed = this.execute_return_statement(ast_statement, scope_manager);\r\n        else if (is_break_statement(ast_statement))\r\n            executed = this.execute_break_statement(ast_statement, scope_manager);\r\n        else if (is_continue_statement(ast_statement))\r\n            executed = this.execute_continue_statement(ast_statement, scope_manager);\r\n\r\n        else\r\n            executed = this.statement_type_not_found(ast_statement);\r\n\r\n\r\n        if (executed === \"failed\") {\r\n            console.error(\"execution failed for \", ast_statement);\r\n            this.execution_finished = true;\r\n        }\r\n\r\n        if (executed === \"complete\") {\r\n            if (this.options.on_after_execution)\r\n                this.options.on_after_execution(ast_statement, scope_manager.clone_unlinked());\r\n        }\r\n\r\n        return executed;\r\n    }\r\n\r\n    statement_type_not_found(ast_statement: statement_type): execution_return_type {\r\n        console.error(\"execute method not found for statement: \", ast_statement);\r\n        return \"failed\";\r\n    }\r\n\r\n    execute_return_statement(ast_statement: expression_statement_type, scope_manager: ScopeManager): execution_return_type {\r\n        let expression_result = this.evaluate(ast_statement.expression, scope_manager);\r\n        if (expression_result.execution_result === \"failed\")\r\n            return \"failed\";\r\n        this.returned_expression_value = expression_result.value;\r\n        return \"complete\";\r\n    }\r\n    execute_break_statement(ast_statement: break_statement_type, scope_manager: ScopeManager): execution_return_type {\r\n        this.break_flag = true;\r\n        return \"complete\";\r\n    }\r\n    execute_continue_statement(ast_statement: continue_statement_type, scope_manager: ScopeManager): execution_return_type {\r\n        this.continue_flag = true;\r\n        return \"complete\";\r\n    }\r\n\r\n    execute_expression_statement(ast_statement: expression_statement_type, scope_manager: ScopeManager): execution_return_type {\r\n        let expression_result = this.evaluate(ast_statement.expression, scope_manager);\r\n        if (expression_result.execution_result === \"failed\")\r\n            return \"failed\";\r\n        return \"complete\";\r\n    }\r\n\r\n    start_scope(scope_manager: ScopeManager) {\r\n        scope_manager.start_scope();\r\n        if (this.options.on_new_scope) {\r\n            this.options.on_new_scope(scope_manager.clone_unlinked());\r\n        }\r\n    }\r\n\r\n    end_scope(scope_manager: ScopeManager) {\r\n        scope_manager.end_scope();\r\n        if (this.options.on_scope_end) {\r\n            this.options.on_scope_end(scope_manager.clone_unlinked());\r\n        }\r\n    }\r\n\r\n    execute_block(block_object: block_type, scope_manager: ScopeManager): execution_return_type {\r\n        this.start_scope(scope_manager);\r\n        let block_statements = block_object.statements_list_node.list;\r\n        for (let i = 0; i < block_statements.length; i++) {\r\n            const statement = block_statements[i];\r\n            const child_execution_result = this.execute_statement(statement, scope_manager);\r\n            if (child_execution_result === \"failed\") {\r\n                return \"failed\";\r\n            }\r\n        }\r\n\r\n        // for (const statement of block_statements) {\r\n        //     this.processed_ast_objects.delete(statement.id);\r\n        // }\r\n        this.end_scope(scope_manager);\r\n        return \"complete\";\r\n    }\r\n\r\n    execute_program(program_object: program_type, scope_manager: ScopeManager): execution_return_type {\r\n        scope_manager.start_scope();\r\n        if (this.options.on_program_start)\r\n            this.options.on_program_start(program_object, scope_manager.clone_unlinked());\r\n\r\n        let statements = program_object.statements_list_node.list;\r\n        for (let i = 0; i < statements.length; i++) {\r\n            const statement = statements[i];\r\n            const child_execution_result = this.execute_statement(statement, scope_manager);\r\n            if (child_execution_result === \"failed\") {\r\n                return \"failed\";\r\n            }\r\n        }\r\n        this.execution_finished = true;\r\n        return \"complete\";\r\n    }\r\n\r\n    execute_if_statement(if_statement: if_statement_type, scope_manager: ScopeManager): execution_return_type {\r\n        const condition = if_statement.condition;\r\n        const evaluation_result = this.evaluate(condition, scope_manager);\r\n        if (this.options.on_after_if_condition_eval) {\r\n            this.options.on_after_if_condition_eval(if_statement, evaluation_result.value);\r\n        }\r\n\r\n\r\n        if (evaluation_result.execution_result === \"failed\")\r\n            return \"failed\";\r\n        const evaluation_result_value = evaluation_result.value;\r\n        if (evaluation_result_value?.value) {\r\n            return this.execute_statement(if_statement.statement, scope_manager);\r\n        } else {\r\n            if (if_statement.else_fragment) {\r\n                return this.execute_statement(if_statement.else_fragment.statement, scope_manager);\r\n            }\r\n        }\r\n        return \"complete\";\r\n    }\r\n\r\n    execute_for_statement(for_object: for_statement_type, scope_manager: ScopeManager): execution_return_type {\r\n        this.start_scope(scope_manager);\r\n        const initial_fragment = for_object.for_init;\r\n        const condition = for_object.condition;\r\n        const final_expression = for_object.final_expression;\r\n        const statement = for_object.statement;\r\n        const me = this;\r\n        let execution_return: execution_return_type = \"complete\";\r\n\r\n        function evaluate_condition(): boolean {\r\n            let condition_result = me.evaluate(condition, scope_manager);\r\n            if (condition_result.execution_result === \"failed\")\r\n                execution_return = \"failed\";\r\n            else if (condition_result.value) {\r\n                if (condition_result.value.value)\r\n                    return true;\r\n                else\r\n                    return false;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (initial_fragment) {\r\n            if (is_declaration_fragment(initial_fragment)) {\r\n                this.declare_variables(scope_manager, initial_fragment);\r\n            } else if (is_expression(initial_fragment)) {\r\n                this.evaluate(initial_fragment, scope_manager);\r\n            }\r\n        }\r\n\r\n        let counter = 0;\r\n\r\n        while ((!this.returned_expression_value && !this.break_flag)) {\r\n            this.continue_flag = false;\r\n            if (this.options.on_before_for_loop)\r\n                this.options.on_before_for_loop(for_object);\r\n            if (!evaluate_condition()) break;\r\n            let execution_result = this.execute_statement(statement, scope_manager);\r\n            if (execution_result === \"failed\") return \"failed\";\r\n            if ((!this.returned_expression_value && !this.break_flag)) {\r\n                let evaluation_result = this.evaluate(final_expression, scope_manager);\r\n                if (this.options.on_after_for_loop)\r\n                    this.options.on_after_for_loop(for_object);\r\n                if (evaluation_result.execution_result == \"failed\") {\r\n                    return \"failed\";\r\n                }\r\n                counter++;\r\n                if (counter > 1000) {\r\n                    console.log({ ...scope_manager });\r\n                    console.error(\"max iteration depth exeded\");\r\n                    return \"failed\";\r\n                }\r\n            }\r\n        }\r\n\r\n        this.break_flag = false;\r\n        this.end_scope(scope_manager);\r\n        return execution_return;\r\n    }\r\n\r\n\r\n    add_variable_to_scope(ast_origin: nearley_custom_object, scope_manager: ScopeManager, variable_name: string, value: expression_value = get_default_undefined_evaluation(++this.value_counter_ref.current).value) {\r\n        scope_manager.add_variable(variable_name, value);\r\n        // if (this.options.on_variable_declaration && !scope_manager.is_closure)\r\n        const created_variable = scope_manager.get_variable(variable_name);\r\n        if (this.options.on_variable_declaration && created_variable)\r\n            this.options.on_variable_declaration(ast_origin, created_variable.clone_unlinked(), scope_manager.clone_unlinked());\r\n    }\r\n\r\n    declare_variable(scope_manager: ScopeManager, declaration: single_declaration_type) {\r\n        let variable_name = declaration.identifier.value;\r\n        let value = get_default_undefined_evaluation(++this.value_counter_ref.current).value;\r\n        if (declaration.optional_assignment_fragment) {\r\n            let eval_result = this.evaluate(declaration.optional_assignment_fragment.value, scope_manager);\r\n            value = eval_result.value;\r\n        }\r\n        this.add_variable_to_scope(declaration, scope_manager, variable_name, value);\r\n    }\r\n\r\n    declare_variables(scope_manager: ScopeManager, declaration_fragment: declaration_fragment_type) {\r\n        let declarations = declaration_fragment.declarations_list.list;\r\n        for (const declaration of declarations) {\r\n            this.declare_variable(scope_manager, declaration)\r\n        }\r\n    }\r\n\r\n    execute_declaration(declaration_object: declaration_statement_type, scope_manager: ScopeManager): execution_return_type {\r\n        try {\r\n            this.declare_variables(scope_manager, declaration_object.declaration_fragment);\r\n            return \"complete\";\r\n        } catch (error) {\r\n            console.error(error);\r\n            return \"failed\";\r\n        }\r\n    }\r\n\r\n\r\n    /* -------------------------------------------------------------------------- */\r\n    /*                           expression evaluations                           */\r\n    /* -------------------------------------------------------------------------- */\r\n\r\n    evaluate(expression: expression_type, scope_manager: ScopeManager): evaluation_return_type {\r\n\r\n\r\n        let execution_result: execution_return_type;\r\n        if (this.options.on_before_evaluation)\r\n            this.options.on_before_evaluation(expression, scope_manager.clone_unlinked())\r\n        let returned: evaluation_return_type = get_default_failed_evaluation(++this.value_counter_ref.current);\r\n\r\n        if (is_constant_expression(expression))\r\n            returned = this.evaluate_constant(expression, scope_manager);\r\n        else if (is_identifier_expression(expression))\r\n            returned = this.evaluate_identifier(expression, scope_manager);\r\n        else if (is_binary_expression(expression))\r\n            returned = this.evaluate_binary(expression, scope_manager);\r\n        else if (is_group_expression(expression))\r\n            returned = this.evaluate_group(expression, scope_manager);\r\n        else if (is_function_definition(expression))\r\n            returned = this.evaluate_function_definition(expression, scope_manager);\r\n        else if (is_expression_call(expression))\r\n            returned = this.evaluate_expression_call(expression, scope_manager);\r\n        else if (is_array_expression(expression))\r\n            returned = this.evaluate_array(expression, scope_manager);\r\n        else if (is_object_expression(expression))\r\n            returned = this.evaluate_object(expression, scope_manager);\r\n        else if (is_property_expression(expression))\r\n            returned = this.evaluate_property(expression, scope_manager);\r\n        else if (is_access_by_index_expression(expression))\r\n            returned = this.evaluate_access_by_index_expression(expression, scope_manager);\r\n        else\r\n            this.expression_type_not_found(expression);\r\n\r\n        execution_result = returned.execution_result;\r\n\r\n        if (execution_result === \"failed\") {\r\n            console.error(\"evaluation failed for \", expression);\r\n        }\r\n\r\n        if (execution_result === \"complete\") {\r\n            if (this.options.on_after_evaluation)\r\n                this.options.on_after_evaluation(expression, scope_manager.clone_unlinked(), returned.value);\r\n        }\r\n        return returned;\r\n    }\r\n\r\n    expression_type_not_found(ast_expression: expression_type): evaluation_return_type {\r\n        console.error(\"evaluate method not found for expression: \", ast_expression);\r\n        return get_default_failed_evaluation(++this.value_counter_ref.current);\r\n    }\r\n\r\n    evaluate_function_definition(function_expression: function_definition_type, scope_manager: ScopeManager): evaluation_return_type {\r\n        let scope_manager_clone = scope_manager.clone_as_closure();\r\n        scope_manager_clone.is_closure = true;\r\n\r\n        let function_structure: function_type = {\r\n            function: function_expression,\r\n            scope: scope_manager_clone\r\n        }\r\n\r\n        let expression_function_value: expression_value = {\r\n            id: ++this.value_counter_ref.current,\r\n            value: function_structure,\r\n            type: \"function\",\r\n        };\r\n\r\n        return {\r\n            value: expression_function_value,\r\n            execution_result: \"complete\"\r\n        }\r\n    }\r\n\r\n    evaluate_array(array_expression: array_expression_type, scope_manager: ScopeManager): evaluation_return_type {\r\n        const expressions_list = array_expression.items_list.list;\r\n        const returned_value: expression_value = get_default_array_value(this.value_counter_ref);\r\n        for (let i = 0; i < expressions_list.length; i++) {\r\n            const expression = expressions_list[i];\r\n            const expression_eval_result = this.evaluate(expression, scope_manager);\r\n            if (expression_eval_result.execution_result == \"failed\") return get_default_failed_evaluation(++this.value_counter_ref.current);;\r\n            returned_value.value.push(expression_eval_result.value);\r\n        }\r\n\r\n        return {\r\n            execution_result: \"complete\",\r\n            value: returned_value,\r\n        }\r\n    }\r\n\r\n    evaluate_object(object_expression: object_expression_type, scope_manager: ScopeManager): evaluation_return_type {\r\n        const key_value_pair_list = object_expression.key_value_pairs_list.list;\r\n        const returned_value: expression_value = get_default_object_value(this.value_counter_ref);\r\n        const keys: string[] = [];\r\n        for (let i = 0; i < key_value_pair_list.length; i++) {\r\n            const key_value_pair = key_value_pair_list[i];\r\n            const key = key_value_pair.key.value;\r\n            if (!keys.includes(key))\r\n                keys.push(key);\r\n            else {\r\n                console.error(\"same key twice for expression:\", object_expression);\r\n                return get_default_failed_evaluation(++this.value_counter_ref.current);;\r\n            }\r\n            const expression_eval_result = this.evaluate(key_value_pair.value, scope_manager);\r\n            if (expression_eval_result.execution_result == \"failed\") return get_default_failed_evaluation(++this.value_counter_ref.current);;\r\n            returned_value.value[key] = expression_eval_result.value;\r\n        }\r\n\r\n        return {\r\n            execution_result: \"complete\",\r\n            value: returned_value,\r\n        }\r\n    }\r\n\r\n    evaluate_function_call(expression_val: function_value, function_call_expression: expression_call_type, scope_manager: ScopeManager): evaluation_return_type {\r\n\r\n        let function_with_scope = expression_val.value;\r\n        let function_scope = function_with_scope.scope;\r\n        let call_parameter_expressions = function_call_expression.call_parameters.list;\r\n        let required_parameters = function_with_scope.function.parameters_list.list;\r\n        if (call_parameter_expressions.length !== required_parameters.length) {\r\n            console.error(\"incorrect number of parameters for\", function_call_expression);\r\n            return get_default_failed_evaluation(++this.value_counter_ref.current);;\r\n        }\r\n\r\n        this.start_scope(function_scope);\r\n        const evaluated_parameters = [];\r\n        for (let i = 0; i < required_parameters.length; i++) {\r\n\r\n            const expression = call_parameter_expressions[i];\r\n            const expression_eval = this.evaluate(expression, scope_manager);\r\n            evaluated_parameters.push(expression_eval.value);\r\n        }\r\n\r\n        if (this.options.on_before_function_call) {\r\n            this.options.on_before_function_call(\r\n                expression_val.value.function,\r\n                function_call_expression,\r\n                evaluated_parameters\r\n            );\r\n        }\r\n\r\n        for (let i = 0; i < required_parameters.length; i++) {\r\n            const parameter = required_parameters[i];\r\n            const value = evaluated_parameters[i];\r\n            this.add_variable_to_scope(parameter, function_scope, parameter.parameter_identifier.value, value);\r\n        }\r\n\r\n\r\n        if (this.options.on_scope_change)\r\n            this.options.on_scope_change(function_scope.clone_unlinked());\r\n\r\n        const statement_result = this.execute_statement(function_with_scope.function.block_statement, function_scope);\r\n\r\n        if (this.options.on_scope_change)\r\n            this.options.on_scope_change(scope_manager.clone_unlinked());\r\n\r\n\r\n        let returned_value = get_default_undefined_evaluation(++this.value_counter_ref.current).value;\r\n\r\n        if (this.returned_expression_value) {\r\n            returned_value = this.returned_expression_value;\r\n            this.returned_expression_value = null;\r\n        }\r\n\r\n        if (statement_result !== \"failed\") {\r\n            if (this.options.on_function_call) {\r\n                this.options.on_function_call(expression_val.value.function);\r\n            }\r\n        }\r\n\r\n        return {\r\n            execution_result: statement_result,\r\n            value: returned_value\r\n        }\r\n    }\r\n\r\n    evaluate_internal_method_call(expression_val: general_internal_method_value, function_call_expression: expression_call_type, scope_manager: ScopeManager): evaluation_return_type {\r\n\r\n        // return get_default_failed_evaluation(++ this.value_counter);;\r\n        let method_info = expression_val.value;\r\n        const caller = method_info.caller;\r\n        let call_parameter_expressions = function_call_expression.call_parameters.list;\r\n        const expression_values: expression_value[] = [];\r\n        for (let i = 0; i < call_parameter_expressions.length; i++) {\r\n            const expression = call_parameter_expressions[i];\r\n            const expression_eval = this.evaluate(expression, scope_manager);\r\n            if (expression_eval.execution_result === \"failed\") return get_default_failed_evaluation(++this.value_counter_ref.current);;\r\n            expression_values.push(expression_eval.value);\r\n        }\r\n\r\n        const method_function = method_info.function;\r\n        const returned_ev = method_function(caller, ...expression_values);\r\n        if (this.options.on_value_update && method_info.method_mutates_caller) {\r\n            // TODO: this has to be handled using immutables, not clone functions\r\n            this.options.on_value_update(clone_unlinked_expression_value(caller))\r\n        }\r\n        return {\r\n            execution_result: \"complete\",\r\n            value: returned_ev\r\n        }\r\n    }\r\n\r\n    evaluate_expression_call(expression_call_expression: expression_call_type, scope_manager: ScopeManager): evaluation_return_type {\r\n        let expression_result = this.evaluate(expression_call_expression.expression, scope_manager);\r\n        if (expression_result.execution_result === \"failed\") return get_default_failed_evaluation(++this.value_counter_ref.current);;\r\n        const exp_val = expression_result.value;\r\n        if (is_function_value(exp_val)) return this.evaluate_function_call(exp_val, expression_call_expression, scope_manager);\r\n        else if (is_internal_method(exp_val)) return this.evaluate_internal_method_call(exp_val, expression_call_expression, scope_manager);\r\n        else return get_default_failed_evaluation(++this.value_counter_ref.current);;\r\n    }\r\n\r\n    evaluate_assignment(left: expression_type, right: expression_type, scope_manager: ScopeManager): evaluation_return_type {\r\n        let expression = right;\r\n        let expression_response = this.evaluate(expression, scope_manager);\r\n        let expression_response_value = expression_response.value;\r\n\r\n        if (expression_response.execution_result === \"complete\") {\r\n            if (is_identifier_expression(left)) {\r\n                const scoped_var = scope_manager.get_variable(left.token.value);\r\n\r\n                if (scoped_var) {\r\n                    scoped_var.value = expression_response_value;\r\n                }\r\n                if (this.options.on_assignment && scoped_var) {\r\n                    this.options.on_assignment(right, scoped_var.clone_unlinked(), scope_manager.clone_unlinked())\r\n                }\r\n                return expression_response;\r\n\r\n            }\r\n        }\r\n        return get_default_failed_evaluation(++this.value_counter_ref.current);;\r\n    }\r\n\r\n    evaluate_group(ast_expression: group_expression_type, scope_manager: ScopeManager): evaluation_return_type {\r\n        return this.evaluate(ast_expression.expression, scope_manager);\r\n    }\r\n\r\n    access_object_property(expression_value: expression_value, key: string): evaluation_return_type {\r\n        let returned = get_default_undefined_evaluation(++this.value_counter_ref.current);\r\n\r\n        if (is_object_value(expression_value)) {\r\n            if (expression_value.value.hasOwnProperty(key)) {\r\n                returned = {\r\n                    execution_result: \"complete\",\r\n                    value: expression_value.value[key]\r\n                };\r\n            }\r\n        } else if (is_array_value(expression_value)) {\r\n            if (expression_value.value.hasOwnProperty(key)) {\r\n                const num_key = Number(key);\r\n                if (!isNaN(num_key)) {\r\n                    returned = {\r\n                        execution_result: \"complete\",\r\n                        value: expression_value.value[num_key]\r\n                    };\r\n                }\r\n            }\r\n        }\r\n\r\n        if (expression_value.members) {\r\n            const array_internal_members = expression_value.members;\r\n            if (array_internal_members.hasOwnProperty(key)) {\r\n                return {\r\n                    execution_result: \"complete\",\r\n                    value: array_internal_members[key](this.value_counter_ref)\r\n                };\r\n            }\r\n        }\r\n\r\n        // console.log({ expression_value, returned_property: returned, key })\r\n        return returned;\r\n    }\r\n\r\n    evaluate_property(ast_expression: property_expression_type, scope_manager: ScopeManager): evaluation_return_type {\r\n        const object_expression = ast_expression.expression;\r\n        const expression_evaluation = this.evaluate(object_expression, scope_manager);\r\n        if (expression_evaluation.execution_result === \"failed\") return get_default_failed_evaluation(++this.value_counter_ref.current);;\r\n        const expression_value = expression_evaluation.value;\r\n        const key = ast_expression.property_identifier.value;\r\n        const result = this.access_object_property(expression_value, key);\r\n        return result;\r\n    }\r\n\r\n    evaluate_access_by_index_expression(ast_expression: access_by_index_expression_type, scope_manager: ScopeManager): evaluation_return_type {\r\n        const expression_evaluation = this.evaluate(ast_expression.expression, scope_manager);\r\n        if (expression_evaluation.execution_result === \"failed\") return get_default_failed_evaluation(++this.value_counter_ref.current);;\r\n        const expression_value = expression_evaluation.value;\r\n        const key_expression = ast_expression.index;\r\n        const key_evaluation = this.evaluate(key_expression, scope_manager);\r\n        if (key_evaluation.execution_result === \"failed\") return get_default_failed_evaluation(++this.value_counter_ref.current);;\r\n        const key_value = key_evaluation.value;\r\n        if (!(key_value.type === \"number\" || key_value.type === \"string\")) return get_default_failed_evaluation(++this.value_counter_ref.current);;\r\n        const key_string: string = key_value.type === \"string\" ? key_value.value : key_value.value;\r\n        if (this.options.on_index_evaluation)\r\n            this.options.on_index_evaluation(ast_expression, key_string);\r\n        return this.access_object_property(expression_value, key_string);\r\n    }\r\n\r\n\r\n    evaluate_constant(ast_expression: constant_expression_type, scope_manager: ScopeManager): evaluation_return_type {\r\n        let expression_token = ast_expression.token;\r\n        let token_value = expression_token.value;\r\n        let value: any = token_value;\r\n        let type: expression_value_type = \"string\";\r\n        let returned_expression_value: expression_value | null = null;\r\n\r\n        function is_number(value: string) {\r\n            if (value === \"\") return false;\r\n            return !isNaN(Number(value));\r\n        }\r\n\r\n        if (expression_token.type === \"string\") {\r\n            value = token_value.slice(1, -1);\r\n            let string_ev: string_value = {\r\n                id: ++this.value_counter_ref.current,\r\n                type,\r\n                value,\r\n            }\r\n            returned_expression_value = string_ev;\r\n        }\r\n        else if (expression_token.type === \"number\") {\r\n            if (is_number(value)) {\r\n                type = \"number\";\r\n                value = parseFloat(token_value);\r\n                let number_ev: number_value = {\r\n                    id: ++this.value_counter_ref.current,\r\n                    type,\r\n                    value,\r\n                }\r\n                returned_expression_value = number_ev;\r\n            }\r\n        }\r\n        else if (expression_token.type === \"true\" || expression_token.type === \"false\") {\r\n            type = \"boolean\";\r\n            if (expression_token.value === \"true\")\r\n                value = true;\r\n            else\r\n                value = false;\r\n            let number_ev: boolean_value = {\r\n                id: ++this.value_counter_ref.current,\r\n                type,\r\n                value,\r\n            }\r\n            returned_expression_value = number_ev;\r\n        }\r\n\r\n        if (!returned_expression_value)\r\n            return get_default_failed_evaluation(++this.value_counter_ref.current);\r\n\r\n        return {\r\n            execution_result: \"complete\",\r\n            value: returned_expression_value\r\n        }\r\n\r\n    }\r\n\r\n    evaluate_identifier(ast_expression: identifier_expression_type, scope_manager: ScopeManager): evaluation_return_type {\r\n        const scoped_var = scope_manager.get_variable(ast_expression.token.value);\r\n\r\n        if (scoped_var) {\r\n            return {\r\n                execution_result: \"complete\",\r\n                value: scoped_var.value\r\n            }\r\n        }\r\n        return get_default_failed_evaluation(++this.value_counter_ref.current);;\r\n    }\r\n\r\n\r\n    // TODO: make a better implementation of this\r\n    evaluate_binary(ast_expression: binary_operation_type, scope_manager: ScopeManager): evaluation_return_type {\r\n        let operator = ast_expression.operator.value;\r\n        if (operator === \"=\")\r\n            return this.evaluate_assignment(ast_expression.left, ast_expression.right, scope_manager);\r\n\r\n        let newval: any = null;\r\n        let left_expression_result = this.evaluate(ast_expression.left, scope_manager);\r\n        if (left_expression_result.execution_result == \"failed\")\r\n            return get_default_failed_evaluation(++this.value_counter_ref.current);;\r\n\r\n        let right_expression_result = this.evaluate(ast_expression.right, scope_manager);\r\n        if (right_expression_result.execution_result == \"failed\")\r\n            return get_default_failed_evaluation(++this.value_counter_ref.current);;\r\n\r\n        const left_expression_value = left_expression_result.value;\r\n        const right_expression_value = right_expression_result.value;\r\n\r\n\r\n\r\n        if (!left_expression_value || !right_expression_value)\r\n            return get_default_failed_evaluation(++this.value_counter_ref.current);\r\n\r\n        let type: expression_value_type = left_expression_value.type;\r\n\r\n        try {\r\n            switch (operator) {\r\n                case '+':\r\n                    {\r\n                        if (left_expression_value.type === \"number\" && right_expression_value.type === \"number\") {\r\n                            const left = parseFloat(left_expression_value?.value);\r\n                            const right = parseFloat(right_expression_value?.value);\r\n                            newval = left + right;\r\n                        } else if (left_expression_value.type === \"string\" || right_expression_value.type === \"string\") {\r\n                            const left = left_expression_value?.value;\r\n                            const right = right_expression_value?.value;\r\n                            newval = left + right;\r\n                            type = \"string\";\r\n                        }\r\n                        break;\r\n                    }\r\n                case '-':\r\n                    {\r\n                        const left = parseFloat(left_expression_value?.value);\r\n                        const right = parseFloat(right_expression_value?.value);\r\n                        newval = left - right;\r\n                        newval = parseFloat(newval);\r\n                        break;\r\n                    }\r\n                case '*':\r\n                    {\r\n                        const left = parseFloat(left_expression_value?.value);\r\n                        const right = parseFloat(right_expression_value?.value);\r\n                        newval = left * right;\r\n                        newval = parseFloat(newval);\r\n                        break;\r\n                    }\r\n                case '/':\r\n                    {\r\n                        const left = parseFloat(left_expression_value?.value);\r\n                        const right = parseFloat(right_expression_value?.value);\r\n                        newval = left / right;\r\n                        newval = parseFloat(newval);\r\n                        break;\r\n                    }\r\n                case '<':\r\n                    {\r\n                        const left = parseFloat(left_expression_value?.value);\r\n                        const right = parseFloat(right_expression_value?.value);\r\n                        newval = (left < right);\r\n                        type = \"boolean\";\r\n                        break;\r\n                    }\r\n                case '>':\r\n                    {\r\n                        const left = parseFloat(left_expression_value?.value);\r\n                        const right = parseFloat(right_expression_value?.value);\r\n                        newval = (left > right);\r\n                        type = \"boolean\";\r\n                        break;\r\n                    }\r\n                case '==':\r\n                    {\r\n                        newval = (left_expression_value?.value == right_expression_value?.value);\r\n                        type = \"boolean\";\r\n                        break;\r\n                    }\r\n                case '!=':\r\n                    {\r\n                        newval = (left_expression_value?.value != right_expression_value?.value);\r\n                        type = \"boolean\";\r\n                        break;\r\n                    }\r\n                case '&&':\r\n                    {\r\n                        newval = (left_expression_value?.value && right_expression_value?.value);\r\n                        type = \"boolean\";\r\n                        break;\r\n                    }\r\n                case '||':\r\n                    {\r\n                        newval = (left_expression_value?.value || right_expression_value?.value);\r\n                        type = \"boolean\";\r\n                        break;\r\n                    }\r\n                default:\r\n                    break;\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n            return get_default_failed_evaluation(++this.value_counter_ref.current);;\r\n        }\r\n\r\n\r\n        return {\r\n            execution_result: \"complete\",\r\n            value: {\r\n                id: ++this.value_counter_ref.current,\r\n                type,\r\n                value: newval,\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default ASTExecuter;\r\n\r\n","import animation_step_type from \"./animation_step_type\";\r\nimport ScopeManager from \"../code_editors/js/interpreter/parsing_files/scope_objects\";\r\nimport { expression_value } from \"../code_editors/js/interpreter/parsing_files/expression_value_types\";\r\nimport { access_by_index_expression_type, expression_call_type, expression_type, for_statement_type, function_definition_type, nearley_custom_object, program_type, statement_type } from \"../code_editors/js/interpreter/ast_types\";\r\nimport ScopeVariable from \"../code_editors/js/interpreter/parsing_files/variable\";\r\nimport ast_expand_struct from \"./ast_expand_struct_types\";\r\n\r\n\r\n/* ------------------------- state change info types ------------------------ */\r\n\r\n\r\nexport interface state_change_info_type {\r\n    change_type: string,\r\n    details: {\r\n        [key: string]: any\r\n    },\r\n};\r\n\r\nexport interface expval_replacements_dict_type {\r\n    [ast_id: number]: {\r\n        expression_value: expression_value,\r\n        expand_struct: ast_expand_struct\r\n    }\r\n}\r\n\r\n\r\nexport interface animation_state {\r\n    ast_program: program_type | null,\r\n    last_state_change: state_change_info_type | null,\r\n    scope: ScopeManager | null,\r\n    expression_value_replacements: expval_replacements_dict_type,\r\n    highlighted_ast_ids: number[]\r\n};\r\n\r\nexport interface state_change_argument {\r\n    ast_program?: program_type | null,\r\n    last_state_change?: state_change_info_type | null,\r\n    scope?: ScopeManager | null,\r\n    expression_value_replacements?: expval_replacements_dict_type,\r\n    highlighted_ast_ids?: number[]\r\n};\r\n\r\n\r\n\r\n// TODO: all this change types can be implemented using a single parametered type\r\n\r\nexport interface evaluation_change_info_type extends state_change_info_type {\r\n    change_type: \"evaluation\",\r\n    details: {\r\n        evaluated_ast: expression_type,\r\n        returned_value: expression_value,\r\n    }\r\n};\r\n\r\nexport function is_evaluation_change(change_info: state_change_info_type): change_info is evaluation_change_info_type {\r\n    return change_info.change_type === \"evaluation\";\r\n}\r\n\r\nexport interface program_start_change_info_type extends state_change_info_type {\r\n    change_type: \"program_start\",\r\n    details: {}\r\n};\r\n\r\nexport function is_program_start_change(change_info: state_change_info_type): change_info is program_start_change_info_type {\r\n    return change_info.change_type === \"program_start\";\r\n}\r\n\r\nexport interface execution_start_change_info_type extends state_change_info_type {\r\n    change_type: \"execution_start\",\r\n    details: {\r\n        ast_statement: statement_type\r\n    }\r\n};\r\n\r\nexport function is_execution_start_change(change_info: state_change_info_type): change_info is execution_start_change_info_type {\r\n    return change_info.change_type === \"execution_start\";\r\n}\r\n\r\nexport interface after_function_retake_change_info_type extends state_change_info_type {\r\n    change_type: \"after_function_retake\",\r\n    details: {}\r\n};\r\n\r\nexport function is_after_function_retake_change(change_info: state_change_info_type): change_info is after_function_retake_change_info_type {\r\n    return change_info.change_type === \"after_function_retake\";\r\n}\r\n\r\nexport interface for_loop_restoration_change_info_type extends state_change_info_type {\r\n    change_type: \"for loop restoration\",\r\n    details: {\r\n        for_ast: for_statement_type,\r\n    }\r\n};\r\n\r\nexport function is_for_loop_restoration(change_info: state_change_info_type): change_info is for_loop_restoration_change_info_type {\r\n    return change_info.change_type === \"for loop restoration\";\r\n}\r\n\r\nexport interface new_scope_info_type extends state_change_info_type {\r\n    change_type: \"new_scope\",\r\n    details: {}\r\n};\r\n\r\nexport function is_new_scope_change(change_info: state_change_info_type): change_info is new_scope_info_type {\r\n    return change_info.change_type === \"new_scope\";\r\n}\r\n\r\nexport interface scope_end_info_type extends state_change_info_type {\r\n    change_type: \"scope_end\",\r\n    details: {}\r\n};\r\n\r\nexport function is_scope_end_change(change_info: state_change_info_type): change_info is scope_end_info_type {\r\n    return change_info.change_type === \"scope_end\";\r\n}\r\n\r\nexport interface scope_change_info_type extends state_change_info_type {\r\n    change_type: \"scope_change\",\r\n    details: {}\r\n};\r\n\r\nexport function is_scope_change_change(change_info: state_change_info_type): change_info is scope_change_info_type {\r\n    return change_info.change_type === \"scope_change\";\r\n}\r\n\r\nexport interface add_to_scope_info_type extends state_change_info_type {\r\n    change_type: \"add_to_scope\",\r\n    details: {\r\n        variable: ScopeVariable,\r\n        ast_origin: nearley_custom_object\r\n    }\r\n};\r\n\r\nexport function is_add_to_scope_change(change_info: state_change_info_type): change_info is for_loop_restoration_change_info_type {\r\n    return change_info.change_type === \"add_to_scope\";\r\n}\r\n\r\nexport interface assignment_info_type extends state_change_info_type {\r\n    change_type: \"assignment\",\r\n    details: {\r\n        variable: ScopeVariable,\r\n        ast_origin: nearley_custom_object\r\n    }\r\n};\r\n\r\nexport function is_assignment_change(change_info: state_change_info_type): change_info is for_loop_restoration_change_info_type {\r\n    return change_info.change_type === \"assignment\";\r\n}\r\n\r\nexport interface index_evaluation_info_type extends state_change_info_type {\r\n    change_type: \"index_evaluation\",\r\n    details: {\r\n        index_value: string,\r\n        access_by_index_expression: access_by_index_expression_type\r\n    }\r\n};\r\n\r\nexport function is_index_evaluation_change(change_info: state_change_info_type): change_info is for_loop_restoration_change_info_type {\r\n    return change_info.change_type === \"index_evaluation\";\r\n}\r\n\r\nexport interface value_update_info_type extends state_change_info_type {\r\n    change_type: \"value_update\",\r\n    details: {\r\n        expression_value: expression_value\r\n    }\r\n};\r\n\r\nexport function is_value_update_change(change_info: state_change_info_type): change_info is for_loop_restoration_change_info_type {\r\n    return change_info.change_type === \"value_update\";\r\n}\r\n\r\nexport interface before_function_call_info_type extends state_change_info_type {\r\n    change_type: \"before_function_call\",\r\n    details: {\r\n        function: function_definition_type,\r\n        expression_call: expression_call_type,\r\n        parameter_values: expression_value[];\r\n    }\r\n};\r\n\r\nexport function is_before_function_call_change(change_info: state_change_info_type): change_info is for_loop_restoration_change_info_type {\r\n    return change_info.change_type === \"before_function_call\";\r\n}\r\n\r\n","\r\nexport default function add_to_scope(scope_container:Element, variable_element:Element){\r\n    const current_scope = scope_container.getElementsByClassName(\"current-scope\")[0];\r\n    \r\n    current_scope.appendChild(variable_element);\r\n     \r\n}  ","import { expression_value, is_string_value, is_number_value, is_array_value, is_object_value, is_boolean_value, is_undefined_value, is_function_value } from \"../code_editors/js/interpreter/parsing_files/expression_value_types\";\r\n// import { get_short_representation_element } from \"./get_short_representation_element\";\r\nexport function mock_token_element(content: string, token_type: string): Element {\r\n    const string_token = document.createElement(\"span\");\r\n    string_token.className = \"token cm-\" + token_type;\r\n    string_token.innerHTML = content;\r\n    return string_token;\r\n}\r\n\r\n\r\nexport function get_short_representation_element(expression_val: expression_value): Element {\r\n\r\n    const exp = expression_val;\r\n\r\n    if (is_boolean_value(expression_val)) {\r\n        const boolval = expression_val.value;\r\n        if (expression_val.value) {\r\n            const string_token = mock_token_element(boolval, \"true\");\r\n            return string_token;\r\n        }\r\n        else {\r\n            const string_token = mock_token_element(boolval, \"false\");\r\n            return string_token;\r\n        }\r\n    }\r\n\r\n    else if (is_string_value(exp)) {\r\n        const string_token = mock_token_element(\"\\\"\" + exp.value + \"\\\"\", \"string\");\r\n        return string_token;\r\n    }\r\n\r\n    else if (is_number_value(exp)) {\r\n        return mock_token_element(exp.value.toString(), \"number\");\r\n    }\r\n\r\n\r\n    else if (is_array_value(expression_val)) {\r\n        return mock_token_element(\"[...]\", \"none\");\r\n    }\r\n\r\n\r\n    else if (is_object_value(expression_val)) {\r\n        return mock_token_element(\"{...}\", \"none\");\r\n    }\r\n\r\n    else if (is_undefined_value(expression_val)) {\r\n        return mock_token_element(\"undefined\", \"none\");\r\n    }\r\n\r\n    else if (is_function_value(exp)) {\r\n        const function_representation_element = document.createElement(\"span\");\r\n        function_representation_element.appendChild(mock_token_element(\"&#x192;\", \"symbol\"));\r\n        function_representation_element.appendChild(mock_token_element(\"(\", \"symbol\"));\r\n        function_representation_element.appendChild(mock_token_element(\"...\", \"none\"));\r\n        const parameters = exp.value.function.parameters_list.list;\r\n        // for (let i = 0; i < parameters.length; i++) {\r\n        //     const p = parameters[i];\r\n        //     const identifier = p.parameter_identifier.value\r\n        //     function_representation_element.appendChild(mock_token_element(identifier, \"identifier\"));\r\n        //     if (i !== parameters.length - 1){\r\n        //         function_representation_element.appendChild(mock_token_element(\", \", \"symbol\"));\r\n        //     }\r\n        // }\r\n        function_representation_element.appendChild(mock_token_element(\")\", \"symbol\"));\r\n        return function_representation_element;\r\n\r\n    }\r\n\r\n\r\n\r\n    return mock_token_element(\"short_non_represented\", \"error\");\r\n}\r\n\r\nexport function get_intermediate_representation_element(expression_val: expression_value): Element {\r\n\r\n    if (is_string_value(expression_val)) {\r\n        return get_short_representation_element(expression_val);\r\n    }\r\n\r\n    if (is_number_value(expression_val)) {\r\n        return get_short_representation_element(expression_val);\r\n    }\r\n\r\n    if (is_boolean_value(expression_val)) {\r\n        return get_short_representation_element(expression_val);\r\n    }\r\n\r\n    if (is_array_value(expression_val)) {\r\n        const array_component = document.createElement(\"span\");\r\n        const open_braces_component = mock_token_element(\"[\", \"none\");\r\n        array_component.appendChild(open_braces_component);\r\n        let items = expression_val!.value;\r\n        const items_component = document.createElement(\"span\");\r\n\r\n        if (items.length > 0) {\r\n            const first_item = get_short_representation_element(items[0]);\r\n            items_component.appendChild(first_item);\r\n            if (items.length > 1) {\r\n                if (items.length > 2) {\r\n                    const mid_item = mock_token_element(\", ...\", \"symbol\");\r\n                    items_component.appendChild(mid_item);\r\n                }\r\n                const final_separator = document.createElement(\"span\");\r\n                final_separator.innerHTML = \", \";\r\n                items_component.appendChild(final_separator);\r\n                const final_item = get_short_representation_element(items[items.length - 1]);\r\n                items_component.appendChild(final_item);\r\n            }\r\n        }\r\n        array_component.appendChild(items_component);\r\n        const close_braces_component = mock_token_element(\"]\", \"none\");\r\n        array_component.appendChild(close_braces_component);\r\n        return array_component;\r\n    }\r\n\r\n\r\n\r\n    if (is_object_value(expression_val)) {\r\n        const array_component = document.createElement(\"span\");\r\n        const open_braces_component = mock_token_element(\"{\", \"none\");\r\n        array_component.appendChild(open_braces_component);\r\n        const keys = Object.keys(expression_val!.value);\r\n        const dict = expression_val!.value;\r\n        const items_component = document.createElement(\"span\");\r\n\r\n        if (keys.length > 0) {\r\n            const first_key = mock_token_element(\"\\\"\" + keys[0] + \"\\\"\", \"string\")\r\n            const colon = mock_token_element(\":\", \"symbol\")\r\n            const first_item = get_short_representation_element(dict[keys[0]]);\r\n            items_component.appendChild(first_key);\r\n            items_component.appendChild(colon);\r\n            items_component.appendChild(first_item);\r\n            if (keys.length > 1) {\r\n                if (keys.length > 2) {\r\n                    const mid_item = mock_token_element(\", ...\", \"symbol\");\r\n                    items_component.appendChild(mid_item);\r\n                }\r\n\r\n                const final_separator = document.createElement(\"span\");\r\n                final_separator.innerHTML = \", \";\r\n                items_component.appendChild(final_separator);\r\n                const final_key = mock_token_element(\"\\\"\" + keys[keys.length - 1] + \"\\\"\", \"string\")\r\n                const final_colon = mock_token_element(\":\", \"symbol\")\r\n                const final_item = get_short_representation_element(dict[keys[keys.length - 1]]);\r\n                items_component.appendChild(final_key);\r\n                items_component.appendChild(final_colon);\r\n                items_component.appendChild(final_item);\r\n\r\n            }\r\n        }\r\n        array_component.appendChild(items_component);\r\n        const close_braces_component = mock_token_element(\"}\", \"none\");\r\n        array_component.appendChild(close_braces_component);\r\n        return array_component;\r\n    }\r\n\r\n    if (is_undefined_value(expression_val)) {\r\n        return get_short_representation_element(expression_val);\r\n    }\r\n\r\n    if (is_function_value(expression_val)) {\r\n        return get_short_representation_element(expression_val);\r\n    }\r\n\r\n    return mock_token_element(\"intermediate_non_represented\", \"error\");\r\n}\r\n","export default `<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" class=\"svg-font\" viewBox=\"0 0 32 32\">\n<title>eye</title>\n<path d=\"M16 6c-6.979 0-13.028 4.064-16 10 2.972 5.936 9.021 10 16 10s13.027-4.064 16-10c-2.972-5.936-9.021-10-16-10zM23.889 11.303c1.88 1.199 3.473 2.805 4.67 4.697-1.197 1.891-2.79 3.498-4.67 4.697-2.362 1.507-5.090 2.303-7.889 2.303s-5.527-0.796-7.889-2.303c-1.88-1.199-3.473-2.805-4.67-4.697 1.197-1.891 2.79-3.498 4.67-4.697 0.122-0.078 0.246-0.154 0.371-0.228-0.311 0.854-0.482 1.776-0.482 2.737 0 4.418 3.582 8 8 8s8-3.582 8-8c0-0.962-0.17-1.883-0.482-2.737 0.124 0.074 0.248 0.15 0.371 0.228v0zM16 13c0 1.657-1.343 3-3 3s-3-1.343-3-3 1.343-3 3-3 3 1.343 3 3z\"></path>\n</svg>`","import React, { useContext } from 'react';\r\nimport CharComponent from './CharComponent';\r\nimport { token_type } from '../interpreter/ast_types';\r\n\r\ntype props_type = {\r\n    token: token_type,\r\n}\r\n\r\nexport default function TokenComponent(props: props_type) {\r\n\r\n    const token = props.token;\r\n    let token_classes = [\"token\"];\r\n    token_classes.push(\"cm-\" + token.type);\r\n\r\n    return (<span className={token_classes.join(\" \")}>{props.token.value}</span>)\r\n}","import React from 'react';\r\n// import { AST, ast_child_type } from '../interpreter/parsing_files/ast_objects';\r\n// import IgnoredTokens from './ast_general_functions/IgnoredTokens';\r\nimport TokenComponent from './TokenComponent';\r\n\r\ntype ast_component_props_type = {\r\n    ast_object: any\r\n}\r\n\r\nfunction ASTComponent(props: ast_component_props_type) {\r\n\r\n    let child_counter = 0;\r\n\r\n    function get_child_component(ast_child: any) {\r\n        if(!ast_child) return null;\r\n        const child_id = ast_child.id ? ast_child.id : child_counter++;\r\n        if (ast_child.types)\r\n            return <ASTComponent ast_object={ast_child} key={child_id} />;\r\n        if (ast_child.value)\r\n            return <TokenComponent token={ast_child} key={child_id} />\r\n\r\n        if(Array.isArray( ast_child)){\r\n            const ChildComponents: any = [];\r\n            console.warn(\"array_child:\", ast_child);\r\n            for (let i = 0; i < ast_child.length; i++) {\r\n                const child = ast_child[i];\r\n                ChildComponents.push(\r\n                    get_child_component(child)\r\n                );\r\n            }\r\n            return ChildComponents;\r\n        }\r\n\r\n        return \"!\";\r\n    }\r\n\r\n    function render_component() {\r\n        const object = props.ast_object;\r\n        const children = object.children;\r\n        const ChildComponents: any = [];\r\n        if (children.length > 0) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                ChildComponents.push(\r\n                    get_child_component(child)\r\n                );\r\n            }\r\n        }\r\n        return ChildComponents;\r\n    }\r\n\r\n    const classnames = [];\r\n    try {\r\n\r\n        classnames.push(\"ast-object-\" + props.ast_object.id);\r\n    } catch (error) {\r\n        console.error(\"catched props of ASTComponent\", props);\r\n    }\r\n    for (let i = 0; i < props.ast_object.types.length; i++) {\r\n        const type = props.ast_object.types[i];\r\n        classnames.push(type);\r\n    }\r\n\r\n    return (\r\n        <span key={props.ast_object.id} className={classnames.join(\" \")}>\r\n            {render_component()}\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default ASTComponent;","import ReactDOMServer from 'react-dom/server';\r\nimport { get_short_representation_element } from \"../get_representation_levels\";\r\nimport { is_array_value, expression_value, array_expression_value, object_expression_value, is_object_value, is_function_value, function_value } from \"../../code_editors/js/interpreter/parsing_files/expression_value_types\";\r\nimport tippy from 'tippy.js';\r\nimport 'tippy.js/themes/light.css';\r\nimport 'tippy.js/dist/tippy.css';\r\nimport ast_expand_struct from \"../ast_expand_struct_types\";\r\nimport eye from \"./expand_icons/eye\";\r\nimport ASTComponent from '../../code_editors/js/ast_components/ASTComponent';\r\n\r\nfunction create_expanded_arrayexpval_element(val: array_expression_value, z_index: number) {\r\n    const expanded_value = document.createElement(\"div\");\r\n    expanded_value.classList.add(\"expanded-array\");\r\n    expanded_value.style.zIndex = z_index.toString();\r\n    for (let i = 0; i < val.value.length; i++) {\r\n        const exp_val = val.value[i];\r\n        const key_element = document.createElement(\"div\");\r\n        key_element.innerHTML = i.toString();\r\n        key_element.classList.add(\"key-element\");\r\n        key_element.classList.add(\"number-key\");\r\n        const value_element = create_ast_expand_struct(exp_val).element;\r\n        value_element.classList.add(\"value-element\");\r\n        const item_element = document.createElement(\"div\");\r\n        item_element.classList.add(\"item-element\");\r\n        item_element.classList.add(\"item-element-\" + i);\r\n        item_element.appendChild(key_element);\r\n        item_element.appendChild(value_element);\r\n        expanded_value.appendChild(item_element);\r\n    }\r\n    return expanded_value;\r\n}\r\n\r\nfunction create_expanded_objectexpval_element(val: object_expression_value, z_index: number) {\r\n    const expanded_value = document.createElement(\"div\");\r\n    expanded_value.classList.add(\"expanded-oject\");\r\n    expanded_value.style.zIndex = z_index.toString();\r\n    const keys = Object.keys(val.value);\r\n    for (let i = 0; i < keys.length; i++) {\r\n        const key = keys[i];\r\n        const exp_val = val.value[key];\r\n        const key_element = document.createElement(\"div\");\r\n        key_element.innerHTML = key;\r\n        key_element.classList.add(\"key-element\");\r\n        key_element.classList.add(\"string-key\");\r\n        const value_element = create_ast_expand_struct(exp_val).element;\r\n        value_element.classList.add(\"value-element\");\r\n        const item_element = document.createElement(\"div\");\r\n        item_element.classList.add(\"item-element\");\r\n        item_element.classList.add(\"item-element-\" + key);\r\n        item_element.appendChild(key_element);\r\n        item_element.appendChild(value_element);\r\n        expanded_value.appendChild(item_element);\r\n    }\r\n    return expanded_value;\r\n}\r\n\r\nfunction create_expanded_functionexpval_element(val: function_value, z_index: number) {\r\n    const expanded_value = document.createElement(\"div\");\r\n    expanded_value.classList.add(\"expanded-function\");\r\n    const pre_wrapper = document.createElement(\"pre\");\r\n    pre_wrapper.classList.add(\"code\");\r\n    expanded_value.appendChild(pre_wrapper);\r\n    const ast_function = val.value.function;\r\n    // console.log({ast_function});\r\n    const function_component_html_string = ReactDOMServer.renderToString(\r\n        ASTComponent({ ast_object: ast_function })\r\n    );\r\n    // console.log({function_component_html_string});\r\n    pre_wrapper.innerHTML = function_component_html_string;\r\n    return expanded_value;\r\n}\r\n\r\nfunction create_expanded_value(val: expression_value, z_index: number) {\r\n    const expanded_wrapper = document.createElement(\"div\");\r\n    expanded_wrapper.classList.add(\"expanded-value\");\r\n    expanded_wrapper.classList.add(\"nice-scroll-bar\");\r\n    if (is_array_value(val))\r\n        expanded_wrapper.appendChild(\r\n            create_expanded_arrayexpval_element(val, z_index)\r\n        );\r\n    else if (is_object_value(val))\r\n        expanded_wrapper.appendChild(\r\n            create_expanded_objectexpval_element(val, z_index)\r\n        );\r\n    else if (is_function_value(val))\r\n        expanded_wrapper.appendChild(\r\n            create_expanded_functionexpval_element(val, z_index)\r\n        );\r\n    else {\r\n        const error_element = document.createElement(\"div\");\r\n        error_element.innerHTML = \"not expandable expression value\";\r\n        return error_element;\r\n    }\r\n\r\n    return expanded_wrapper;\r\n}\r\n\r\nexport default function create_ast_expand_struct(val: expression_value, z_index: number = 0): ast_expand_struct {\r\n    const scope_value = document.createElement(\"span\");\r\n    scope_value.classList.add(\"scope-value\");\r\n    scope_value.classList.add(\"scope-value-\" + val.id);\r\n    const var_value = val;\r\n    if (var_value)\r\n        scope_value.appendChild(get_short_representation_element(var_value));\r\n    else\r\n        scope_value.innerHTML = \"undefined???\";\r\n\r\n    let triggers = null;\r\n\r\n    if (is_array_value(var_value) || is_object_value(var_value) || is_function_value(var_value)) {\r\n        const expand_trigger = document.createElement(\"div\");\r\n        expand_trigger.innerHTML = eye;\r\n        expand_trigger.classList.add(\"value-expand-trigger\");\r\n        scope_value.appendChild(expand_trigger);\r\n        const expanded_element = create_expanded_value(var_value, z_index + 1);\r\n        scope_value.classList.add(\"collapsed\");\r\n        const tippy_instance = tippy(scope_value, {\r\n            content: expanded_element,\r\n            trigger: \"manual\",\r\n            placement: \"bottom\",\r\n            theme: 'expanded-value',\r\n            arrow: true,\r\n            // hideOnClick: false,\r\n            interactive: true,\r\n            appendTo:document.body\r\n            // popperOptions: {\r\n            //     positionFixed: true,\r\n            // }\r\n        });\r\n        let expand = function () {\r\n            scope_value.classList.remove(\"collapsed\");\r\n            scope_value.classList.add(\"expanded\");\r\n            tippy_instance.show();\r\n        }\r\n        let collapse = function () {\r\n            scope_value.classList.add(\"collapsed\");\r\n            scope_value.classList.remove(\"expanded\");\r\n            tippy_instance.hide();\r\n        }\r\n        expand_trigger.addEventListener(\"click\", () => {\r\n            expand();\r\n        });\r\n\r\n        triggers = {\r\n            expand,\r\n            collapse,\r\n            expanded_element\r\n        }\r\n\r\n        // scope_value.appendChild(expanded_value);\r\n    }\r\n\r\n    return {\r\n        triggers,\r\n        element: scope_value\r\n    }\r\n}","import ScopeVariable from \"../../code_editors/js/interpreter/parsing_files/variable\";\r\n\r\nimport create_expandable_value_element from './create_ast_expand_struct';\r\nexport default function create_variable_element(variable: ScopeVariable) {\r\n    const variable_name = variable.name;\r\n    let scope_element = document.createElement(\"div\");\r\n    // scope_element.style.position = \"relative\";\r\n    scope_element.classList.add(\"scope-var\");\r\n    scope_element.classList.add(\"scope-var-\" + variable_name);\r\n    scope_element.classList.add(\"scope-var-id-\" + variable.id);\r\n    const scope_identifier = document.createElement(\"span\");\r\n    scope_identifier.classList.add(\"scope-identifier\");\r\n    scope_identifier.innerHTML = variable_name;\r\n    const scope_equal_sign = document.createElement(\"span\");\r\n    scope_equal_sign.classList.add(\"scope-equal-sign\");\r\n    scope_equal_sign.innerHTML = \" = \";\r\n    const scope_value = create_expandable_value_element(variable.value).element;\r\n    scope_element.appendChild(scope_identifier);\r\n    scope_element.appendChild(scope_equal_sign);\r\n    scope_element.appendChild(scope_value);\r\n\r\n\r\n\r\n    return scope_element;\r\n}","import gsap from 'gsap';\r\n\r\ntype point = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nfunction get_global_coordinate(element: Element): point {\r\n    var rect = element.getBoundingClientRect(),\r\n        scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\r\n        scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n    return { y: rect.top + scrollTop, x: rect.left + scrollLeft }\r\n}\r\n\r\nexport default async function drag_element_to_another(starting_point_element: Element, dragged_element: Element, end_point_element: Element, speed: number) {\r\n    return new Promise((resolve) => {\r\n\r\n        const first_coord = get_global_coordinate(starting_point_element);\r\n        const second_coord = get_global_coordinate(end_point_element);\r\n        document.body.appendChild(dragged_element);\r\n        const dehtml = dragged_element as HTMLElement\r\n        dehtml.style.opacity = \"0\";\r\n        dehtml.style.position = \"absolute\";\r\n        const dragged_square = dragged_element.getBoundingClientRect();\r\n        const first_square = starting_point_element.getBoundingClientRect();\r\n        const second_square = end_point_element.getBoundingClientRect();\r\n        const initial_x_position = first_coord.x;\r\n        const initial_y_position = first_coord.y;\r\n        const final_x_position = second_coord.x + (second_square.width - dragged_square.width) / 2;\r\n        const final_y_position = second_coord.y + (second_square.height - dragged_square.height) / 2;\r\n        dehtml.style.left = `${initial_x_position}px`;\r\n        dehtml.style.top = `${initial_y_position}px`;\r\n        const tl = gsap.timeline({ onComplete: resolve });\r\n        tl.to(dragged_element, { duration: speed / 2000, opacity: 1 });\r\n        tl.to(dragged_element, { duration: speed / 1000, left: final_x_position, top: final_y_position });\r\n\r\n    })\r\n\r\n\r\n}","import ScopeManager from \"../../code_editors/js/interpreter/parsing_files/scope_objects\";\r\n\r\nexport default async function remove_from_scope(scope_container: Element, variable_id: number) {\r\n    const current_scope = scope_container.getElementsByClassName(\"current-scope\")[0];\r\n    const var_to_remove = current_scope.getElementsByClassName(\"scope-var-id-\" + variable_id)[0];\r\n    var_to_remove.remove();\r\n}","import gsap from 'gsap';\r\nimport { ScrollToPlugin } from 'gsap/all';\r\ngsap.registerPlugin(ScrollToPlugin);\r\n\r\nexport default function scroll_to(element: Element, container: Element, speed: number) {\r\n    const el = element as HTMLElement;\r\n    const cont = container as HTMLElement;\r\n    let elementTop = el.offsetTop;\r\n    let container_top = cont.offsetTop;\r\n    let elementRelativeTop = elementTop - container_top - cont.clientHeight / 2;\r\n    let scroll_needed = elementRelativeTop - cont.scrollTop;\r\n    let duration = speed * Math.abs(scroll_needed) / 100000;\r\n    return new Promise((resolve) => {\r\n        const tl = gsap.timeline({ onComplete: resolve });\r\n        tl.to(cont, { duration, scrollTo: elementRelativeTop });\r\n    });\r\n\r\n}","import gsap from 'gsap';\r\nexport default async function vertical_expand(el: Element, speed: number) {\r\n    const htmlel = el as HTMLElement;\r\n    const dummy = el.cloneNode(true) as HTMLElement;\r\n    htmlel.after(dummy);\r\n    const final_height = htmlel.getBoundingClientRect().height;\r\n    htmlel.remove();\r\n    dummy.style.height = \"0px\";\r\n    dummy.style.overflow= \"hidden\";\r\n    await gsap.to(dummy, { duration: speed / 1000, height: final_height });\r\n    dummy.after(htmlel);\r\n    dummy.remove();\r\n}","import add_to_scope from '../animation_effects/add_to_scope';\r\nimport create_variable_element from '../animation_effects/create_scope_var_element';\r\nimport drag_element_to_another from '../animation_effects/drag_one_element_to_another';\r\nimport hide_scope from '../animation_effects/hide_scope';\r\nimport remove_from_scope from '../animation_effects/remove_from_scope';\r\nimport scroll_to from '../animation_effects/scroll_to';\r\nimport show_scope from '../animation_effects/show_scope';\r\nimport vertical_expand from '../animation_effects/vertical_expand';\r\nimport { add_to_scope_info_type, animation_state } from '../animation_state_types';\r\nimport animation_step_type from '../animation_step_type';\r\nimport step_creator_type from './step_creator_type';\r\n\r\nconst add_to_scope_step_creator: step_creator_type = function (before: animation_state, after: animation_state, code_element: Element, scope_element: Element) {\r\n    const change_info = after.last_state_change as add_to_scope_info_type;\r\n    const variable = change_info.details.variable;\r\n\r\n\r\n    const step: animation_step_type = {\r\n        name: \"add to scope\",\r\n        animate: async (speed: number) => {\r\n            const scope_var_elment = create_variable_element(variable!);\r\n            const element_to_move_into_scope = code_element.getElementsByClassName(\"ast-object-\" + change_info.details.ast_origin.id)[0] as Element;\r\n            const dragged_element = document.createElement(\"div\");\r\n            dragged_element.classList.add(\"drag-to-scope\");\r\n            dragged_element.appendChild(scope_var_elment);\r\n            const current_scope = scope_element.getElementsByClassName(\"current-scope\")[0];\r\n            const dummy = document.createElement('div');\r\n            dummy.classList.add(\"scope-var\");\r\n            dummy.classList.add(\"dummy-scope-var\");\r\n            dummy.innerHTML = \"&nbsp;\";\r\n            current_scope.appendChild(dummy);\r\n            await vertical_expand(dummy, speed);\r\n            // await show_scope(scope_element, speed);\r\n            const scope_scroller = scope_element.getElementsByClassName(\"scrollable-y\")[0];\r\n            await Promise.all(\r\n                [\r\n                    scroll_to(element_to_move_into_scope, code_element, speed),\r\n                    scroll_to(current_scope.lastElementChild ? current_scope.lastElementChild : current_scope, scope_scroller, speed)\r\n                ]\r\n            );\r\n            await drag_element_to_another(element_to_move_into_scope, dragged_element, dummy, speed)\r\n            dragged_element.remove();\r\n            dummy.remove();\r\n            await add_to_scope(scope_element, scope_var_elment);\r\n        },\r\n        rollback: async (speed: number) => {\r\n            await remove_from_scope(scope_element, variable.id);\r\n        }\r\n    }\r\n\r\n    return step;\r\n    // const show_scope_step = create_show_scope_step(scope_container);\r\n    // const hide_scope_step = create_hide_scope_step(scope_container);\r\n    // return merge_steps([show_scope_step, step, hide_scope_step]);\r\n\r\n}\r\n\r\nexport default add_to_scope_step_creator;\r\n","import gsap from 'gsap';\r\n\r\ntype view_blocker_data_type = {\r\n    top: number,\r\n    left: number,\r\n    width: number,\r\n    height: number,\r\n}\r\n\r\nfunction get_view_blocker_data(inline_element: Element, scrollable_container: Element): view_blocker_data_type {\r\n    const container_rect = scrollable_container.getBoundingClientRect();\r\n    const inline_rect = inline_element.getBoundingClientRect();\r\n    return {\r\n        top: inline_rect.top - container_rect.top,\r\n        left: inline_rect.left - container_rect.left,\r\n        width: inline_rect.width,\r\n        height: inline_rect.height,\r\n    };\r\n}\r\n\r\n\r\nexport default function set_replacement(scrollable_container: Element, element_to_replace: Element, new_content: Element, speed: number) {\r\n\r\n    return new Promise((resolve) => {\r\n\r\n        element_to_replace.innerHTML = element_to_replace.innerHTML; // get rid of all references;\r\n        const old_vb_data = get_view_blocker_data(element_to_replace, scrollable_container);\r\n        // console.log({scrollable_container});\r\n        // console.log({old_vb_data});\r\n        const view_blocker = document.createElement('span');\r\n        view_blocker.classList.add(\"view-blocker\");\r\n        scrollable_container.appendChild(view_blocker);\r\n        const tl = gsap.timeline();\r\n\r\n        tl.set(view_blocker, { ...old_vb_data, opacity: 0 });\r\n        tl.to(view_blocker, {\r\n            duration: speed / 2000, opacity: 1, onComplete: () => {\r\n                const re = <HTMLDivElement>element_to_replace;\r\n                re.style.opacity=\"0\";\r\n                const finaltl = gsap.timeline({\r\n                    onComplete: () => {\r\n                        view_blocker.remove();\r\n                        resolve();\r\n                    }\r\n                });\r\n\r\n                let new_vb_data: view_blocker_data_type | null = null;\r\n                const original_innerhtml = element_to_replace.innerHTML;\r\n                element_to_replace.innerHTML = \"\";\r\n                const nc = <HTMLDivElement>new_content.cloneNode(true);\r\n                nc.style.opacity = \"0\";\r\n                element_to_replace.after(nc);\r\n                new_vb_data = get_view_blocker_data(nc, scrollable_container);\r\n                nc.remove();\r\n                element_to_replace.innerHTML = original_innerhtml;\r\n                \r\n                finaltl.to(view_blocker, {\r\n                    duration: speed / 2000, ...new_vb_data ? new_vb_data : {}, onComplete: () => {\r\n                        element_to_replace.innerHTML = \"\";\r\n                        element_to_replace.after(new_content);\r\n                        element_to_replace.remove();\r\n                    }\r\n                });\r\n                finaltl.to(view_blocker, { duration: speed / 2000, opacity: 0 });\r\n            }\r\n        });\r\n    })\r\n}","import ReactDOMServer from 'react-dom/server';\r\nimport ASTComponent from '../../code_editors/js/ast_components/ASTComponent';\r\nimport { nearley_custom_object } from '../../code_editors/js/interpreter/ast_types';\r\nimport create_ast_expand_struct from '../animation_effects/create_ast_expand_struct';\r\nimport { expval_replacements_dict_type } from '../animation_state_types';\r\n\r\n\r\nexport default function get_element_from_ast(ast: nearley_custom_object, replacements_dict: expval_replacements_dict_type) {\r\n    const wrapper = document.createElement(\"div\");\r\n    let element_string = ReactDOMServer.renderToString(\r\n        ASTComponent({ ast_object: ast })\r\n    );\r\n    wrapper.innerHTML = element_string;\r\n    const returned = wrapper.firstChild as Element;\r\n\r\n    // TODO: this is very inefficient although efficiency is not a big concern here now;\r\n    for (const key of Object.keys(replacements_dict)) {\r\n        const ast_id = Number(key);\r\n        const ast_elements = wrapper.getElementsByClassName(\"ast-object-\" + ast_id);\r\n        if (ast_elements.length > 0) {\r\n            const ast_element = ast_elements[0];\r\n            ast_element.innerHTML = \"\";\r\n            const expandable_struct = (replacements_dict[ast_id].expand_struct);\r\n            ast_element.appendChild(expandable_struct.element);\r\n        }\r\n    }\r\n    return returned;\r\n}","import set_replacement from '../animation_effects/set_replacement';\r\nimport { is_binary_expression, is_function_definition, is_constant_expression, get_ast_dependency_tree } from \"../../code_editors/js/interpreter/ast_types\";\r\nimport step_creator_type from './step_creator_type';\r\nimport { animation_state, before_function_call_info_type, is_evaluation_change } from '../animation_state_types';\r\nimport get_element_from_ast from './get_element_from_ast';\r\nimport scroll_to from '../animation_effects/scroll_to';\r\nimport create_ast_expand_struct from '../animation_effects/create_ast_expand_struct';\r\nimport { mock_token_element } from '../get_representation_levels';\r\n\r\n\r\nconst before_function_call_step_creator: step_creator_type = function (before: animation_state, after: animation_state, code_element: Element, scope_element: Element) {\r\n\r\n    let change = after.last_state_change as before_function_call_info_type;\r\n\r\n\r\n    async function animate(speed: number) {\r\n        // restore function:\r\n        const fun = change.details.function;\r\n        const function_element = code_element.getElementsByClassName(\"ast-object-\" + fun.id)[0];\r\n        const function_element_restored = get_element_from_ast(fun, {});\r\n        await scroll_to(function_element, code_element, speed);\r\n        await set_replacement(code_element, function_element, function_element_restored, speed);\r\n\r\n        // display parameters\r\n        const ast_required_parameters_list = fun.parameters_list.list;\r\n        const replacement_promises = [];\r\n        const scroll_promises = [];\r\n        for (let i = 0; i < change.details.parameter_values.length; i++) {\r\n            const value = change.details.parameter_values[i];\r\n            const value_replacement_element = create_ast_expand_struct(value).element;\r\n            const required_parameter = ast_required_parameters_list[i];\r\n\r\n            if (required_parameter.optional_assignment_fragment) {\r\n                const value_id = required_parameter.optional_assignment_fragment.value.id;\r\n                const value_emt = code_element.getElementsByClassName(\"ast-object-\" + value_id)[0];\r\n                scroll_promises.push(\r\n                    scroll_to(value_emt, code_element, speed)\r\n                );\r\n                replacement_promises.push(\r\n                    set_replacement(code_element, value_emt, value_replacement_element, speed)\r\n                );\r\n            } else {\r\n                const parameter_element = code_element.getElementsByClassName(\"ast-object-\" + required_parameter.id)[0];\r\n                const dummy = document.createElement(\"span\");\r\n                parameter_element.appendChild(dummy);\r\n                const value_wrapper = document.createElement(\"span\");\r\n                const equals_sign = mock_token_element(\"=\", \"binary_op\");\r\n                value_wrapper.appendChild(equals_sign);\r\n                value_wrapper.appendChild(value_replacement_element);\r\n                scroll_promises.push(\r\n                    scroll_to(dummy, code_element, speed)\r\n                );\r\n                replacement_promises.push(\r\n                    set_replacement(code_element, dummy, value_wrapper, speed)\r\n                );\r\n            }\r\n        }\r\n\r\n        await scroll_promises[0];\r\n        await Promise.all(replacement_promises);\r\n    }\r\n\r\n    async function rollback(speed: number) {\r\n    }\r\n\r\n    return {\r\n        name: \"evaluation replacement\",\r\n        animate,\r\n        rollback\r\n    }\r\n\r\n}\r\n\r\nexport default before_function_call_step_creator;","export default function add_or_remove_class_to_text_containers(element: Element, classname: string = \"lowlighted\", operation_type: \"add\" | \"remove\" = \"add\") {\r\n    let children = element.children;\r\n    if(element instanceof SVGElement){\r\n        if (operation_type === \"add\")\r\n            element.parentElement?.classList.add(classname);\r\n        else\r\n            element.parentElement?.classList.remove(classname);\r\n        return;\r\n    }\r\n    if (children.length === 0) {\r\n        if (operation_type === \"add\")\r\n            element.classList.add(classname);\r\n        else\r\n            element.classList.remove(classname);\r\n    } else {\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            add_or_remove_class_to_text_containers(child, classname, operation_type);\r\n        }\r\n    }\r\n}","import add_or_remove_class_to_text_containers from \"./add_or_remove_class_to_text_containers\";\r\n\r\nexport default function highlight_element(el: Element, type: \"highlight\" | \"lowlight\" = \"highlight\") {\r\n    if (type === \"highlight\") {\r\n        add_or_remove_class_to_text_containers(el, \"lowlighted\", \"remove\");\r\n        add_or_remove_class_to_text_containers(el, \"highlighted\");\r\n    } else {\r\n        add_or_remove_class_to_text_containers(el, \"lowlighted\");\r\n        add_or_remove_class_to_text_containers(el, \"highlighted\", \"remove\");\r\n    }\r\n}","import ScopeManager from \"../../code_editors/js/interpreter/parsing_files/scope_objects\";\r\nimport scroll_to from \"./scroll_to\";\r\nimport gsap from 'gsap';\r\nimport search_svg_content from './variable_search_files/search';\r\nimport highlight_element from \"./highlight_element\";\r\n\r\ntype point = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nfunction get_global_coordinate(element: Element): point {\r\n    var rect = element.getBoundingClientRect(),\r\n        scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\r\n        scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n    return { y: rect.top + scrollTop, x: rect.left + scrollLeft }\r\n}\r\n\r\nfunction get_relative_cordinate(element: Element, reference: Element): point {\r\n    const element_point = get_global_coordinate(element);\r\n    const reference_point = get_global_coordinate(reference);\r\n    const relative_point: point = {\r\n        x: element_point.x - reference_point.x,\r\n        y: element_point.y - reference_point.y\r\n    }\r\n    return relative_point;\r\n}\r\n\r\nexport default function search_identifier(variable_name: string, scope_manager: ScopeManager, scope_container: Element, speed: number) {\r\n\r\n    return new Promise(async resolve => {\r\n\r\n        const variable = scope_manager.get_variable(variable_name);\r\n        const scrollable = scope_container.getElementsByClassName(\"scrollable-y\")[0];\r\n        // console.log(scrollable);\r\n        if (variable) {\r\n            const var_id = variable.id;\r\n            const variable_element = scrollable.getElementsByClassName(\"scope-var-id-\" + var_id)[0];\r\n            await scroll_to(variable_element, scrollable, speed);\r\n            const scope_reference_container = scrollable.getElementsByClassName(\"scopes-fullheight-wrapper\")[0];\r\n            // const scope_pos = get_global_coordinate(scope_reference_container);\r\n            const container_rect = scope_reference_container.getBoundingClientRect();\r\n            const var_pos = get_relative_cordinate(variable_element, scope_reference_container);\r\n            const search_icon = document.createElement(\"div\");\r\n            search_icon.innerHTML = search_svg_content;\r\n            search_icon.classList.add(\"search-icon\");\r\n            scope_reference_container.appendChild(search_icon);\r\n            const icon_height = search_icon.getBoundingClientRect().height;\r\n            search_icon.style.display = \"none\";\r\n            // console.log({icon_height});\r\n            // console.log({container_height:container_rect.height});\r\n            \r\n            gsap.set(search_icon, { y: container_rect.height - icon_height, top: 0, left: 0, opacity: 0, display: \"block\" })\r\n            const tl = gsap.timeline({\r\n                onComplete: () => {\r\n                    highlight_element(scrollable, \"lowlight\");\r\n                    highlight_element(variable_element);\r\n                    setTimeout(() => {\r\n                        search_icon.remove();\r\n                        highlight_element(scrollable);\r\n                        resolve();\r\n                    }, speed);\r\n                }\r\n            });\r\n            tl.to(search_icon, { duration: speed / 3000, opacity: 1 });\r\n            tl.to(search_icon, { duration: speed / 1000, y: var_pos.y });\r\n            tl.to(search_icon, { duration: speed / 3000, opacity: 0 });\r\n\r\n        }\r\n    });\r\n\r\n}","export default `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n   xmlns:cc=\"http://creativecommons.org/ns#\"\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n   inkscape:version=\"1.0 (4035a4fb49, 2020-05-01)\"\n   sodipodi:docname=\"search.svg\"\n   xml:space=\"preserve\"\n   style=\"enable-background:new 0 0 512 512;\"\n   viewBox=\"0 0 512 512\"\n   y=\"0px\"\n   x=\"0px\"\n   id=\"Capa_1\"\n   version=\"1.1\"><metadata\n   id=\"metadata59\"><rdf:RDF><cc:Work\n       rdf:about=\"\"><dc:format>image/svg+xml</dc:format><dc:type\n         rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" /><dc:title></dc:title></cc:Work></rdf:RDF></metadata><defs\n   id=\"defs57\" /><sodipodi:namedview\n   inkscape:current-layer=\"Capa_1\"\n   inkscape:window-maximized=\"1\"\n   inkscape:window-y=\"-8\"\n   inkscape:window-x=\"-8\"\n   inkscape:cy=\"143.98069\"\n   inkscape:cx=\"256\"\n   inkscape:zoom=\"1.0507812\"\n   inkscape:pagecheckerboard=\"true\"\n   showgrid=\"false\"\n   id=\"namedview55\"\n   inkscape:window-height=\"705\"\n   inkscape:window-width=\"1366\"\n   inkscape:pageshadow=\"2\"\n   inkscape:pageopacity=\"0\"\n   guidetolerance=\"10\"\n   gridtolerance=\"10\"\n   objecttolerance=\"10\"\n   borderopacity=\"1\"\n   bordercolor=\"#666666\"\n   pagecolor=\"#ffffff\"><inkscape:grid\n     id=\"grid884\"\n     type=\"xygrid\" /></sodipodi:namedview>\n<path\n   id=\"path2\"\n   d=\"m 0,471.273 v 0 C 0,493.382 18.618,512 40.727,512 v 0 c 11.636,0 22.109,-4.655 30.255,-12.8 L 201.309,357.236 c 4.655,-4.655 4.655,-11.636 0,-16.291 L 171.054,310.69 c -4.655,-4.655 -11.636,-4.655 -16.291,0 L 12.8,442.182 C 4.655,449.164 0,460.8 0,471.273 Z\"\n   style=\"fill:#b06328\" />\n<rect\n   id=\"rect4\"\n   height=\"48.871532\"\n   width=\"32.580688\"\n   style=\"fill:#b0c4d8;stroke-width:0.99999\"\n   transform=\"matrix(0.70710678,0.70710678,0.70710678,-0.70710678,0,0)\"\n   y=\"-98.485909\"\n   x=\"345.75119\" />\n<path\n   id=\"path6\"\n   d=\"m 192,320 -5.818,5.818 -11.636,-11.636 34.909,-34.909 23.273,23.273 L 215.273,320 v 0 c -6.982,-6.982 -16.291,-6.982 -23.273,0 z\"\n   style=\"fill:#99b4cd\" />\n<path\n   id=\"path8\"\n   d=\"M 337.455,0 C 434.036,0 512,77.964 512,174.545 512,271.126 434.036,349.09 337.455,349.09 240.874,349.09 162.91,271.126 162.91,174.545 162.91,77.964 240.873,0 337.455,0 Z m 0,314.182 c 76.8,0 139.636,-62.836 139.636,-139.636 0,-76.8 -62.836,-139.637 -139.636,-139.637 -76.8,0 -139.636,62.836 -139.636,139.636 0,76.8 62.836,139.637 139.636,139.637 z\"\n   style=\"fill:#c4d7e5\" />\n\n<path\n   id=\"path12\"\n   d=\"m 406.109,190.836 c -5.818,-44.218 -40.727,-79.127 -84.945,-84.945 H 320 c -19.782,-2.327 -20.945,-30.255 -2.327,-33.745 11.636,-2.327 23.273,-2.327 34.909,-1.164 45.382,6.982 81.455,43.055 87.273,87.273 2.327,11.636 1.164,24.436 -1.164,34.909 -3.491,19.782 -31.418,17.455 -33.745,-2.327 1.163,1.163 1.163,-10e-4 1.163,-10e-4 z\"\n   style=\"opacity:0.622581;fill:#ffffff;fill-opacity:1\" />\n\n<path\n   id=\"path16\"\n   d=\"m 337.455,349.091 v 0 c -96.582,0 -174.545,-77.964 -174.545,-174.545 v 0 c 5.818,0 11.636,4.655 11.636,11.636 2.327,39.564 19.782,75.636 46.545,102.4 26.764,27.927 64,45.382 104.727,48.873 6.982,0 11.637,5.818 11.637,11.636 z\"\n   style=\"fill:#b0c9db\" />\n<path\n   id=\"path18\"\n   d=\"M 337.455,0 V 0 C 434.036,0 512,77.964 512,174.545 v 0 c -5.818,0 -11.636,-4.655 -11.636,-11.636 C 498.036,124.509 481.745,89.6 457.309,64 429.382,34.909 390.982,15.127 349.091,11.636 342.109,11.636 337.455,5.818 337.455,0 Z\"\n   style=\"fill:#e2e7f0\" />\n<path\n   id=\"path20\"\n   d=\"m 13.964,441.018 6.982,-5.818 c -5.818,6.982 -9.309,16.291 -9.309,25.6 v 0 c 0,15.127 18.618,20.945 29.091,10.473 L 162.909,349.091 c 6.982,-6.982 17.455,-6.982 24.436,0 l 11.636,11.636 -126.836,136.145 c -6.982,6.982 -16.291,12.8 -25.6,13.964 C 33.745,512 20.945,507.345 12.8,499.2 4.655,491.055 0,478.255 1.164,465.455 c 0,-9.31 5.818,-17.455 12.8,-24.437 z\"\n   style=\"fill:#a35425\" />\n<path\n   id=\"path22\"\n   d=\"m 133.818,360.727 c 1.164,0 3.491,0 4.655,-1.164 l 29.091,-29.091 c 2.327,-2.327 2.327,-5.818 0,-8.145 -2.327,-2.327 -5.818,-2.327 -8.145,0 l -29.091,29.091 c -2.327,2.327 -2.327,5.818 0,8.145 -0.001,1.164 2.327,1.164 3.49,1.164 z\"\n   style=\"fill:#c97629\" />\n<g\n   transform=\"matrix(-1,0,0,1,512,0)\"\n   id=\"g24\">\n</g>\n<g\n   transform=\"matrix(-1,0,0,1,512,0)\"\n   id=\"g26\">\n</g>\n<g\n   transform=\"matrix(-1,0,0,1,512,0)\"\n   id=\"g28\">\n</g>\n<g\n   transform=\"matrix(-1,0,0,1,512,0)\"\n   id=\"g30\">\n</g>\n<g\n   transform=\"matrix(-1,0,0,1,512,0)\"\n   id=\"g32\">\n</g>\n<g\n   transform=\"matrix(-1,0,0,1,512,0)\"\n   id=\"g34\">\n</g>\n<g\n   transform=\"matrix(-1,0,0,1,512,0)\"\n   id=\"g36\">\n</g>\n<g\n   transform=\"matrix(-1,0,0,1,512,0)\"\n   id=\"g38\">\n</g>\n<g\n   transform=\"matrix(-1,0,0,1,512,0)\"\n   id=\"g40\">\n</g>\n<g\n   transform=\"matrix(-1,0,0,1,512,0)\"\n   id=\"g42\">\n</g>\n<g\n   transform=\"matrix(-1,0,0,1,512,0)\"\n   id=\"g44\">\n</g>\n<g\n   transform=\"matrix(-1,0,0,1,512,0)\"\n   id=\"g46\">\n</g>\n<g\n   transform=\"matrix(-1,0,0,1,512,0)\"\n   id=\"g48\">\n</g>\n<g\n   transform=\"matrix(-1,0,0,1,512,0)\"\n   id=\"g50\">\n</g>\n<g\n   transform=\"matrix(-1,0,0,1,512,0)\"\n   id=\"g52\">\n</g>\n</svg>`\n","export default function create_scope(scope_container: Element) {\r\n    const current_scope_classname = \"current-scope\";\r\n    const current_scope = scope_container.getElementsByClassName(current_scope_classname)[0];\r\n    const new_scope = document.createElement(\"div\");\r\n    new_scope.classList.add(current_scope_classname);\r\n    new_scope.classList.add(\"scope\");\r\n    current_scope.appendChild(new_scope);\r\n    current_scope.classList.remove(current_scope_classname);\r\n    return new_scope;\r\n}","import add_to_scope from \"../animation_effects/add_to_scope\";\r\nimport create_scope from \"../animation_effects/create_scope\";\r\nimport create_variable_element from \"../animation_effects/create_scope_var_element\";\r\nimport { animation_state } from \"../animation_state_types\";\r\nimport get_element_from_ast from \"./get_element_from_ast\";\r\n\r\nexport function restore_code(state: animation_state, code_container: Element) {\r\n    const replacements_dict = state.expression_value_replacements;\r\n    const program = state.ast_program;\r\n    const code = code_container.getElementsByClassName(\"code\")[0];\r\n    const code_wrapper = code ? code : code_container;\r\n    if (program) {\r\n        const  code_inner_element = get_element_from_ast(program, replacements_dict);\r\n        code_wrapper.innerHTML = \"\";\r\n        console.log(replacements_dict)\r\n        // const  code_inner_element = get_element_from_ast(program, replacements_dict);\r\n        code_wrapper.appendChild(code_inner_element);\r\n    }\r\n};\r\n\r\nexport function restore_scope(state: animation_state, scope_container: Element) {\r\n    const scope_manager = state.scope;\r\n    const main_scope = scope_container.getElementsByClassName(\"main-scope\")[0];\r\n    main_scope.classList.add(\"current-scope\");\r\n    main_scope.innerHTML = \"\";\r\n\r\n    if (!scope_manager) return;\r\n    for (const scope of scope_manager.scopes_list) {\r\n        create_scope(scope_container);\r\n        for (const variable_name of Object.keys(scope.scoped_variables)) {\r\n            const variable = scope.get_variable(variable_name);\r\n            const variable_element = create_variable_element(variable!);\r\n            add_to_scope(scope_container, variable_element);\r\n        }\r\n    }\r\n};\r\n\r\nexport default function restore_state(state: animation_state, code_container: Element, scope_container: Element) {\r\n    restore_code(state, code_container);\r\n    restore_scope(state, scope_container);\r\n};","import gsap from 'gsap';\r\nimport add_or_remove_class_to_text_containers from './add_or_remove_class_to_text_containers';\r\nimport highlight_element from './highlight_element';\r\n\r\nexport default function highlight_ast_object(code_container: Element, ast_id: number | null, speed: number) {\r\n    // if (speed == 0) return;\r\n    return new Promise(resolve => {\r\n        const element = code_container.getElementsByClassName(\"ast-object-\" + ast_id)[0];\r\n        highlight_element(code_container, \"lowlight\");\r\n        highlight_element(element);\r\n        resolve();\r\n        // setTimeout(resolve, speed);\r\n    });\r\n}","import set_replacement from '../animation_effects/set_replacement';\r\nimport { is_binary_expression, is_function_definition, is_constant_expression, is_identifier_expression } from \"../../code_editors/js/interpreter/ast_types\";\r\nimport step_creator_type from './step_creator_type';\r\nimport { animation_state, is_evaluation_change } from '../animation_state_types';\r\nimport get_element_from_ast from './get_element_from_ast';\r\nimport scroll_to from '../animation_effects/scroll_to';\r\nimport search_identifier from '../animation_effects/search_identifier_effect';\r\nimport restore_state from './restore_state';\r\nimport highlight_ast_object from '../animation_effects/highlight_ast_object';\r\n\r\n\r\nconst evaluation_replacement_step_creator: step_creator_type = function (before: animation_state, after: animation_state, code_element: Element, scope_element: Element) {\r\n\r\n    if (!after.last_state_change) return null;\r\n    if (!is_evaluation_change(after.last_state_change)) return null;\r\n    const last_change_details = after.last_state_change.details;\r\n    // const returned_value = last_change_details.returned_value;\r\n    const ast_object = last_change_details.evaluated_ast;\r\n    const ast_id = ast_object.id;\r\n\r\n    async function animate(speed: number) {\r\n        const ast_element = code_element.getElementsByClassName(\"ast-object-\" + ast_id)[0];\r\n        ast_element.innerHTML = ast_element.innerHTML; //this prevents any unwanted poping during get_element_from_ast\r\n        let replacement_element = get_element_from_ast(ast_object, after.expression_value_replacements);\r\n        await scroll_to(ast_element, code_element, speed);\r\n        if (is_identifier_expression(ast_object)) {\r\n            await search_identifier(ast_object.token.value, after.scope!, scope_element, speed);\r\n        }\r\n        // console.log({ ast_element }, { replacement_element });\r\n        // console.log({ code_element })\r\n        await set_replacement(code_element, ast_element, replacement_element, speed);\r\n    }\r\n\r\n    async function rollback(speed: number) {\r\n        restore_state(before, code_element, scope_element);\r\n        if (before.highlighted_ast_ids.length > 0) {\r\n            // highlight_element(code_element, \"lowlight\");\r\n            for (const id of before.highlighted_ast_ids) {\r\n                const el = code_element.getElementsByClassName(\"ast-object-\" + id)[0];\r\n                await scroll_to(el, code_element, speed);\r\n                await highlight_ast_object(code_element, id, speed);\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        name: \"evaluation replacement\",\r\n        animate,\r\n        rollback\r\n    }\r\n\r\n}\r\n\r\nexport default evaluation_replacement_step_creator;","export default function create_scope(scope_container:Element){\r\n    const current_scope_classname=  \"current-scope\";\r\n    const current_scope = scope_container.getElementsByClassName(current_scope_classname)[0];\r\n    const parent_scope = current_scope.parentElement as HTMLDivElement;\r\n    parent_scope.classList.add(current_scope_classname);\r\n    current_scope.remove();\r\n}","import create_scope from '../animation_effects/create_scope';\r\nimport fade_in from '../animation_effects/fade_in';\r\nimport remove_scope from '../animation_effects/remove_scope';\r\nimport vertical_collapse from '../animation_effects/vertical_collapse';\r\nimport vertical_expand from '../animation_effects/vertical_expand';\r\nimport { animation_state } from '../animation_state_types';\r\nimport step_creator_type from './step_creator_type';\r\n\r\nconst new_scope_step_creator: step_creator_type = function (before: animation_state, after: animation_state, code_element: Element, scope_element: Element) {\r\n\r\n    async function animate(speed: number) {\r\n        // const current_scope = scope_element.getElementsByClassName(\"current-scope\")[0];\r\n        // await vertical_collapse(current_scope, speed);\r\n        const new_scope = create_scope(scope_element);\r\n        await vertical_expand(new_scope, speed);\r\n    }\r\n\r\n    async function rollback(speed: number) {\r\n        remove_scope(scope_element);\r\n    }\r\n\r\n    return {\r\n        name: \"new scope\",\r\n        animate,\r\n        rollback\r\n    }\r\n\r\n}\r\n\r\nexport default new_scope_step_creator;","import set_replacement from '../animation_effects/set_replacement';\r\nimport step_creator_type from './step_creator_type';\r\nimport { animation_state, for_loop_restoration_change_info_type } from '../animation_state_types';\r\nimport get_element_from_ast from './get_element_from_ast';\r\nimport scroll_to from '../animation_effects/scroll_to';\r\n\r\n\r\nconst for_loop_restoration_step_creator: step_creator_type = function (before: animation_state, after: animation_state, code_element: Element, scope_element: Element) {\r\n    const change = after.last_state_change as for_loop_restoration_change_info_type;\r\n\r\n    async function animate(speed: number) {\r\n        const for_ast = change.details.for_ast;\r\n        const for_element = code_element.getElementsByClassName(\"ast-object-\" + for_ast.id)[0];\r\n        const restored_for_element = get_element_from_ast(for_ast, {});\r\n        await scroll_to(for_element, code_element, speed);\r\n        await set_replacement(code_element, for_element, restored_for_element, speed);\r\n    }\r\n\r\n    async function rollback(speed: number) {\r\n        // const ast_element = code_element.getElementsByClassName(\"ast-object-\" + ast_id)[0];\r\n        // let replacement_element = get_element_from_ast(ast_object, before.expression_value_replacements);\r\n        // await scroll_to(ast_element,code_element,speed);\r\n        // await set_replacement(code_element, ast_element, replacement_element, speed);\r\n    }\r\n\r\n    return {\r\n        name: \"evaluation replacement\",\r\n        animate,\r\n        rollback\r\n    }\r\n\r\n}\r\n\r\nexport default for_loop_restoration_step_creator;","import gsap from 'gsap';\r\nexport default function fade_in(element: Element, speed: number) {\r\n    gsap.set(element, { opacity: 0 });\r\n    return new Promise(r => {\r\n        gsap.to(element, { duration: speed / 1000, opacity: 1, onComplete: r })\r\n    });\r\n}","import gsap from 'gsap';\r\nexport default function fade_out(element: Element, speed: number) {\r\n    gsap.set(element, { opacity: 1 });\r\n    return new Promise(r => {\r\n        gsap.to(element, { duration: speed / 1000, opacity: 0, onComplete: r })\r\n    });\r\n}","import gsap from 'gsap';\r\nfunction hide_scope(scope_container: Element, speed: number) {\r\n    return new Promise(resolve => {\r\n        gsap.to(scope_container, {duration:speed/1000, right:\"-100%\", onComplete:resolve });\r\n    })\r\n};\r\n\r\nexport default hide_scope;","import gsap from 'gsap';\r\nfunction show_scope(scope_container: Element, speed: number) {\r\n    return new Promise(resolve => {\r\n        gsap.to(scope_container, { duration: speed / 1000, right: 70, onComplete: resolve })\r\n    })\r\n}\r\n\r\nexport default show_scope;","import add_to_scope from '../animation_effects/add_to_scope';\r\nimport create_variable_element from '../animation_effects/create_scope_var_element';\r\nimport drag_element_to_another from '../animation_effects/drag_one_element_to_another';\r\nimport fade_in from '../animation_effects/fade_in';\r\nimport fade_out from '../animation_effects/fade_out';\r\nimport hide_scope from '../animation_effects/hide_scope';\r\nimport remove_from_scope from '../animation_effects/remove_from_scope';\r\nimport scroll_to from '../animation_effects/scroll_to';\r\nimport show_scope from '../animation_effects/show_scope';\r\nimport { add_to_scope_info_type, animation_state } from '../animation_state_types';\r\nimport animation_step_type from '../animation_step_type';\r\nimport step_creator_type from './step_creator_type';\r\n\r\nconst starting_step_creator: step_creator_type = function (before: animation_state, after: animation_state, code_element: Element, scope_element: Element) {\r\n\r\n\r\n    const step: animation_step_type = {\r\n        name: \"show scope\",\r\n        animate: async (speed: number) => {\r\n            const current_scope = <HTMLElement>scope_element.getElementsByClassName(\"current-scope\")[0];\r\n            current_scope.style.opacity = \"0\";\r\n            await show_scope(scope_element, speed);\r\n            await fade_in(current_scope, speed);\r\n            \r\n            \r\n            \r\n        },\r\n        rollback: async (speed: number) => {\r\n            const current_scope = <HTMLElement>scope_element.getElementsByClassName(\"current-scope\")[0];\r\n            await hide_scope(scope_element, speed);\r\n            await fade_out(current_scope, speed);\r\n        }\r\n    }\r\n\r\n    return step;\r\n    // const show_scope_step = create_show_scope_step(scope_container);\r\n    // const hide_scope_step = create_hide_scope_step(scope_container);\r\n    // return merge_steps([show_scope_step, step, hide_scope_step]);\r\n\r\n}\r\n\r\nexport default starting_step_creator;\r\n","import add_to_scope from '../animation_effects/add_to_scope';\r\nimport create_variable_element from '../animation_effects/create_scope_var_element';\r\nimport drag_element_to_another from '../animation_effects/drag_one_element_to_another';\r\nimport hide_scope from '../animation_effects/hide_scope';\r\nimport highlight_element from '../animation_effects/highlight_element';\r\nimport remove_from_scope from '../animation_effects/remove_from_scope';\r\nimport scroll_to from '../animation_effects/scroll_to';\r\nimport show_scope from '../animation_effects/show_scope';\r\nimport { add_to_scope_info_type, animation_state } from '../animation_state_types';\r\nimport animation_step_type from '../animation_step_type';\r\nimport step_creator_type from './step_creator_type';\r\n\r\nconst ending_step_creator: step_creator_type = function (before: animation_state, after: animation_state, code_element: Element, scope_element: Element) {\r\n\r\n\r\n    const step: animation_step_type = {\r\n        name: \"hide scope\",\r\n        animate: async (speed: number) => {\r\n            highlight_element(code_element);\r\n            await hide_scope(scope_element, speed);\r\n            \r\n        },\r\n        rollback: async (speed: number) => {\r\n            await show_scope(scope_element, speed);\r\n        }\r\n    }\r\n\r\n    return step;\r\n    // const show_scope_step = create_show_scope_step(scope_container);\r\n    // const hide_scope_step = create_hide_scope_step(scope_container);\r\n    // return merge_steps([show_scope_step, step, hide_scope_step]);\r\n\r\n}\r\n\r\nexport default ending_step_creator;\r\n","// import gsap from 'gsap';\r\n\r\nexport default function clear_highlights(code_container: Element) {\r\n    console.log(\"clearing_highlights in\", code_container);\r\n    const previously_highlighted = document.getElementsByClassName(\"highlighted\");\r\n    while (previously_highlighted.length) {\r\n        previously_highlighted[0].classList.remove(\"highlighted\");\r\n    }\r\n    const previously_non_highlighted = document.getElementsByClassName(\"lowlighted\");\r\n    while (previously_non_highlighted.length) {\r\n        previously_non_highlighted[0].classList.remove(\"lowlighted\");\r\n    }\r\n\r\n}\r\n\r\n","import set_replacement from '../animation_effects/set_replacement';\r\nimport step_creator_type from './step_creator_type';\r\nimport { animation_state, assignment_info_type } from '../animation_state_types';\r\nimport create_variable_element from '../animation_effects/create_scope_var_element';\r\nimport highlight_element from '../animation_effects/highlight_element';\r\nimport highlight_ast_object from '../animation_effects/highlight_ast_object';\r\nimport clear_highlights from '../animation_effects/clear_highlights';\r\nimport scroll_to from '../animation_effects/scroll_to';\r\n\r\n\r\nconst assignment_step_creator: step_creator_type = function (before: animation_state, after: animation_state, code_element: Element, scope_element: Element) {\r\n\r\n    const change = after.last_state_change as assignment_info_type;\r\n    const change_details = change.details;\r\n\r\n    async function animate(speed: number) {\r\n        const variable_element = scope_element.getElementsByClassName(\"scope-var-id-\" + change_details.variable.id)[0];\r\n        const new_var_element = create_variable_element(change_details.variable);\r\n        const variable_value_emt = variable_element.getElementsByClassName(\"scope-value\")[0];\r\n        const new_content = new_var_element.getElementsByClassName(\"scope-value\")[0];\r\n\r\n        console.log({ variable_value_emt }, { new_content });\r\n        await Promise.all(\r\n            [\r\n                highlight_ast_object(code_element, change_details.ast_origin.id, speed),\r\n                set_replacement(scope_element.getElementsByClassName(\"scrollable-y\")[0], variable_value_emt, new_content, speed)\r\n            ]\r\n        )\r\n\r\n        highlight_element(code_element);\r\n    }\r\n\r\n    async function rollback(speed: number) {\r\n\r\n        const variable_element = scope_element.getElementsByClassName(\"scope-var-id-\" + change_details.variable.id)[0];\r\n        const old_var = before.scope!.get_variable(change_details.variable.name);\r\n        const old_var_element = create_variable_element(old_var!);\r\n        const variable_value_emt = variable_element.getElementsByClassName(\"scope-value\")[0];\r\n        const new_content = old_var_element.getElementsByClassName(\"scope-value\")[0];\r\n\r\n        console.log({ variable_value_emt }, { new_content });\r\n        await set_replacement(scope_element.getElementsByClassName(\"scrollable-y\")[0], variable_value_emt, new_content, speed);\r\n        clear_highlights(code_element);\r\n        if (before.highlighted_ast_ids.length > 0) {\r\n            // highlight_element(code_element, \"lowlight\");\r\n            for (const id of before.highlighted_ast_ids) {\r\n                const el = code_element.getElementsByClassName(\"ast-object-\" + id)[0];\r\n                await scroll_to(el, code_element, speed);\r\n                await highlight_ast_object(code_element, id, speed);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const assignment_step = {\r\n        name: \"variable assignment\",\r\n        animate,\r\n        rollback\r\n    }\r\n\r\n    return assignment_step;\r\n\r\n\r\n}\r\n\r\nexport default assignment_step_creator;","import step_creator_type from './step_creator_type';\r\nimport { animation_state,  index_evaluation_info_type } from '../animation_state_types';\r\nimport highlight_element from '../animation_effects/highlight_element';\r\n\r\n\r\nconst index_evaluation_step_creator: step_creator_type = function (before: animation_state, after: animation_state, code_element: Element, scope_element: Element) {\r\n    const change = after.last_state_change as index_evaluation_info_type;\r\n\r\n    function animate(speed: number) {\r\n        // console.log({after})\r\n        return new Promise(r => {\r\n            const ast_expression = change.details.access_by_index_expression;\r\n            const expand_struct = after.expression_value_replacements[ast_expression.expression.id].expand_struct.triggers;\r\n            const index_value = change.details.index_value;\r\n            if(expand_struct){\r\n                expand_struct.expand();\r\n                const property_element = expand_struct.expanded_element.getElementsByClassName(\"item-element-\" + index_value)[0];\r\n                setTimeout(() => {\r\n                    highlight_element(expand_struct.expanded_element, \"lowlight\");\r\n                    setTimeout(() => {\r\n                        highlight_element(property_element);\r\n                        setTimeout(()=>{\r\n                            expand_struct.collapse();\r\n                            highlight_element(expand_struct.expanded_element);\r\n                            r();\r\n                        }, speed / 1.5);\r\n                    }, speed / 3);\r\n                }, speed / 3);\r\n            }\r\n        });\r\n    }\r\n\r\n    async function rollback(speed: number) {\r\n    }\r\n\r\n    return {\r\n        name: \"property search\",\r\n        animate,\r\n        rollback\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default index_evaluation_step_creator;","import set_replacement from '../animation_effects/set_replacement';\r\nimport create_ast_expand_struct from '../animation_effects/create_ast_expand_struct';\r\nimport step_creator_type from './step_creator_type';\r\nimport { animation_state, value_update_info_type } from '../animation_state_types';\r\nimport restore_state from './restore_state';\r\n\r\nconst value_update_step_creator: step_creator_type = (before: animation_state, after: animation_state, code_element: Element, scope_element: Element) => {\r\n\r\n    const change = after.last_state_change as value_update_info_type;\r\n    const change_details = change.details;\r\n\r\n    async function animate(speed: number) {\r\n        const val = change_details.expression_value;\r\n        const value_elements_to_update = Array.from(scope_element.getElementsByClassName(\"scope-value-\" + val.id));\r\n        console.log({ value_elements_to_update }, \"scope-value-\" + val.id);\r\n        const promises_array: Promise<any>[] = [];\r\n        for (const el of value_elements_to_update) {\r\n            // await set_replacement(code_element, ast_element, replacement_element, speed);\r\n            const replacement = create_ast_expand_struct(val);\r\n            console.log({ el });\r\n            console.log({ \"scope_parent:\": el.parentElement });\r\n            promises_array.push(set_replacement(scope_element, el, replacement.element, speed));\r\n        }\r\n        await Promise.all(\r\n            promises_array\r\n        );\r\n    }\r\n\r\n    async function rollback(speed: number) {\r\n        restore_state(before, code_element, scope_element);\r\n    }\r\n\r\n    const step = {\r\n        name: \"value update\",\r\n        animate,\r\n        rollback\r\n    }\r\n\r\n    return step;\r\n\r\n}\r\n\r\nexport default value_update_step_creator;","import animation_step_type from './animation_step_type';\r\n\r\nexport default function merge_steps(steps: (animation_step_type | null)[]): animation_step_type | null {\r\n\r\n    const non_null_steps = steps.filter(s => s);\r\n    if (non_null_steps.length == 0) return null;\r\n    const animate_functions: ((speed: number) => (Promise<any> | void))[] = [];\r\n    const rollback_functions: ((speed: number) => (Promise<any> | void))[] = [];\r\n\r\n    for (let i = 0; i < steps.length; i++) {\r\n        const step = steps[i];\r\n        if (step)\r\n            animate_functions.push(step.animate);\r\n    }\r\n    for (let i = steps.length - 1; i >= 0; i--) {\r\n        const step = steps[i];\r\n        if (step)\r\n            rollback_functions.push(step.rollback);\r\n    }\r\n\r\n    let returned_step: animation_step_type = {\r\n        name: non_null_steps.map(s => s!.name).join(\", \"),\r\n        animate: async function (speed: number) {\r\n            for (let i = 0; i < animate_functions.length; i++) {\r\n                const animate_f = animate_functions[i];\r\n                await animate_f(speed);\r\n            }\r\n        },\r\n        rollback: async function (speed: number) {\r\n            for (let i = 0; i < rollback_functions.length; i++) {\r\n                const rollback_f = rollback_functions[i];\r\n                await rollback_f(speed);\r\n            }\r\n        }\r\n    }\r\n\r\n    return returned_step;\r\n}\r\n","import set_replacement from '../animation_effects/set_replacement';\r\nimport { is_binary_expression, is_function_definition, is_constant_expression, is_identifier_expression } from \"../../code_editors/js/interpreter/ast_types\";\r\nimport step_creator_type from './step_creator_type';\r\nimport { animation_state, execution_start_change_info_type, is_evaluation_change } from '../animation_state_types';\r\nimport get_element_from_ast from './get_element_from_ast';\r\nimport scroll_to from '../animation_effects/scroll_to';\r\nimport search_identifier from '../animation_effects/search_identifier_effect';\r\nimport restore_state from './restore_state';\r\nimport highlight_ast_object from '../animation_effects/highlight_ast_object';\r\nimport highlight_element from '../animation_effects/highlight_element';\r\nimport clear_highlights from '../animation_effects/clear_highlights';\r\n\r\n\r\nconst execution_start_step_creator: step_creator_type = function (before: animation_state, after: animation_state, code_element: Element, scope_element: Element) {\r\n\r\n    const last_change = after.last_state_change as execution_start_change_info_type;\r\n    const last_change_details = last_change.details;\r\n    // const returned_value = last_change_details.returned_value;\r\n\r\n    async function animate(speed: number) {\r\n        const el = code_element.getElementsByClassName(\"ast-object-\" + last_change_details.ast_statement.id)[0];\r\n        await scroll_to(el, code_element, speed);\r\n        await highlight_ast_object(code_element, last_change_details.ast_statement.id, speed)\r\n\r\n    }\r\n\r\n    async function rollback(speed: number) {\r\n        clear_highlights(code_element);\r\n        if (before.highlighted_ast_ids.length > 0) {\r\n            // highlight_element(code_element, \"lowlight\");\r\n            for (const id of before.highlighted_ast_ids) {\r\n                const el = code_element.getElementsByClassName(\"ast-object-\" + id)[0];\r\n                await scroll_to(el, code_element, speed);\r\n                await highlight_ast_object(code_element, id, speed);\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        name: \"execution start\",\r\n        animate,\r\n        rollback\r\n    }\r\n\r\n}\r\n\r\nexport default execution_start_step_creator;","import gsap from 'gsap';\r\nexport default async function vertical_collapse(el: Element, speed: number) {\r\n    const htmlel = el as HTMLElement;\r\n    const dummy = el.cloneNode(true) as HTMLElement;\r\n    htmlel.after(dummy);\r\n    // const final_height = htmlel.getBoundingClientRect().height;\r\n    htmlel.remove();\r\n    dummy.style.overflow= \"hidden\";\r\n    await gsap.to(dummy, { duration: speed / 1000, height: 0 });\r\n    dummy.after(htmlel);\r\n    dummy.remove();\r\n}","import create_scope from '../animation_effects/create_scope';\r\nimport fade_in from '../animation_effects/fade_in';\r\nimport remove_scope from '../animation_effects/remove_scope';\r\nimport vertical_collapse from '../animation_effects/vertical_collapse';\r\nimport vertical_expand from '../animation_effects/vertical_expand';\r\nimport { animation_state } from '../animation_state_types';\r\nimport step_creator_type from './step_creator_type';\r\n\r\nconst scope_end_step_creator: step_creator_type = function (before: animation_state, after: animation_state, code_element: Element, scope_element: Element) {\r\n\r\n    async function animate(speed: number) {\r\n        const current_scope = scope_element.getElementsByClassName(\"current-scope\")[0];\r\n        await vertical_collapse(current_scope, speed);\r\n        remove_scope(scope_element);\r\n    }\r\n\r\n    async function rollback(speed: number) {\r\n        create_scope(scope_element);\r\n    }\r\n\r\n    return {\r\n        name: \"scope end\",\r\n        animate,\r\n        rollback\r\n    }\r\n\r\n}\r\n\r\nexport default scope_end_step_creator;","import vertical_collapse from '../animation_effects/vertical_collapse';\r\nimport vertical_expand from '../animation_effects/vertical_expand';\r\nimport { animation_state } from '../animation_state_types';\r\nimport { restore_scope } from './restore_state';\r\nimport step_creator_type from './step_creator_type';\r\n\r\nconst scope_change_step_creator: step_creator_type = function (before: animation_state, after: animation_state, code_element: Element, scope_element: Element) {\r\n\r\n    async function animate(speed: number) {\r\n        await vertical_collapse(scope_element, speed);\r\n        restore_scope(after, scope_element);\r\n        await vertical_expand(scope_element, speed);\r\n    }\r\n\r\n    async function rollback(speed: number) {\r\n        restore_scope(before, scope_element);\r\n    }\r\n\r\n    return {\r\n        name: \"scope change\",\r\n        animate,\r\n        rollback\r\n    }\r\n\r\n}\r\n\r\nexport default scope_change_step_creator;","import step_creator_type from './step_creator_type';\r\nimport { after_function_retake_change_info_type, animation_state, execution_start_change_info_type, is_evaluation_change } from '../animation_state_types';\r\nimport scroll_to from '../animation_effects/scroll_to';\r\nimport highlight_ast_object from '../animation_effects/highlight_ast_object';\r\nimport clear_highlights from '../animation_effects/clear_highlights';\r\n\r\n\r\nconst after_function_retake_step_creator: step_creator_type = function (before: animation_state, after: animation_state, code_element: Element, scope_element: Element) {\r\n\r\n    const last_change = after.last_state_change as after_function_retake_change_info_type;\r\n    // const returned_value = last_change_details.returned_value;\r\n\r\n    async function animate(speed: number) {\r\n        await clear_highlights(code_element);\r\n        if (before.highlighted_ast_ids.length > 0) {\r\n            // highlight_element(code_element, \"lowlight\");\r\n            for (const id of after.highlighted_ast_ids) {\r\n                const el = code_element.getElementsByClassName(\"ast-object-\" + id)[0];\r\n                await scroll_to(el, code_element, speed);\r\n                await highlight_ast_object(code_element, id, speed);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    async function rollback(speed: number) {\r\n        clear_highlights(code_element);\r\n        if (before.highlighted_ast_ids.length > 0) {\r\n            // highlight_element(code_element, \"lowlight\");\r\n            for (const id of before.highlighted_ast_ids) {\r\n                const el = code_element.getElementsByClassName(\"ast-object-\" + id)[0];\r\n                await scroll_to(el, code_element, speed);\r\n                await highlight_ast_object(code_element, id, speed);\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        name: \"retake after function\",\r\n        animate,\r\n        rollback\r\n    }\r\n\r\n}\r\n\r\nexport default after_function_retake_step_creator;","import animation_step_type from './animation_step_type';\r\nimport { executer_options } from '../code_editors/js/interpreter/ast_executer';\r\nimport ScopeManager from '../code_editors/js/interpreter/parsing_files/scope_objects';\r\nimport { expression_value } from '../code_editors/js/interpreter/parsing_files/expression_value_types';\r\nimport { nearley_custom_object, statement_type, expression_type, for_statement_type, access_by_index_expression_type, function_definition_type, get_related_ast_ids, is_block, expression_call_type, program_type, is_binary_expression, is_function_definition, is_constant_expression } from '../code_editors/js/interpreter/ast_types';\r\nimport { animation_state, state_change_argument, evaluation_change_info_type, for_loop_restoration_change_info_type, expval_replacements_dict_type, add_to_scope_info_type, new_scope_info_type, before_function_call_info_type, state_change_info_type, assignment_info_type, index_evaluation_info_type, value_update_info_type, program_start_change_info_type, execution_start_change_info_type, scope_end_info_type, scope_change_info_type, after_function_retake_change_info_type } from './animation_state_types'\r\nimport create_steps_from_states from './create_steps_from_states';\r\nimport ScopeVariable from '../code_editors/js/interpreter/parsing_files/variable';\r\nimport create_ast_expand_struct from './animation_effects/create_ast_expand_struct';\r\n\r\n// import { Map, List } from 'immutable';\r\n\r\nexport default class AnimationStepsCreator {\r\n\r\n    code_scroller: Element;\r\n    code_container: Element;\r\n    scope_container: Element;\r\n    original_contents_dictionary: { [key: string]: string };\r\n    unfiltered_animation_steps: (animation_step_type | null)[];\r\n    animations_enabled_flag: boolean;\r\n    ids_to_skip_replacement: number[];\r\n    highlighted_ids_before_call: number[];\r\n    // ast_expand_triggers: ast_expand_triggers_dict_type;\r\n    animation_states: animation_state[];\r\n\r\n    constructor(code_wrapper: Element, scope_container: Element) {\r\n        this.code_scroller = code_wrapper;\r\n        this.code_container = code_wrapper.getElementsByClassName(\"code\")[0] as Element;\r\n        this.scope_container = scope_container;\r\n        this.original_contents_dictionary = {};\r\n        this.unfiltered_animation_steps = [];\r\n        this.animations_enabled_flag = true;\r\n        this.ids_to_skip_replacement = [];\r\n        this.highlighted_ids_before_call = [];\r\n        // this.ast_expand_triggers = {};\r\n        const initial_state: animation_state = {\r\n            ast_program: null,\r\n            last_state_change: null,\r\n            scope: null,\r\n            expression_value_replacements: {},\r\n            highlighted_ast_ids: []\r\n        };\r\n        this.animation_states = [\r\n            initial_state\r\n        ];\r\n    }\r\n\r\n\r\n\r\n    skip_replacement(ast_id: number) {\r\n        if (!this.ids_to_skip_replacement.includes(ast_id))\r\n            this.ids_to_skip_replacement.push(ast_id);\r\n    }\r\n\r\n    push_state(change_info: state_change_info_type, state_changes: state_change_argument = {}) {\r\n        const new_state: animation_state = { ...this.get_last_state(), last_state_change: change_info, ...state_changes };\r\n        this.animation_states.push(new_state);\r\n    }\r\n\r\n    get_last_state(): animation_state {\r\n        return this.animation_states.slice(-1)[0];\r\n    }\r\n\r\n    remove_replacements(ast_ids: number[]) {\r\n        const previous_replacements = this.get_last_state().expression_value_replacements;\r\n        const new_ast_replacements = { ...previous_replacements };\r\n        for (const id of ast_ids) {\r\n            delete new_ast_replacements[id];\r\n        }\r\n        // console.log({ previous_replacements, new_ast_replacements, removed_ids: ast_ids });\r\n        return new_ast_replacements;\r\n    }\r\n\r\n    mix_replacements(new_replacements: expval_replacements_dict_type): expval_replacements_dict_type {\r\n        const old_replacements = this.get_last_state().expression_value_replacements;\r\n        const mixed_replacements = { ...old_replacements, ...new_replacements };\r\n        return mixed_replacements;\r\n    }\r\n\r\n    push_step(step: animation_step_type | null) {\r\n        if (this.animations_enabled_flag)\r\n            this.unfiltered_animation_steps.push(step);\r\n    }\r\n\r\n    get_ast_component(ast_id: number) {\r\n        const element = this.code_container.getElementsByClassName(\"ast-object-\" + ast_id)[0];\r\n        return element as HTMLSpanElement;\r\n    }\r\n\r\n\r\n    save_original_content(ast_object: nearley_custom_object) {\r\n        if (ast_object.id !== undefined) {\r\n            const id_string = ast_object.id;\r\n            if (!(id_string in this.original_contents_dictionary))\r\n                this.original_contents_dictionary[id_string] = this.get_ast_component(ast_object.id).innerHTML;\r\n        }\r\n    }\r\n\r\n    /* -------------------------------- callbacks ------------------------------- */\r\n\r\n\r\n    on_program_start(ast_program: program_type, scope: ScopeManager) {\r\n        const state_change: program_start_change_info_type = {\r\n            change_type: \"program_start\",\r\n            details: {}\r\n        }\r\n\r\n        const state_changes: state_change_argument = {\r\n            ast_program\r\n        }\r\n\r\n        this.push_state(state_change, state_changes);\r\n    }\r\n\r\n    on_before_execution(ast_statement: statement_type, scope: ScopeManager) {\r\n        this.save_original_content(ast_statement);\r\n\r\n        const state_change: execution_start_change_info_type = {\r\n            change_type: \"execution_start\",\r\n            details: {\r\n                ast_statement\r\n            }\r\n        }\r\n\r\n        const state_changes: state_change_argument = {\r\n            highlighted_ast_ids: [ast_statement.id]\r\n        }\r\n\r\n        this.push_state(state_change, state_changes);\r\n    }\r\n\r\n    on_after_execution(ast_statement: statement_type, scope: ScopeManager) {\r\n        // const after_block_step = create_after_block_execution_step(ast_statement, this.scope_container);\r\n        // this.push_step(after_block_step);\r\n    }\r\n\r\n    on_before_evaluation(ast_expression: expression_type, scope: ScopeManager) {\r\n        this.save_original_content(ast_expression);\r\n        // const after_declaration_step = create_after_declaration_step(this.code_container, ast_expression, scope, this.scope_container);\r\n        // this.push_step(after_declaration_step);\r\n    }\r\n\r\n    on_after_evaluation(ast_expression: expression_type, scope: ScopeManager, returned_value: expression_value) {\r\n\r\n        if (is_binary_expression(ast_expression) && (ast_expression.operator.value === \"=\")) return;\r\n        if (is_function_definition(ast_expression)) return;\r\n        if (is_constant_expression(ast_expression)) return;\r\n        if (returned_value.is_internal) return;\r\n        const ast_id = ast_expression.id;\r\n        const state_change: evaluation_change_info_type = {\r\n            change_type: \"evaluation\",\r\n            details: {\r\n                evaluated_ast: ast_expression,\r\n                returned_value\r\n            }\r\n        }\r\n\r\n        const state_changes: state_change_argument = {\r\n            scope: scope,\r\n            expression_value_replacements: this.mix_replacements({\r\n                [ast_id]: {\r\n                    expression_value: returned_value,\r\n                    expand_struct: create_ast_expand_struct(returned_value)\r\n                }\r\n            })\r\n        }\r\n\r\n        this.push_state(state_change, state_changes);\r\n\r\n    }\r\n\r\n    on_before_for_loop(for_object: for_statement_type) {\r\n        const change_info: for_loop_restoration_change_info_type = {\r\n            change_type: \"for loop restoration\",\r\n            details: {\r\n                for_ast: for_object,\r\n            }\r\n        }\r\n\r\n        const new_state: state_change_argument = {\r\n            expression_value_replacements: this.remove_replacements(get_related_ast_ids(for_object)),\r\n        }\r\n\r\n        this.push_state(change_info, new_state);\r\n    }\r\n\r\n    on_variable_declaration(ast_origin: nearley_custom_object, variable: ScopeVariable, scope_manager: ScopeManager) {\r\n        const state_change: add_to_scope_info_type = {\r\n            change_type: \"add_to_scope\",\r\n            details: {\r\n                variable,\r\n                ast_origin\r\n            }\r\n        }\r\n\r\n        const new_state: state_change_argument = {\r\n            scope: scope_manager,\r\n        }\r\n\r\n        this.push_state(state_change, new_state);\r\n    }\r\n\r\n    on_assignment(ast_origin: nearley_custom_object, variable: ScopeVariable, scope_manager: ScopeManager) {\r\n        // console.log(\"assignment\");\r\n        const state_change: assignment_info_type = {\r\n            change_type: \"assignment\",\r\n            details: {\r\n                variable,\r\n                ast_origin\r\n            }\r\n        }\r\n\r\n        const new_state: state_change_argument = {\r\n            scope: scope_manager,\r\n        }\r\n\r\n        this.push_state(state_change, new_state);\r\n\r\n    }\r\n\r\n    on_index_evaluation(ast_expression: access_by_index_expression_type, index_value: string) {\r\n        const state_change: index_evaluation_info_type = {\r\n            change_type: \"index_evaluation\",\r\n            details: {\r\n                access_by_index_expression: ast_expression,\r\n                index_value\r\n            }\r\n        }\r\n        this.push_state(state_change);\r\n    }\r\n\r\n    on_value_update(exp_val: expression_value) {\r\n        const state_change: value_update_info_type = {\r\n            change_type: \"value_update\",\r\n            details: {\r\n                expression_value: exp_val,\r\n            }\r\n        }\r\n        this.push_state(state_change);\r\n    }\r\n\r\n    on_after_if_condition_eval() {\r\n\r\n    }\r\n\r\n    on_before_function_call(function_definition: function_definition_type, function_call_expression: expression_call_type, evaluated_parameters: expression_value[]) {\r\n        const state_change: before_function_call_info_type = {\r\n            change_type: \"before_function_call\",\r\n            details: {\r\n                function: function_definition,\r\n                expression_call: function_call_expression,\r\n                parameter_values: evaluated_parameters\r\n            }\r\n        }\r\n\r\n        this.highlighted_ids_before_call = [...this.get_last_state().highlighted_ast_ids];\r\n        const old_replacements = this.get_last_state().expression_value_replacements;\r\n        const ids_to_remove = get_related_ast_ids(function_definition);\r\n        const new_replacements = this.remove_replacements(ids_to_remove);\r\n        console.log({ old_replacements, ids_to_remove, new_replacements })\r\n        const new_state: state_change_argument = {\r\n            expression_value_replacements: new_replacements,\r\n        }\r\n\r\n        this.push_state(state_change, new_state);\r\n    }\r\n\r\n    on_function_call(function_definition: function_definition_type) {\r\n        const state_change: after_function_retake_change_info_type = {\r\n            change_type: \"after_function_retake\",\r\n            details: {}\r\n        }\r\n\r\n        const state_changes: state_change_argument = {\r\n            highlighted_ast_ids: this.highlighted_ids_before_call\r\n        }\r\n\r\n        this.push_state(state_change, state_changes);\r\n        // const step = create_after_function_call_restore_step(this.code_scroller, this.original_contents_dictionary, function_definition);\r\n        // this.push_step(step);\r\n    }\r\n\r\n    on_new_scope(scope: ScopeManager) {\r\n        const state_change: new_scope_info_type = {\r\n            change_type: \"new_scope\",\r\n            details: {}\r\n        }\r\n\r\n        const new_state: state_change_argument = {\r\n            scope,\r\n        }\r\n\r\n        this.push_state(state_change, new_state);\r\n    }\r\n\r\n\r\n    on_scope_end(scope: ScopeManager) {\r\n        const state_change: scope_end_info_type = {\r\n            change_type: \"scope_end\",\r\n            details: {}\r\n        }\r\n\r\n        const new_state: state_change_argument = {\r\n            scope,\r\n        }\r\n\r\n        this.push_state(state_change, new_state);\r\n    }\r\n\r\n    on_scope_change(scope: ScopeManager) {\r\n        const state_change: scope_change_info_type = {\r\n            change_type: \"scope_change\",\r\n            details: {}\r\n        }\r\n\r\n        const new_state: state_change_argument = {\r\n            scope,\r\n        }\r\n\r\n        this.push_state(state_change, new_state);\r\n    }\r\n\r\n    get_callbacks_dictionary(): executer_options {\r\n        return {\r\n            on_program_start: this.on_program_start.bind(this),\r\n            on_before_execution: this.on_before_execution.bind(this),\r\n            on_after_execution: this.on_after_execution.bind(this),\r\n            on_before_evaluation: this.on_before_evaluation.bind(this),\r\n            on_after_evaluation: this.on_after_evaluation.bind(this),\r\n            on_before_for_loop: this.on_before_for_loop.bind(this),\r\n            on_variable_declaration: this.on_variable_declaration.bind(this),\r\n            on_after_if_condition_eval: this.on_after_if_condition_eval.bind(this),\r\n            on_assignment: this.on_assignment.bind(this),\r\n            on_index_evaluation: this.on_index_evaluation.bind(this),\r\n            on_value_update: this.on_value_update.bind(this),\r\n            on_function_call: this.on_function_call.bind(this),\r\n            on_before_function_call: this.on_before_function_call.bind(this),\r\n            on_new_scope: this.on_new_scope.bind(this),\r\n            on_scope_end: this.on_scope_end.bind(this),\r\n            on_scope_change: this.on_scope_change.bind(this),\r\n        }\r\n    }\r\n\r\n\r\n\r\n    get_animation_steps(): animation_step_type[] {\r\n        return create_steps_from_states(this.animation_states, this.code_scroller, this.scope_container);\r\n        // return this.unfiltered_animation_steps.filter(s => s) as animation_step_type[];\r\n    }\r\n}","import { animation_state, is_add_to_scope_change, is_after_function_retake_change, is_assignment_change, is_before_function_call_change, is_evaluation_change, is_execution_start_change, is_for_loop_restoration, is_index_evaluation_change, is_new_scope_change, is_scope_change_change, is_scope_end_change, is_value_update_change } from \"./animation_state_types\";\r\nimport animation_step_type from \"./animation_step_type\";\r\nimport add_to_scope_step_creator from \"./step_creators/add_to_scope_step_creator\";\r\nimport before_function_call_step_creator from \"./step_creators/before_function_call_step_creator\";\r\nimport after_evaluation_replacement_step_creator from \"./step_creators/evaluation_replacement_step_creator\";\r\nimport new_scope_step_creator from \"./step_creators/new_scope_step_creator\";\r\nimport for_loop_restoration_step_creator from \"./step_creators/for_loop_restoration_step_creator\";\r\nimport step_creator_type from \"./step_creators/step_creator_type\";\r\nimport starting_step_creator from \"./step_creators/starting_step_creator\";\r\nimport ending_step_creator from \"./step_creators/ending_step_creator\";\r\nimport assignment_step_creator from \"./step_creators/assignment_step_creator\";\r\nimport index_evaluation_step_creator from \"./step_creators/index_evaluation_step_creator\";\r\nimport value_update_step_creator from \"./step_creators/value_update_step_creator\";\r\nimport merge_steps from \"./merge_steps\";\r\nimport execution_start_step_creator from \"./step_creators/execution_start_step_creator\";\r\nimport scope_end_step_creator from \"./step_creators/scope_end_step_creator\";\r\nimport scope_change_step_creator from \"./step_creators/scope_change_step_creator\";\r\nimport after_function_retake_step_creator from \"./step_creators/after_function_retake_step_creator\";\r\n\r\nexport default function create_steps_from_states(states: animation_state[], code_element: Element, scope_element: Element): animation_step_type[] {\r\n    let steps: (animation_step_type)[] = [];\r\n    let last_state = states[0];\r\n\r\n    const starting_step = starting_step_creator(\r\n        last_state,\r\n        last_state,\r\n        code_element,\r\n        scope_element\r\n    )\r\n\r\n    if (starting_step) {\r\n        steps.push(starting_step);\r\n    }\r\n\r\n    let step_pending_to_merge: animation_step_type | null = null;\r\n\r\n\r\n    for (const state of states) {\r\n        let step: animation_step_type | null = null;\r\n        let step_creator: step_creator_type | null = null;\r\n        const state_change = state.last_state_change;\r\n        let is_pending_step = false;\r\n        if (state_change === null)\r\n            continue;\r\n\r\n        // TODO: this is better implemented with a dictionary,\r\n        //  the only advantage of this are type guards \r\n\r\n        if (is_evaluation_change(state_change)) {\r\n            step_creator = after_evaluation_replacement_step_creator;\r\n        } else if (is_for_loop_restoration(state_change)) {\r\n            step_creator = for_loop_restoration_step_creator;\r\n        } else if (is_new_scope_change(state_change)) {\r\n            step_creator = new_scope_step_creator;\r\n        } else if (is_scope_end_change(state_change)) {\r\n            step_creator = scope_end_step_creator;\r\n        } else if (is_scope_change_change(state_change)) {\r\n            step_creator = scope_change_step_creator;\r\n        } else if (is_add_to_scope_change(state_change)) {\r\n            step_creator = add_to_scope_step_creator;\r\n        } else if (is_assignment_change(state_change)) {\r\n            step_creator = assignment_step_creator;\r\n        } else if (is_execution_start_change(state_change)) {\r\n            step_creator = execution_start_step_creator;\r\n        } else if (is_after_function_retake_change(state_change)) {\r\n            step_creator = after_function_retake_step_creator;\r\n        } else if (is_index_evaluation_change(state_change)) {\r\n            step_creator = index_evaluation_step_creator;\r\n            is_pending_step = true;\r\n        } else if (is_value_update_change(state_change)) {\r\n            step_creator = value_update_step_creator;\r\n        } else if (is_before_function_call_change(state_change)) {\r\n            step_creator = before_function_call_step_creator;\r\n        }\r\n\r\n        if (step_creator) {\r\n            step = step_creator(\r\n                last_state,\r\n                state,\r\n                code_element,\r\n                scope_element\r\n            );\r\n            if (step) {\r\n                if (is_pending_step)\r\n                    step_pending_to_merge = step;\r\n                else {\r\n                    if (step_pending_to_merge) {\r\n                        let merged_step = merge_steps([step_pending_to_merge, step]);\r\n                        step_pending_to_merge = null;\r\n                        if (merged_step)\r\n                            steps.push(merged_step);\r\n                    } else\r\n                        steps.push(step);\r\n                }\r\n            }\r\n        }\r\n\r\n        last_state = state;\r\n    }\r\n\r\n\r\n    const ending_step = ending_step_creator(\r\n        last_state,\r\n        last_state,\r\n        code_element,\r\n        scope_element\r\n    )\r\n\r\n    if (ending_step) {\r\n        steps.push(ending_step);\r\n    }\r\n\r\n\r\n\r\n    return steps;\r\n}","// const nearley = require(\"nearley\");\r\n// const grammar = require(\"./nearley_grammar\");\r\nimport nearley from \"nearley\";\r\nconst grammar = require(\"./nearley_grammar\");\r\n\r\n// const parser = new nearley.Parser(nearley.Grammar.fromCompiled(grammar));\r\n// parser.feed(\"w=3;\");\r\n// console.log(parser.results);\r\nconst parser_creator = ()=>{\r\n    const parser = new nearley.Parser(nearley.Grammar.fromCompiled(grammar));\r\n    return parser;\r\n}\r\n\r\nexport default parser_creator; ","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"backward\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v10l-9-5 9-5zM10 5v10l-9-5 9-5z\"\n});\n\nvar SvgBackward = function SvgBackward(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"icon\",\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBackward, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/backward.79fcb18e.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"skip_previous\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9.516 12l8.484-6v12zM6 6h2.016v12h-2.016v-12z\"\n});\n\nvar SvgSkipPrevious = function SvgSkipPrevious(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"svg-font\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSkipPrevious, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/skip_previous.b41eb794.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"skip_next\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.984 6h2.016v12h-2.016v-12zM6 18v-12l8.484 6z\"\n});\n\nvar SvgSkipNext = function SvgSkipNext(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"svg-font\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSkipNext, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/skip_next.ef00aea9.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"play_arrow\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.016 5.016l10.969 6.984-10.969 6.984v-13.969z\"\n});\n\nvar SvgPlayArrow = function SvgPlayArrow(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"svg-font\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPlayArrow, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/play_arrow.df00469d.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"pause\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14.016 5.016h3.984v13.969h-3.984v-13.969zM6 18.984v-13.969h3.984v13.969h-3.984z\"\n});\n\nvar SvgPause = function SvgPause(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"svg-font\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPause, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/pause.7170d0f6.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m504.117 293.77-9.966-5.372c-22.293 4.397-77.884 14.068-135.576 14.068-75.161 0-153.886-26.538-227.667-76.744-4.821-3.28-7.304-9.058-6.366-14.813.267-1.637 4.248-24.771 19.661-53.162-8.902-23.71-19.053-47.731-61.196-56.913-25.999-5.664-43.19 2.347-53.035 10.065-27.912 21.88-29.839 64.692-29.967 69.501-.133 5.018 2.252 9.771 6.356 12.662.822.579 82.49 58.155 107.533 80.003 18.715 16.327 27.455 40.517 23.38 64.707l-6.405 38.021c-1.566 9.296 1.027 18.756 7.114 25.955s14.985 11.327 24.413 11.327h26.369c8.688 0 16.813-3.424 22.88-9.641 6.068-6.217 9.293-14.424 9.082-23.108l-1.061-43.604c12.005 4.595 24.242 8.526 36.58 11.745 24.005 6.265 55.736 10.085 89.349 10.758.161.003.589.012.946.498.376.511.249.952.201 1.118l-3.292 11.372c-2.822 9.746-.944 19.988 5.152 28.099s15.412 12.763 25.558 12.763h23.47c8.693 0 17.122-3.606 23.125-9.894 6.002-6.287 9.214-14.874 8.812-23.556l-1.206-26.032c16.909-4.372 32.97-12.637 47.503-20.116 9.421-4.848 18.32-9.427 26.402-12.458 5.508-2.065 9.3-7.16 9.699-13.029s-2.67-11.429-7.848-14.22zm-424.302-114.915c-8.409 0-14.636-6.873-15-15-.363-8.101 7.154-15 15-15 8.409 0 14.636 6.873 15 15 .363 8.1-7.154 15-15 15z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m332.541 210.872-6.671 59.775c10.974 1.202 21.886 1.82 32.705 1.82 11.405 0 22.786-.412 33.851-1.099l-22.007-67.351z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m156.389 206.644c13.179 8.575 26.496 16.329 39.895 23.272l53.052-71.831 8.552-44.23c-.309.059-.616.119-.923.179-46.723 9.204-84.86 43.143-99.331 88.512-.47 1.47-.883 2.84-1.245 4.098z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m396.081 185.96 27.051 82.786c14.962-1.608 28.628-3.534 40.055-5.358-4.255-16.036-12.488-41.346-26.928-66.838-9.844-17.379-21.105-32.231-33.625-44.486z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m280.122 156.887 41.693 25.438 46.023-8.33 8.28-42.822c-22.526-13.956-48.008-21.142-75.867-21.142-3.806 0-7.5.098-11.12.257z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m302.907 205.931-35.58-21.709-43.422 58.792c24.06 10.356 48.262 18.053 72.3 22.971z\"\n}));\n\nvar SvgSlow = function SvgSlow(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    enableBackground: \"new 0 0 512 512\",\n    className: \"svg-font\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSlow, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/slow.83b251bd.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m23.508.003c-4.685-.084-10.028 2.365-13.41 6.164-3.232.061-6.379 1.386-8.696 3.703-.135.133-.183.332-.124.512.06.181.216.312.404.339l3.854.552-.476.533c-.177.198-.168.499.02.687l6.427 6.427c.097.097.225.146.354.146.119 0 .238-.042.333-.127l.533-.476.552 3.854c.027.188.175.326.354.386.046.015.094.022.143.022.142 0 .287-.062.387-.161 2.285-2.285 3.61-5.432 3.671-8.664 3.803-3.389 6.272-8.73 6.163-13.409-.007-.266-.222-.481-.489-.488zm-4.608 8.632c-.487.487-1.127.731-1.768.731s-1.281-.244-1.768-.731c-.974-.975-.974-2.561 0-3.536.975-.975 2.561-.975 3.536 0s.975 2.562 0 3.536z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m2.724 16.905c-1.07 1.07-2.539 5.904-2.703 6.451-.053.176-.004.367.125.497.096.096.223.147.354.147.048 0 .096-.007.144-.021.547-.164 5.381-1.633 6.451-2.703 1.205-1.205 1.205-3.166 0-4.371-1.206-1.205-3.166-1.204-4.371 0z\"\n});\n\nvar SvgFast = function SvgFast(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"bold\",\n    enableBackground: \"new 0 0 24 24\",\n    viewBox: \"0 0 24 24\",\n    className: \"svg-font\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgFast, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/fast.6ac8ce0a.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useRef, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { ReactComponent as BackwardIcon } from './animation_controls_icons/backward.svg';\r\nimport { ReactComponent as PreviousIcon } from './animation_controls_icons/skip_previous.svg';\r\nimport { ReactComponent as NextIcon } from './animation_controls_icons/skip_next.svg';\r\nimport { ReactComponent as PlayIcon } from './animation_controls_icons/play_arrow.svg';\r\nimport { ReactComponent as PauseIcon } from './animation_controls_icons/pause.svg';\r\nimport { ReactComponent as SlowIcon } from './animation_controls_icons/slow.svg';\r\nimport { ReactComponent as FastIcon } from './animation_controls_icons/fast.svg';\r\nimport './input_range.css';\r\n\r\nexport type playback_state = \"playing\" | \"playing_backwards\" | \"playing_step_forward\" | \"playing_step_backwards\" | \"paused\"\r\n\r\nexport interface playback_state_change_ref {\r\n    current: (s: playback_state) => void\r\n};\r\n\r\ntype props_type = {\r\n    on_playback_state_change_ref: playback_state_change_ref,\r\n    rollback_all_handler: () => void,\r\n    play_handler: () => void,\r\n    pause_handler: () => void,\r\n    step_forward_handler: () => void,\r\n    step_backward_handler: () => void,\r\n    speed_change_handler: (speed: number) => void,\r\n    default_speed: number,\r\n}\r\n\r\n\r\n\r\nfunction AnimationControls(props: props_type) {\r\n\r\n    const [playbackState, setPlaybackState] = useState<playback_state>(\"paused\");\r\n    props.on_playback_state_change_ref.current = (s: playback_state) => {\r\n        setPlaybackState(s);\r\n    }\r\n\r\n    function set_speed_handler(event: React.ChangeEvent<HTMLInputElement>) {\r\n        const speed = parseFloat(event.target.value);\r\n        props.speed_change_handler(speed);\r\n    }\r\n\r\n    return (\r\n        <div className=\"controls-container show\">\r\n            <div className=\"form-group text-light\"\r\n            >\r\n                <label className=\"text-light\">\r\n                    Playback Controls\r\n                </label>\r\n                <div className=\"input-group btn-group-vertical playback-buttons\">\r\n\r\n                    <Button disabled={playbackState === \"paused\" ? false : true} variant=\"secondary\"\r\n                        onClick={props.rollback_all_handler}\r\n                    >\r\n                        <BackwardIcon />\r\n                    </Button>\r\n\r\n                    <Button disabled={playbackState === \"paused\" ? false : true} variant=\"secondary\"\r\n                        onClick={props.step_backward_handler}\r\n                    >\r\n                        <PreviousIcon />\r\n                    </Button>\r\n                    <Button disabled={playbackState === \"paused\" ? false : true} variant=\"secondary\"\r\n                        onClick={props.step_forward_handler}\r\n                    >\r\n                        <NextIcon />\r\n                    </Button>\r\n                    <Button disabled={(playbackState === \"playing\" || playbackState === \"playing_backwards\") ? false : true} variant=\"secondary\"\r\n                        onClick={props.pause_handler}\r\n                    >\r\n                        <PauseIcon />\r\n                    </Button>\r\n                    <Button disabled={playbackState === \"paused\" ? false : true} variant=\"secondary\"\r\n                        onClick={props.play_handler}\r\n                    >\r\n                        <PlayIcon />\r\n                    </Button>\r\n                </div >\r\n\r\n                <div className=\"speed-control  py-4\">\r\n                    <div className=\"speed-icon\" ><SlowIcon /></div>\r\n                    <input style={{ direction: \"rtl\" }} type=\"range\" name=\"animation-speed\" min=\"0\" max=\"500\" step=\"100\" defaultValue={props.default_speed} onChange={set_speed_handler} id=\"\" />\r\n                    <div className=\"speed-icon\" ><FastIcon /></div>\r\n                </div>\r\n            </div >\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default AnimationControls;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"edit-pencil\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.3 3.7l4 4-12.3 12.3h-4v-4l12.3-12.3zM13.7 2.3l2.3-2.3 4 4-2.3 2.3-4-4z\"\n});\n\nvar SvgEdit = function SvgEdit(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    className: \"icon\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgEdit, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/edit.b935f77b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"film\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M30.335 26.445c-0.128-0.221-0.538-0.289-1.231-0.202-1.275 0.165-2.201-0.251-2.778-1.251-0.437-0.756-0.55-1.516-0.339-2.28s0.836-1.854 1.874-3.272l0.649-0.904c1.928-2.663 2.323-4.979 1.186-6.95-1.157-2.006-4.5-1.837-6.903-0.806-1.944-4.009-6.040-6.78-10.793-6.78-6.628 0-12 5.373-12 12s5.372 12 12 12c6.627 0 12-5.373 12-12 0-1.469-0.277-2.871-0.76-4.171 0.811-0.291 1.781-0.502 2.696-0.536 1.202-0.044 2.29 0.208 2.722 0.956 0.963 1.669 0.498 3.641-1.395 5.913l-0.388 0.466c-2.214 2.657-2.743 4.984-1.591 6.982 0.466 0.806 1.207 1.381 2.225 1.727 1.018 0.345 1.879 0.312 2.585-0.096 0.35-0.202 0.431-0.468 0.241-0.796zM6.5 18.562c-1.381 0-2.5-1.119-2.5-2.5 0-1.38 1.119-2.5 2.5-2.5s2.5 1.119 2.5 2.5c0 1.381-1.119 2.5-2.5 2.5zM12 24.062c-1.381 0-2.5-1.119-2.5-2.5s1.119-2.5 2.5-2.5 2.5 1.119 2.5 2.5-1.119 2.5-2.5 2.5zM11.020 16.062c0-0.552 0.449-1 1.001-1s1 0.447 1 1c0 0.553-0.448 1-1 1s-1.001-0.447-1.001-1zM12 13.062c-1.381 0-2.5-1.119-2.5-2.5s1.119-2.5 2.5-2.5 2.5 1.119 2.5 2.5c0 1.381-1.119 2.5-2.5 2.5zM17.5 18.562c-1.381 0-2.5-1.119-2.5-2.5 0-1.38 1.119-2.5 2.5-2.5s2.5 1.119 2.5 2.5c0 1.381-1.119 2.5-2.5 2.5z\"\n});\n\nvar SvgFilm = function SvgFilm(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 32 32\",\n    className: \"icon\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgFilm, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/film.6c16e89f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { ReactNode, useRef, useState } from 'react';\r\nimport AnimationControls, { playback_state_change_ref } from './AnimationControls';\r\nimport { ReactComponent as EditIcon } from './toolbar_icons/edit.svg';\r\nimport { ReactComponent as FilmIcon } from './toolbar_icons/film.svg';\r\ntype state_mode_type = \"edit\" | \"playback\";\r\n\r\n\r\n\r\ntype props_type = {\r\n    on_playback_state_change_ref: playback_state_change_ref,\r\n    state_mode: state_mode_type,\r\n    toggle_mode_handler: () => void,\r\n    rollback_all_handler: () => void,\r\n    play_handler: () => void,\r\n    pause_handler: () => void,\r\n    step_forward_handler: () => void,\r\n    step_backward_handler: () => void,\r\n    speed_change_handler: (speed: number) => void\r\n    default_speed: number,\r\n}\r\n\r\n\r\nfunction Toolbar(props: props_type) {\r\n\r\n    // const [stateMode, setstateMode] = useState<state_mode_type>(\"edit\");\r\n    let controls: ReactNode | null = null;\r\n\r\n    let ModeIcon = EditIcon;\r\n\r\n    if (props.state_mode === \"playback\") {\r\n        controls = (\r\n            <AnimationControls\r\n                on_playback_state_change_ref={props.on_playback_state_change_ref}\r\n                play_handler={props.play_handler}\r\n                pause_handler={props.pause_handler}\r\n                rollback_all_handler={props.rollback_all_handler}\r\n                step_backward_handler={props.step_backward_handler}\r\n                step_forward_handler={props.step_forward_handler}\r\n                speed_change_handler={props.speed_change_handler}\r\n                default_speed={props.default_speed}\r\n            />\r\n        );\r\n        ModeIcon = FilmIcon;\r\n    }\r\n\r\n    return (\r\n        <div className=\"toolbar\">\r\n            <div className=\"triggers toolbar-section\">\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-light\">Set Mode</label>\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <div onClick={props.toggle_mode_handler} className=\"btn btn-secondary \">Toggle</div>\r\n                        </div>\r\n                        <div className=\"input-group-append\">\r\n                            <span className=\"input-group-text\" >\r\n                                <ModeIcon />\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"input-group\">\r\n                    <div className=\"toolbar-button btn btn-secondary\" onClick={props.toggle_mode_handler}>toggle mode</div>\r\n                    <div className=\"toolbar-button btn btn-secondary\" onClick={props.toggle_mode_handler}>toggle mode</div>\r\n                </div> */}\r\n                {/* <div className=\"minimize-trigger minimize-scope\" onClick={toggle_scope_visibility} dangerouslySetInnerHTML={{ __html: stack_icon }} /> */}\r\n                {/* <div className=\"minimize-trigger minimize-playback-controls\" onClick={toggle_play_controls_visibility} dangerouslySetInnerHTML={{ __html: movie_icon }} /> */}\r\n            </div>\r\n            <div className=\"toolbar-section\">\r\n                {controls}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Toolbar;","\r\nimport { startState } from 'codemirror';\r\nimport moo_lexer from '../interpreter/nearley_lexer';\r\n\r\nexport default function (config, parserConfig) {\r\n\r\n    // Interface\r\n\r\n    return {\r\n        startState: function(){\r\n            moo_lexer.reset();\r\n            // console.log(moo_lexer.save());\r\n            return {\r\n                current: moo_lexer.save()\r\n            };\r\n        },\r\n        token: function (stream, state) {\r\n            // console.log(state);\r\n            let returned = \"whatever\";\r\n            try {\r\n                if (!stream.eol()) {\r\n                    const stream_string = stream.string.slice(stream.column());\r\n                    moo_lexer.reset(stream_string, state.current);\r\n                    const next_token = moo_lexer.next();\r\n                    if (next_token) {\r\n                        for (let i = 0; i < next_token.value.length; i++) {\r\n                            stream.next();\r\n                        }\r\n                        returned = next_token.type;\r\n                    } else {\r\n                        stream.next();\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n                returned = \"whatever\";\r\n            }\r\n            state.current = moo_lexer.save();\r\n            return returned;\r\n        },\r\n    };\r\n}","import React, { useContext } from 'react'\r\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\r\nimport tinylang from './tinylang';\r\nimport 'codemirror/lib/codemirror.css';\r\n// import 'codemirror/theme/material.css';\r\nrequire('codemirror/mode/javascript/javascript');\r\n\r\nconst lexer = require('../interpreter/nearley_lexer');\r\ntype props_type = {\r\n    code: string,\r\n    on_code_change: (c: string) => void,\r\n}\r\n\r\nexport default function TokenBasedCode(props: props_type) {\r\n\r\n    return (\r\n        <CodeMirror\r\n            value={props.code}\r\n            options={{\r\n                mode: 'tinylang',\r\n                // theme: 'material',\r\n                lineNumbers: true\r\n            }}\r\n            defineMode={{\r\n                name: \"tinylang\",\r\n                fn: tinylang\r\n            }}\r\n            // editorWillUnmount={(editor)=>{\r\n\r\n            // }}\r\n            onChange={(editor, data, value) => {\r\n                // console.log({ value });\r\n                props.on_code_change(value);\r\n            }}\r\n        />\r\n    )\r\n\r\n}\r\n","import React, { useContext } from 'react';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport ASTComponent from '../ast_components/ASTComponent';\r\nimport { program_type } from '../interpreter/ast_types';\r\n\r\ntype props_type = {\r\n    ast_program: program_type\r\n}\r\n\r\nexport default function ASTBasedCode(props: props_type) {\r\n    let ast_program = props.ast_program;\r\n    console.log(ast_program);\r\n    return (\r\n        <div className=\"height-100 pos-rel\"\r\n            dangerouslySetInnerHTML={{\r\n                __html: ReactDOMServer.renderToString(\r\n                    <>\r\n                        <div\r\n                            // ref={code_mirror}\r\n                            className=\"code-viewer nice-scroll-bar\"\r\n                        >\r\n                            <div className=\"code-line-references\">\r\n                                {/* {line_references} */}\r\n                            </div>\r\n                            <pre className=\"code\" spellCheck=\"false\">\r\n                                <ASTComponent ast_object={ast_program} />\r\n                            </pre>\r\n\r\n                        </div >\r\n                        <div className=\"scopes-wrapper hidden\">\r\n                            <div className=\"scopes-container\">\r\n                                <div className=\"height-100 nice-scroll-bar scrollable-y pos-rel\">\r\n\r\n                                    <div className=\"scopes-fullheight-wrapper\">\r\n\r\n                                        <div className=\"scope main-scope current-scope\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )\r\n            }}\r\n        >\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport TokenBasedCode from './TokenBasedCode';\r\nimport ASTBasedCode from './ASTBasedCode';\r\nimport { program_type } from '../interpreter/ast_types';\r\n\r\n\r\ntype code_renderer_props = {\r\n    code: string,\r\n    on_code_change: (c: string) => void,\r\n    program_status?: program_type | null;\r\n}\r\n\r\nexport default function CodeRenderer(props: code_renderer_props) {\r\n    const ast_program = props.program_status;\r\n    let code_ref = React.createRef<HTMLDivElement>();\r\n    useEffect(() => {\r\n        const code_element = code_ref.current;\r\n        if(code_element){\r\n\r\n            const url_emts = code_element.getElementsByClassName(\"cm-url\");\r\n            for (let i = 0; i < url_emts.length; i++) {\r\n                const url = url_emts[i];\r\n                const url_str = url.innerHTML;\r\n                url.innerHTML = `<a href=\"${url_str}\">${url_str}</a>`;\r\n            }\r\n        }\r\n    });\r\n\r\n    function CodeSelector() {\r\n        if (!ast_program) {\r\n            return (\r\n                <TokenBasedCode \r\n                on_code_change = {props.on_code_change}\r\n                code={props.code} \r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <ASTBasedCode ast_program={ast_program} />\r\n            )\r\n        }\r\n    }\r\n\r\n    if (!ast_program) {\r\n        console.log(\"rendering with tokens\");\r\n    } else {\r\n        console.log(\"rendering with ast\");\r\n    }\r\n\r\n    return (\r\n        <div ref={code_ref} className=\"height-100\">\r\n            <CodeSelector />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n// import Button from 'react-bootstrap/Button';\r\nimport ASTExecuter from '../code_editors/js/interpreter/ast_executer';\r\nimport animation_step_type from './animation_step_type';\r\nimport AnimationStepsCreator from './animation_steps_creator';\r\nimport { program_type } from '../code_editors/js/interpreter/ast_types';\r\n\r\n// import './code_animator.css';\r\nimport parser_creator from '../code_editors/js/interpreter/n_parser';\r\nimport Toolbar from './Toolbar';\r\nimport CodeRenderer from '../code_editors/js/code_components/CodeRenderer';\r\nimport { playback_state_change_ref, playback_state } from './AnimationControls';\r\nimport './CodeEditor.css';\r\nimport 'toastr/build/toastr.css';\r\nimport './toastr_fix.css';\r\nconst toastr = require(\"toastr\");\r\n\r\ntoastr.options.positionClass = \"toast-bottom-left\";\r\n\r\ntype props_type = {\r\n    code: string\r\n}\r\n\r\ntype ast_program_state_type = program_type | null;\r\n\r\n\r\nfunction CodeAminator(props: props_type) {\r\n    const initial_speed = 300;\r\n    let executer_ref = useRef<ASTExecuter | null>(null);\r\n    let code_ref = useRef<string>(props.code);\r\n    let speed_ref = useRef(initial_speed);\r\n    const [astProgramState, setASTProgramState] = useState<ast_program_state_type>(null);\r\n    const on_playback_state_change_ref: playback_state_change_ref = useRef<(s: playback_state) => void>(() => { });\r\n    let animating_flag_ref = useRef(false);\r\n    let step_info_flag_ref = useRef(false);\r\n    let pause_flag_ref = useRef(false);\r\n    let steps_creator_ref = useRef<AnimationStepsCreator | null>(null);\r\n    let animation_steps_ref = useRef<animation_step_type[]>([]);\r\n    let current_step_ref = useRef(0);\r\n    let containers_ref = React.createRef<HTMLDivElement>();\r\n\r\n    useEffect(() => {\r\n        animation_steps_ref.current = [];\r\n        current_step_ref.current = 0;\r\n        // speed_ref.current = initial_speed;\r\n\r\n        if (astProgramState && containers_ref.current) {\r\n            const code_container = containers_ref.current.getElementsByClassName(\"code-viewer\")[0];\r\n            const scope_container = containers_ref.current.getElementsByClassName(\"scopes-container\")[0];\r\n            // const scope_container = containers_ref.current.querySelector(\".scopes-container .scrollable-y\");\r\n            steps_creator_ref.current = new AnimationStepsCreator(code_container, scope_container!);\r\n            let executer_options = steps_creator_ref.current.get_callbacks_dictionary();\r\n            // toastr.info(\"new executer\");\r\n            executer_ref.current = new ASTExecuter(executer_options);\r\n            executer_ref.current.init(astProgramState);\r\n        } else {\r\n\r\n            executer_ref.current = null;\r\n        }\r\n    },\r\n        // []\r\n    );\r\n\r\n    function on_code_change(code: string) {\r\n        // console.log(\"code_changed_to\", code)\r\n        code_ref.current = code;\r\n    };\r\n\r\n\r\n    function start_animation_flag() {\r\n        animating_flag_ref.current = true;\r\n    };\r\n\r\n    function stop_animation_flag() {\r\n        animating_flag_ref.current = false;\r\n    };\r\n\r\n\r\n    async function animate_next() {\r\n        if (executer_ref.current && steps_creator_ref.current && !executer_ref.current.execution_finished) {\r\n            executer_ref.current.execute();\r\n            animation_steps_ref.current = steps_creator_ref.current.get_animation_steps();\r\n        }\r\n        if (current_step_ref.current < animation_steps_ref.current.length && !animating_flag_ref.current) {\r\n            start_animation_flag();\r\n            const animation_step = animation_steps_ref.current[current_step_ref.current];\r\n            if (step_info_flag_ref.current)\r\n                toastr.info(animation_step.name);\r\n            await animation_step.animate(speed_ref.current);\r\n            current_step_ref.current++;\r\n            stop_animation_flag();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async function animate_previous() {\r\n        if (current_step_ref.current > 0) {\r\n            start_animation_flag();\r\n            const animation_step = animation_steps_ref.current[current_step_ref.current - 1];\r\n            if (step_info_flag_ref.current)\r\n                toastr.info(animation_step.name+\" rolled back\");\r\n            await animation_step.rollback(speed_ref.current);\r\n            current_step_ref.current--;\r\n            stop_animation_flag();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    async function step_forward_handler() {\r\n        on_playback_state_change_ref.current(\"playing_step_forward\");\r\n        step_info_flag_ref.current = true;\r\n        await animate_next();\r\n        step_info_flag_ref.current = false;\r\n        on_playback_state_change_ref.current(\"paused\");\r\n    }\r\n\r\n    async function step_backward_handler() {\r\n        on_playback_state_change_ref.current(\"playing_step_forward\");\r\n        step_info_flag_ref.current = true;\r\n        await animate_previous();\r\n        step_info_flag_ref.current = false;\r\n        on_playback_state_change_ref.current(\"paused\");\r\n    }\r\n\r\n    async function play_handler() {\r\n        on_playback_state_change_ref.current(\"playing\");\r\n        pause_flag_ref.current = false;\r\n        let animate_result = true;\r\n        while (animate_result && !pause_flag_ref.current) {\r\n            animate_result = await animate_next();\r\n        }\r\n        console.log(\"animation finished\");\r\n        on_playback_state_change_ref.current(\"paused\");\r\n    }\r\n\r\n    async function rollback_all_handler() {\r\n        recalculate_program();\r\n        // on_playback_state_change_ref.current(\"playing_backwards\");\r\n        // pause_flag_ref.current = false;\r\n        // let animate_result = true;\r\n        // while (animate_result && !pause_flag_ref.current) {\r\n        //     animate_result = await animate_previous();\r\n        // }\r\n        // console.log(\"animation rolled_back\");\r\n        on_playback_state_change_ref.current(\"paused\");\r\n    }\r\n\r\n    function speed_change_handler(speed: number) {\r\n        speed_ref.current = speed;\r\n    }\r\n\r\n    function pause_handler() {\r\n        pause_flag_ref.current = true;\r\n    }\r\n\r\n    function recalculate_program() {\r\n        const parser = parser_creator();\r\n        try {\r\n            parser.feed(code_ref.current);\r\n            console.log(code_ref.current);\r\n            const results_array = parser.results as any[];\r\n            if (results_array.length > 1) {\r\n                alert(\"multiple interpretations\");\r\n            }\r\n            const new_program = results_array[0];\r\n            console.log(new_program);\r\n            if (new_program) {\r\n                setASTProgramState(new_program);\r\n                console.log(\"holy shit\", new_program);\r\n            }else{\r\n                toastr.error(\"syntax error -U\");\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            toastr.error(\"syntax error\");\r\n        }\r\n    }\r\n\r\n    function toggle_mode_handler() {\r\n        if (!astProgramState) {\r\n            recalculate_program();\r\n        } else {\r\n            setASTProgramState(null);\r\n        }\r\n    }\r\n\r\n    // function toggle_scope_visibility() {\r\n    //     if (containers_ref.current) {\r\n    //         const scope_container = containers_ref.current.getElementsByClassName(\"scopes-container\")[0];\r\n    //         if (scope_container?.classList.contains(\"show\")) {\r\n    //             scope_container.classList.remove(\"hidden\");\r\n    //             scope_container.classList.remove(\"show\");\r\n    //         } else if (scope_container) {\r\n    //             scope_container.classList.remove(\"hidden\");\r\n    //             scope_container.classList.add(\"show\");\r\n    //         } \r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"code-animator\">\r\n            <div className=\"containers\" ref={containers_ref}>\r\n\r\n                <CodeRenderer\r\n                    on_code_change={on_code_change}\r\n                    code={code_ref.current}\r\n                    program_status={astProgramState}\r\n                />\r\n\r\n                <Toolbar\r\n                    state_mode={astProgramState ? \"playback\" : \"edit\"}\r\n                    on_playback_state_change_ref={on_playback_state_change_ref}\r\n                    toggle_mode_handler={toggle_mode_handler}\r\n                    rollback_all_handler={rollback_all_handler}\r\n                    play_handler={play_handler}\r\n                    pause_handler={pause_handler}\r\n                    step_forward_handler={step_forward_handler}\r\n                    step_backward_handler={step_backward_handler}\r\n                    speed_change_handler={speed_change_handler}\r\n                    default_speed={speed_ref.current}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst map_state_to_props = (state: any) => (\r\n    {\r\n        code: state.globals_reducer.code,\r\n    }\r\n);\r\n\r\nexport default connect(map_state_to_props, null)(CodeAminator);\r\n// export default CodeAminator;\r\n","import './App.css';\nimport React from 'react';\nimport { Provider } from 'react-redux'\nimport logo from './logo.svg';\nimport store from './redux/store';\nimport CodeAnimator from './components/code_animators/CodeAnimator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <div className=\"code-animator-container\">\n          <CodeAnimator></CodeAnimator>\n        </div>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}